   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.align	1
  18              		.global	init_timer
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  24              		.type	init_timer, %function
  25              	init_timer:
  26              	.LFB400:
  27              		.file 1 "src/main.c"
   1:src/main.c    **** #include <stdio.h>
   2:src/main.c    **** #include <math.h>
   3:src/main.c    **** #include "sys/cm4.h"
   4:src/main.c    **** #include "sys/devices.h"
   5:src/main.c    **** #include "sys/init.h"
   6:src/main.c    **** #include "sys/clock.h"
   7:src/main.c    **** #include "systick.h"
   8:src/main.c    **** #include "adc.h"
   9:src/main.c    **** #include "led.h"
  10:src/main.c    **** #include "button.h"
  11:src/main.c    **** 
  12:src/main.c    **** volatile uint32_t flag = 0, flag_v = 0, compteur = 0, j=0, jtaille=8, i = 0, mode = 0, compteur2=10
  13:src/main.c    **** volatile float tempo = 0;
  14:src/main.c    **** 
  15:src/main.c    **** #define DO 261
  16:src/main.c    **** #define SID 261
  17:src/main.c    **** #define DOD 277
  18:src/main.c    **** #define REB 277
  19:src/main.c    **** #define RE 293
  20:src/main.c    **** #define RED 311
  21:src/main.c    **** #define MIB 311
  22:src/main.c    **** #define MI 329
  23:src/main.c    **** #define FAB 329
  24:src/main.c    **** #define FA 349
  25:src/main.c    **** #define MID 349
  26:src/main.c    **** #define FAD 367
  27:src/main.c    **** #define SOLB 367
  28:src/main.c    **** #define SOL 392
  29:src/main.c    **** #define SOLD 415
  30:src/main.c    **** #define LAB 415
  31:src/main.c    **** #define LA 440
  32:src/main.c    **** #define LAD 466
  33:src/main.c    **** #define SIB 466
  34:src/main.c    **** #define SI 493
  35:src/main.c    **** #define INAUDIBLE 20000
  36:src/main.c    **** 
  37:src/main.c    **** #define VITESSE 300
  38:src/main.c    **** 
  39:src/main.c    **** /*-------------------------------------------------- Procédures d'initialisation -----------------
  40:src/main.c    **** 
  41:src/main.c    **** void init_timer(){
  28              		.loc 1 41 18 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  42:src/main.c    **** 	TIM2.EGR |= 0x1; /* Autoriser l'accès à tous les registres */
  33              		.loc 1 42 2 view .LVU1
  34              		.loc 1 42 11 is_stmt 0 view .LVU2
  35 0000 0A4B     		ldr	r3, .L2
  36 0002 5A69     		ldr	r2, [r3, #20]
  37 0004 42F00102 		orr	r2, r2, #1
  38 0008 5A61     		str	r2, [r3, #20]
  43:src/main.c    **** 	TIM2.CR1 |= (1<<7); /* ARPE = 1 Activer rechargement automatique */
  39              		.loc 1 43 2 is_stmt 1 view .LVU3
  40              		.loc 1 43 11 is_stmt 0 view .LVU4
  41 000a 1A68     		ldr	r2, [r3]
  42 000c 42F08002 		orr	r2, r2, #128
  43 0010 1A60     		str	r2, [r3]
  44:src/main.c    **** 	TIM2.PSC = 100; /* Comment choisir cette valeur ? */
  44              		.loc 1 44 2 is_stmt 1 view .LVU5
  45              		.loc 1 44 11 is_stmt 0 view .LVU6
  46 0012 6422     		movs	r2, #100
  47 0014 9A62     		str	r2, [r3, #40]
  45:src/main.c    **** 	TIM2.ARR = 10; /* Initialisation période */
  48              		.loc 1 45 2 is_stmt 1 view .LVU7
  49              		.loc 1 45 11 is_stmt 0 view .LVU8
  50 0016 0A22     		movs	r2, #10
  51 0018 DA62     		str	r2, [r3, #44]
  46:src/main.c    **** 	TIM2.CCER |= (1<<4); /* Timer2 actif pour le signal de sortie */
  52              		.loc 1 46 2 is_stmt 1 view .LVU9
  53              		.loc 1 46 12 is_stmt 0 view .LVU10
  54 001a 1A6A     		ldr	r2, [r3, #32]
  55 001c 42F01002 		orr	r2, r2, #16
  56 0020 1A62     		str	r2, [r3, #32]
  47:src/main.c    **** 	TIM2.CCMR1 |= (0b1111<<11); /* Configuer timer 2 en PWR*/
  57              		.loc 1 47 2 is_stmt 1 view .LVU11
  58              		.loc 1 47 13 is_stmt 0 view .LVU12
  59 0022 9A69     		ldr	r2, [r3, #24]
  60 0024 42F4F042 		orr	r2, r2, #30720
  61 0028 9A61     		str	r2, [r3, #24]
  48:src/main.c    **** }
  62              		.loc 1 48 1 view .LVU13
  63 002a 7047     		bx	lr
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 002c 00000000 		.word	TIM2
  68              		.cfi_endproc
  69              	.LFE400:
  70              		.size	init_timer, .-init_timer
  71              		.align	1
  72              		.global	init_buzzer
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu fpv4-sp-d16
  77              		.type	init_buzzer, %function
  78              	init_buzzer:
  79              	.LFB401:
  49:src/main.c    **** 
  50:src/main.c    **** void init_buzzer(){
  80              		.loc 1 50 19 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  51:src/main.c    **** 	GPIOB.MODER |= (0b10<<18); /* Alternate fonction de PB9 */
  85              		.loc 1 51 2 view .LVU15
  86              		.loc 1 51 14 is_stmt 0 view .LVU16
  87 0030 044B     		ldr	r3, .L5
  88 0032 1A68     		ldr	r2, [r3]
  89 0034 42F40022 		orr	r2, r2, #524288
  90 0038 1A60     		str	r2, [r3]
  52:src/main.c    **** 	GPIOB.AFRH |= (1<<4); /* Mode AF1 */
  91              		.loc 1 52 2 is_stmt 1 view .LVU17
  92              		.loc 1 52 13 is_stmt 0 view .LVU18
  93 003a 5A6A     		ldr	r2, [r3, #36]
  94 003c 42F01002 		orr	r2, r2, #16
  95 0040 5A62     		str	r2, [r3, #36]
  53:src/main.c    **** 	
  54:src/main.c    **** }
  96              		.loc 1 54 1 view .LVU19
  97 0042 7047     		bx	lr
  98              	.L6:
  99              		.align	2
 100              	.L5:
 101 0044 00000000 		.word	GPIOB
 102              		.cfi_endproc
 103              	.LFE401:
 104              		.size	init_buzzer, .-init_buzzer
 105              		.align	1
 106              		.global	configuration_potentiometre
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu fpv4-sp-d16
 111              		.type	configuration_potentiometre, %function
 112              	configuration_potentiometre:
 113              	.LFB402:
  55:src/main.c    **** 
  56:src/main.c    **** void configuration_potentiometre(){
 114              		.loc 1 56 35 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
  57:src/main.c    **** 	uint32_t SMPR =0x7;
 118              		.loc 1 57 2 view .LVU21
 119              	.LVL0:
  58:src/main.c    **** 	GPIOB.MODER |= 0x3;
 120              		.loc 1 58 2 view .LVU22
 121              		.loc 1 58 14 is_stmt 0 view .LVU23
 122 0048 0D4A     		ldr	r2, .L8
  56:src/main.c    **** 	uint32_t SMPR =0x7;
 123              		.loc 1 56 35 view .LVU24
 124 004a 08B5     		push	{r3, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 3, -8
 127              		.cfi_offset 14, -4
 128              		.loc 1 58 14 view .LVU25
 129 004c 1368     		ldr	r3, [r2]
 130 004e 43F00303 		orr	r3, r3, #3
 131 0052 1360     		str	r3, [r2]
  59:src/main.c    **** 	enable_ADC1();
 132              		.loc 1 59 2 is_stmt 1 view .LVU26
 133              	.LBB26:
 134              	.LBI26:
 135              		.file 2 "src/sys/devices.h"
   1:src/sys/devices.h **** #ifndef __IO_H
   2:src/sys/devices.h **** #define __IO_H
   3:src/sys/devices.h **** 
   4:src/sys/devices.h **** #include<stdint.h>
   5:src/sys/devices.h **** #include "cm4.h"
   6:src/sys/devices.h **** 
   7:src/sys/devices.h **** #define __reserved(offset) \
   8:src/sys/devices.h ****   uint32_t _reserved_ ## offset
   9:src/sys/devices.h **** 
  10:src/sys/devices.h **** #define __reserved_interval(offset1,offset2) \
  11:src/sys/devices.h ****   uint32_t _reserved_ ## offset1 ## _ ## offset2[((offset2)-(offset1))/4]
  12:src/sys/devices.h **** 
  13:src/sys/devices.h **** /* PM §4.2.10 */ 
  14:src/sys/devices.h **** struct MPU_registers {
  15:src/sys/devices.h ****   uint32_t TYPER;
  16:src/sys/devices.h ****   uint32_t CTRL;
  17:src/sys/devices.h ****   uint32_t RNR;
  18:src/sys/devices.h ****   uint32_t RBAR;
  19:src/sys/devices.h ****   uint32_t RASR;
  20:src/sys/devices.h ****   uint32_t RBAR_A1;
  21:src/sys/devices.h ****   uint32_t RASR_A1;
  22:src/sys/devices.h ****   uint32_t RBAR_A2;
  23:src/sys/devices.h ****   uint32_t RASR_A2;
  24:src/sys/devices.h ****   uint32_t RBAR_A3;
  25:src/sys/devices.h ****   uint32_t RASR_A3;
  26:src/sys/devices.h **** };
  27:src/sys/devices.h **** 
  28:src/sys/devices.h **** /* PM §4.3.11 */ 
  29:src/sys/devices.h **** struct NVIC_registers {
  30:src/sys/devices.h ****   uint32_t ISER[3];
  31:src/sys/devices.h ****   __reserved_interval(0x0c,0x80);
  32:src/sys/devices.h ****   uint32_t ICER[3];
  33:src/sys/devices.h ****   __reserved_interval(0x8c,0x100);
  34:src/sys/devices.h ****   uint32_t ISPR[3];
  35:src/sys/devices.h ****   __reserved_interval(0x10c,0x180);
  36:src/sys/devices.h ****   uint32_t ICPR[3];
  37:src/sys/devices.h ****   __reserved_interval(0x18c,0x200);
  38:src/sys/devices.h ****   uint32_t IABR[3];
  39:src/sys/devices.h ****   __reserved_interval(0x20c,0x300);
  40:src/sys/devices.h ****   uint8_t  IP[81];
  41:src/sys/devices.h ****   uint8_t _reserved_bytes[3];
  42:src/sys/devices.h **** };
  43:src/sys/devices.h **** 
  44:src/sys/devices.h **** /* PM §4.4.19 */ 
  45:src/sys/devices.h **** struct SCB_registers {
  46:src/sys/devices.h ****   uint32_t CPUID;
  47:src/sys/devices.h ****   uint32_t ICSR;
  48:src/sys/devices.h ****   uint32_t VTOR;
  49:src/sys/devices.h ****   uint32_t AIRCR;
  50:src/sys/devices.h ****   uint32_t SCR;
  51:src/sys/devices.h ****   uint32_t CCR;
  52:src/sys/devices.h ****   uint32_t SHPR1;
  53:src/sys/devices.h ****   uint32_t SHPR2;
  54:src/sys/devices.h ****   uint32_t SHPR3;
  55:src/sys/devices.h ****   uint32_t SHCRS;
  56:src/sys/devices.h ****   uint32_t CFSR;
  57:src/sys/devices.h ****   uint32_t HFSR;
  58:src/sys/devices.h ****   uint32_t MMAR;
  59:src/sys/devices.h ****   uint32_t BFAR;
  60:src/sys/devices.h ****   uint32_t AFSR;
  61:src/sys/devices.h **** };
  62:src/sys/devices.h **** 
  63:src/sys/devices.h **** /* PM §4.5.6 */ 
  64:src/sys/devices.h **** struct STK_registers {
  65:src/sys/devices.h ****   uint32_t CTRL;
  66:src/sys/devices.h ****   uint32_t LOAD;
  67:src/sys/devices.h ****   uint32_t VAL;
  68:src/sys/devices.h ****   uint32_t CALIB;
  69:src/sys/devices.h **** };
  70:src/sys/devices.h **** 
  71:src/sys/devices.h **** /* PM §4.6 */ 
  72:src/sys/devices.h **** struct FPU_registers {
  73:src/sys/devices.h ****   __reserved(0x0);
  74:src/sys/devices.h ****   uint32_t CCR;
  75:src/sys/devices.h ****   uint32_t CAR;
  76:src/sys/devices.h ****   uint32_t DSCR;
  77:src/sys/devices.h **** };
  78:src/sys/devices.h **** 
  79:src/sys/devices.h **** 
  80:src/sys/devices.h **** /* RM §3.6.7 */ 
  81:src/sys/devices.h **** struct FLASH_registers {
  82:src/sys/devices.h ****   uint32_t ACR;
  83:src/sys/devices.h ****   uint32_t KEYR;
  84:src/sys/devices.h ****   uint32_t OPTKEYR;
  85:src/sys/devices.h ****   uint32_t SR;
  86:src/sys/devices.h ****   uint32_t CR;
  87:src/sys/devices.h ****   uint32_t OPTCR;  
  88:src/sys/devices.h **** };
  89:src/sys/devices.h **** 
  90:src/sys/devices.h **** /* RM §4.4.4 */
  91:src/sys/devices.h **** struct CRC_registers {
  92:src/sys/devices.h ****   uint32_t DR;
  93:src/sys/devices.h ****   uint32_t ICR;
  94:src/sys/devices.h ****   uint32_t CR;
  95:src/sys/devices.h **** };
  96:src/sys/devices.h **** 
  97:src/sys/devices.h **** /* RM §5.5 */
  98:src/sys/devices.h **** struct PWR_registers {
  99:src/sys/devices.h ****   uint32_t CR;
 100:src/sys/devices.h ****   uint32_t CSR;
 101:src/sys/devices.h **** };
 102:src/sys/devices.h **** 
 103:src/sys/devices.h **** /* RM §6.3.28 */
 104:src/sys/devices.h **** struct RCC_registers {
 105:src/sys/devices.h ****   uint32_t CR;
 106:src/sys/devices.h ****   uint32_t PLLCFGR;
 107:src/sys/devices.h ****   uint32_t CFGR;
 108:src/sys/devices.h ****   uint32_t CIR;
 109:src/sys/devices.h ****   uint32_t AHB1RSTR;
 110:src/sys/devices.h ****   uint32_t AHB2RSTR;
 111:src/sys/devices.h ****   uint32_t AHB3RSTR;
 112:src/sys/devices.h ****   __reserved(0x1c);
 113:src/sys/devices.h ****   uint32_t APB1RSTR;
 114:src/sys/devices.h ****   uint32_t APB2RSTR;
 115:src/sys/devices.h ****   __reserved(0x28);
 116:src/sys/devices.h ****   __reserved(0x2c);
 117:src/sys/devices.h ****   uint32_t AHB1ENR;
 118:src/sys/devices.h ****   uint32_t AHB2ENR;
 119:src/sys/devices.h ****   uint32_t AHB3ENR;
 120:src/sys/devices.h ****   __reserved(0x3c);
 121:src/sys/devices.h ****   uint32_t APB1ENR;
 122:src/sys/devices.h ****   uint32_t APB2ENR;
 123:src/sys/devices.h ****   __reserved(0x48);
 124:src/sys/devices.h ****   __reserved(0x4c);
 125:src/sys/devices.h ****   uint32_t AHB1LPENR;
 126:src/sys/devices.h ****   uint32_t AHB2LPENR;
 127:src/sys/devices.h ****   uint32_t AHB3LPENR;
 128:src/sys/devices.h ****   __reserved(0x5c);
 129:src/sys/devices.h ****   uint32_t APB1LPENR;
 130:src/sys/devices.h ****   uint32_t APB2LPENR;
 131:src/sys/devices.h ****   __reserved(0x68);
 132:src/sys/devices.h ****   __reserved(0x6c);
 133:src/sys/devices.h ****   uint32_t BDCR;
 134:src/sys/devices.h ****   uint32_t CSR;
 135:src/sys/devices.h ****   __reserved(0x78);
 136:src/sys/devices.h ****   __reserved(0x7c);
 137:src/sys/devices.h ****   uint32_t SSCGR;
 138:src/sys/devices.h ****   uint32_t PLLI2SCFGR;
 139:src/sys/devices.h ****   uint32_t PLLSAICFGR;
 140:src/sys/devices.h ****   uint32_t DCKCFGR;
 141:src/sys/devices.h ****   uint32_t CKGATENR;
 142:src/sys/devices.h ****   uint32_t DCKCFGR2;
 143:src/sys/devices.h **** };
 144:src/sys/devices.h **** 
 145:src/sys/devices.h **** /* RM §7.4.11 */
 146:src/sys/devices.h **** struct GPIO_registers {
 147:src/sys/devices.h ****   uint32_t MODER;
 148:src/sys/devices.h ****   uint32_t OTYPER;
 149:src/sys/devices.h ****   uint32_t OSPEEDR;
 150:src/sys/devices.h ****   uint32_t PUPDR;
 151:src/sys/devices.h ****   uint32_t IDR;
 152:src/sys/devices.h ****   uint32_t ODR;
 153:src/sys/devices.h ****   uint32_t BSRR;
 154:src/sys/devices.h ****   uint32_t LCKR;
 155:src/sys/devices.h ****   uint32_t AFRL;
 156:src/sys/devices.h ****   uint32_t AFRH;
 157:src/sys/devices.h **** };
 158:src/sys/devices.h **** 
 159:src/sys/devices.h **** /* RM §8.2.9 */
 160:src/sys/devices.h **** struct SYSCFG_registers {
 161:src/sys/devices.h ****   uint32_t MEMRMP;
 162:src/sys/devices.h ****   uint32_t PMC;
 163:src/sys/devices.h ****   uint32_t EXTICR1;
 164:src/sys/devices.h ****   uint32_t EXTICR2;
 165:src/sys/devices.h ****   uint32_t EXTICR3;
 166:src/sys/devices.h ****   uint32_t EXTICR4;
 167:src/sys/devices.h ****   __reserved(0x18);
 168:src/sys/devices.h ****   __reserved(0x1c);
 169:src/sys/devices.h ****   uint32_t CMPCR;
 170:src/sys/devices.h ****   __reserved(0x24);
 171:src/sys/devices.h ****   __reserved(0x28);
 172:src/sys/devices.h ****   uint32_t CFGR;
 173:src/sys/devices.h **** };
 174:src/sys/devices.h **** 
 175:src/sys/devices.h **** /* RM §9.5.11 */
 176:src/sys/devices.h **** struct DMA_Sx_registers {
 177:src/sys/devices.h ****   uint32_t CR;
 178:src/sys/devices.h ****   uint32_t NDTR;
 179:src/sys/devices.h ****   volatile void* PAR;
 180:src/sys/devices.h ****   volatile void* M0AR;
 181:src/sys/devices.h ****   volatile void* M1AR;
 182:src/sys/devices.h ****   uint32_t FCR;
 183:src/sys/devices.h **** };
 184:src/sys/devices.h **** struct DMA_registers {
 185:src/sys/devices.h ****   uint32_t LISR;
 186:src/sys/devices.h ****   uint32_t HISR;
 187:src/sys/devices.h ****   uint32_t LIFCR;
 188:src/sys/devices.h ****   uint32_t HIFCR;
 189:src/sys/devices.h ****   struct DMA_Sx_registers S[8];
 190:src/sys/devices.h **** };
 191:src/sys/devices.h **** 
 192:src/sys/devices.h **** /* RM §10.3.7 */
 193:src/sys/devices.h **** struct EXTI_registers {
 194:src/sys/devices.h ****   uint32_t IMR;
 195:src/sys/devices.h ****   uint32_t EMR;
 196:src/sys/devices.h ****   uint32_t RTSR;
 197:src/sys/devices.h ****   uint32_t FTSR;
 198:src/sys/devices.h ****   uint32_t SWIER;
 199:src/sys/devices.h ****   uint32_t PR;
 200:src/sys/devices.h **** };
 201:src/sys/devices.h **** 
 202:src/sys/devices.h **** /* RM §11.8 */
 203:src/sys/devices.h **** struct FMC_registers {
 204:src/sys/devices.h ****   uint32_t BCR1;
 205:src/sys/devices.h ****   uint32_t BCR2;
 206:src/sys/devices.h ****   uint32_t BCR3;
 207:src/sys/devices.h ****   uint32_t BCR4;
 208:src/sys/devices.h ****   uint32_t BTR1;
 209:src/sys/devices.h ****   uint32_t BTR2;
 210:src/sys/devices.h ****   uint32_t BTR3;
 211:src/sys/devices.h ****   uint32_t BTR4;
 212:src/sys/devices.h ****   uint32_t BWTR1;
 213:src/sys/devices.h ****   uint32_t BWTR2;
 214:src/sys/devices.h ****   uint32_t BWTR3;
 215:src/sys/devices.h ****   uint32_t BWTR4;
 216:src/sys/devices.h ****   uint32_t PCR;
 217:src/sys/devices.h ****   uint32_t SR;
 218:src/sys/devices.h ****   uint32_t PMEM;
 219:src/sys/devices.h ****   uint32_t PATT;
 220:src/sys/devices.h ****   uint32_t ECCR;
 221:src/sys/devices.h ****   uint32_t SDCR1;
 222:src/sys/devices.h ****   uint32_t SDCR2;
 223:src/sys/devices.h ****   uint32_t SDTR1;
 224:src/sys/devices.h ****   uint32_t SDTR2;
 225:src/sys/devices.h ****   uint32_t SDCMR;
 226:src/sys/devices.h ****   uint32_t SDRTR;
 227:src/sys/devices.h ****   uint32_t SDSR;
 228:src/sys/devices.h **** };
 229:src/sys/devices.h **** 
 230:src/sys/devices.h **** /* RM §12.5.14 */
 231:src/sys/devices.h **** struct QUADSPI_registers {
 232:src/sys/devices.h ****   uint32_t CR;
 233:src/sys/devices.h ****   uint32_t DCR;
 234:src/sys/devices.h ****   uint32_t SR;
 235:src/sys/devices.h ****   uint32_t FCR;
 236:src/sys/devices.h ****   uint32_t DLR;
 237:src/sys/devices.h ****   uint32_t CCR;
 238:src/sys/devices.h ****   uint32_t AR;
 239:src/sys/devices.h ****   uint32_t ABR;
 240:src/sys/devices.h ****   uint32_t DR;
 241:src/sys/devices.h ****   uint32_t PSMKR;
 242:src/sys/devices.h ****   uint32_t PSMAR;
 243:src/sys/devices.h ****   uint32_t PIR;
 244:src/sys/devices.h ****   uint32_t LPTR;
 245:src/sys/devices.h **** };
 246:src/sys/devices.h **** 
 247:src/sys/devices.h **** /* RM §13.13.18 */
 248:src/sys/devices.h **** struct ADCx_registers {
 249:src/sys/devices.h ****   uint32_t SR;
 250:src/sys/devices.h ****   uint32_t CR1;
 251:src/sys/devices.h ****   uint32_t CR2;
 252:src/sys/devices.h ****   uint32_t SMPR1;
 253:src/sys/devices.h ****   uint32_t SMPR2;
 254:src/sys/devices.h ****   uint32_t JOFR1;
 255:src/sys/devices.h ****   uint32_t JOFR2;
 256:src/sys/devices.h ****   uint32_t JOFR3;
 257:src/sys/devices.h ****   uint32_t JOFR4;
 258:src/sys/devices.h ****   uint32_t HTR;
 259:src/sys/devices.h ****   uint32_t LTR;
 260:src/sys/devices.h ****   uint32_t SQR1;
 261:src/sys/devices.h ****   uint32_t SQR2;
 262:src/sys/devices.h ****   uint32_t SQR3;
 263:src/sys/devices.h ****   uint32_t JSQR;
 264:src/sys/devices.h ****   uint32_t JDR1;
 265:src/sys/devices.h ****   uint32_t JDR2;
 266:src/sys/devices.h ****   uint32_t JDR3;
 267:src/sys/devices.h ****   uint32_t JDR4;
 268:src/sys/devices.h ****   uint32_t DR;
 269:src/sys/devices.h **** };
 270:src/sys/devices.h **** 
 271:src/sys/devices.h **** struct ADC_common_registers {
 272:src/sys/devices.h ****   uint32_t CSR;
 273:src/sys/devices.h ****   uint32_t CCR;
 274:src/sys/devices.h ****   uint32_t CDR;
 275:src/sys/devices.h **** };
 276:src/sys/devices.h **** 
 277:src/sys/devices.h **** 
 278:src/sys/devices.h **** /* RM §14.5.15 */
 279:src/sys/devices.h **** struct DAC_registers {
 280:src/sys/devices.h ****   uint32_t CR;
 281:src/sys/devices.h ****   uint32_t SWTRIGR;
 282:src/sys/devices.h ****   uint32_t DHR12R1;
 283:src/sys/devices.h ****   uint32_t DHR12L1;
 284:src/sys/devices.h ****   uint32_t DHR8R1;
 285:src/sys/devices.h ****   uint32_t DHR12R2;
 286:src/sys/devices.h ****   uint32_t DHR12L2;
 287:src/sys/devices.h ****   uint32_t DHR8R2;
 288:src/sys/devices.h ****   uint32_t DHR12RD;
 289:src/sys/devices.h ****   uint32_t DHR12LD;
 290:src/sys/devices.h ****   uint32_t DHR8RD;
 291:src/sys/devices.h ****   uint32_t DOR1;
 292:src/sys/devices.h ****   uint32_t DOR2;
 293:src/sys/devices.h ****   uint32_t SR;
 294:src/sys/devices.h **** };
 295:src/sys/devices.h **** 
 296:src/sys/devices.h **** /* RM §15.8.12 */
 297:src/sys/devices.h **** struct DCMI_registers {
 298:src/sys/devices.h ****   uint32_t CR;
 299:src/sys/devices.h ****   uint32_t SR;
 300:src/sys/devices.h ****   uint32_t RIS;
 301:src/sys/devices.h ****   uint32_t IER;
 302:src/sys/devices.h ****   uint32_t MIS;
 303:src/sys/devices.h ****   uint32_t ICR;
 304:src/sys/devices.h ****   uint32_t ESCR;
 305:src/sys/devices.h ****   uint32_t ESUR;
 306:src/sys/devices.h ****   uint32_t CWSTRT;
 307:src/sys/devices.h ****   uint32_t CWSIZE;
 308:src/sys/devices.h ****   uint32_t DR;
 309:src/sys/devices.h **** };
 310:src/sys/devices.h **** 
 311:src/sys/devices.h **** /* RM §16.4.21 TIM1,8 */
 312:src/sys/devices.h **** /* RM §17.4.21 TIM2,3,4,5 */
 313:src/sys/devices.h **** /* RM §18.4.13 TIM9,12 */
 314:src/sys/devices.h **** /* RM §18.5.1  TIM10,11,13,14 */
 315:src/sys/devices.h **** /* RM §19.4.9  TIM6,7 */
 316:src/sys/devices.h **** struct TIMx_registers {
 317:src/sys/devices.h ****   uint32_t CR1;
 318:src/sys/devices.h ****   uint32_t CR2;
 319:src/sys/devices.h ****   uint32_t SMCR;
 320:src/sys/devices.h ****   uint32_t DIER;
 321:src/sys/devices.h ****   uint32_t SR;
 322:src/sys/devices.h ****   uint32_t EGR;
 323:src/sys/devices.h ****   uint32_t CCMR1;
 324:src/sys/devices.h ****   uint32_t CCMR2;
 325:src/sys/devices.h ****   uint32_t CCER;
 326:src/sys/devices.h ****   uint32_t CNT;
 327:src/sys/devices.h ****   uint32_t PSC;
 328:src/sys/devices.h ****   uint32_t ARR;
 329:src/sys/devices.h ****   uint32_t RCR;
 330:src/sys/devices.h ****   uint32_t CCR1;
 331:src/sys/devices.h ****   uint32_t CCR2;
 332:src/sys/devices.h ****   uint32_t CCR3;
 333:src/sys/devices.h ****   uint32_t CCR4;
 334:src/sys/devices.h ****   uint32_t BDTR;
 335:src/sys/devices.h ****   uint32_t DCR;
 336:src/sys/devices.h ****   uint32_t DMAR;
 337:src/sys/devices.h ****   uint32_t OR;
 338:src/sys/devices.h **** };
 339:src/sys/devices.h **** 
 340:src/sys/devices.h **** /* RM §20.4.5 */
 341:src/sys/devices.h **** struct IWDG_registers {
 342:src/sys/devices.h ****   uint32_t KR;
 343:src/sys/devices.h ****   uint32_t PR;
 344:src/sys/devices.h ****   uint32_t RLR;
 345:src/sys/devices.h ****   uint32_t SR;
 346:src/sys/devices.h **** };
 347:src/sys/devices.h **** 
 348:src/sys/devices.h **** /* RM §21.6.4 */
 349:src/sys/devices.h **** struct WWDG_registers {
 350:src/sys/devices.h ****   uint32_t CR;
 351:src/sys/devices.h ****   uint32_t CFR;
 352:src/sys/devices.h ****   uint32_t SR;
 353:src/sys/devices.h **** };
 354:src/sys/devices.h **** 
 355:src/sys/devices.h **** /* RM §22.6.21 */
 356:src/sys/devices.h **** struct RTC_registers {
 357:src/sys/devices.h ****   uint32_t TR;
 358:src/sys/devices.h ****   uint32_t DR;
 359:src/sys/devices.h ****   uint32_t CR;
 360:src/sys/devices.h ****   uint32_t ISR;
 361:src/sys/devices.h ****   uint32_t PRER;
 362:src/sys/devices.h ****   uint32_t WUTR;
 363:src/sys/devices.h ****   uint32_t CALIBR;
 364:src/sys/devices.h ****   uint32_t ALRMAR;
 365:src/sys/devices.h ****   uint32_t ALRMBR;
 366:src/sys/devices.h ****   uint32_t WPR;
 367:src/sys/devices.h ****   uint32_t SSR;
 368:src/sys/devices.h ****   uint32_t SHIFTR;
 369:src/sys/devices.h ****   uint32_t TSTR;
 370:src/sys/devices.h ****   uint32_t TSSSR;
 371:src/sys/devices.h ****   uint32_t CALR;
 372:src/sys/devices.h ****   uint32_t TAFCR;
 373:src/sys/devices.h ****   uint32_t ALRMASSR;
 374:src/sys/devices.h ****   uint32_t ALRMBSSR;
 375:src/sys/devices.h ****   uint32_t BKPR[20];
 376:src/sys/devices.h **** };
 377:src/sys/devices.h **** 
 378:src/sys/devices.h **** /* RM §23.7.12 */
 379:src/sys/devices.h **** struct FMPI2C_registers {
 380:src/sys/devices.h ****   uint32_t CR1;
 381:src/sys/devices.h ****   uint32_t CR2;
 382:src/sys/devices.h ****   uint32_t OAR1;
 383:src/sys/devices.h ****   uint32_t OAR2;
 384:src/sys/devices.h ****   uint32_t TIMINGR;
 385:src/sys/devices.h ****   uint32_t TIMEOUTR;
 386:src/sys/devices.h ****   uint32_t ISR;
 387:src/sys/devices.h ****   uint32_t ICR;
 388:src/sys/devices.h ****   uint32_t PECR;
 389:src/sys/devices.h ****   uint32_t RXDR;
 390:src/sys/devices.h ****   uint32_t TXDR;
 391:src/sys/devices.h **** };
 392:src/sys/devices.h **** 
 393:src/sys/devices.h **** /* RM §24.6.14 */
 394:src/sys/devices.h **** struct I2C_registers {
 395:src/sys/devices.h ****   uint32_t CR1;
 396:src/sys/devices.h ****   uint32_t CR2;
 397:src/sys/devices.h ****   uint32_t OAR1;
 398:src/sys/devices.h ****   uint32_t OAR2;
 399:src/sys/devices.h ****   uint32_t DR;
 400:src/sys/devices.h ****   uint32_t SR1;
 401:src/sys/devices.h ****   uint32_t SR2;
 402:src/sys/devices.h ****   uint32_t CCR;
 403:src/sys/devices.h ****   uint32_t TRISE;
 404:src/sys/devices.h ****   uint32_t FLTR;
 405:src/sys/devices.h **** };
 406:src/sys/devices.h **** 
 407:src/sys/devices.h **** /* RM §25.6.8 */
 408:src/sys/devices.h **** struct USART_registers {
 409:src/sys/devices.h ****   uint32_t SR;
 410:src/sys/devices.h ****   uint32_t DR;
 411:src/sys/devices.h ****   uint32_t BRR;
 412:src/sys/devices.h ****   uint32_t CR1;
 413:src/sys/devices.h ****   uint32_t CR2;
 414:src/sys/devices.h ****   uint32_t CR3;
 415:src/sys/devices.h ****   uint32_t GTPR;
 416:src/sys/devices.h **** };
 417:src/sys/devices.h **** 
 418:src/sys/devices.h **** /* RM §26.7.10 */
 419:src/sys/devices.h **** struct SPI_I2S_registers {
 420:src/sys/devices.h ****   uint32_t CR1;
 421:src/sys/devices.h ****   uint32_t CR2;
 422:src/sys/devices.h ****   uint32_t SR;
 423:src/sys/devices.h ****   uint32_t DR;
 424:src/sys/devices.h ****   uint32_t CRCPR;
 425:src/sys/devices.h ****   uint32_t RXCRCR;
 426:src/sys/devices.h ****   uint32_t TXCRCR;
 427:src/sys/devices.h ****   uint32_t I2SCFGR;
 428:src/sys/devices.h ****   uint32_t I2SPR;
 429:src/sys/devices.h **** };
 430:src/sys/devices.h **** 
 431:src/sys/devices.h **** /* RM §27.5.10 */
 432:src/sys/devices.h **** struct SPDIFRX_registers {
 433:src/sys/devices.h ****   uint32_t CR;
 434:src/sys/devices.h ****   uint32_t IMR;
 435:src/sys/devices.h ****   uint32_t SR;
 436:src/sys/devices.h ****   uint32_t IFCR;
 437:src/sys/devices.h ****   uint32_t DR;
 438:src/sys/devices.h ****   uint32_t CSR;
 439:src/sys/devices.h ****   uint32_t DIR;
 440:src/sys/devices.h **** };
 441:src/sys/devices.h **** 
 442:src/sys/devices.h **** /* RM §28.5.10 */
 443:src/sys/devices.h **** struct SAI_x_registers {
 444:src/sys/devices.h ****   uint32_t CR1;
 445:src/sys/devices.h ****   uint32_t CR2;
 446:src/sys/devices.h ****   uint32_t FRCR;
 447:src/sys/devices.h ****   uint32_t SLOTR;
 448:src/sys/devices.h ****   uint32_t IM;
 449:src/sys/devices.h ****   uint32_t SR;
 450:src/sys/devices.h ****   uint32_t CLRFR;
 451:src/sys/devices.h ****   uint32_t DR;
 452:src/sys/devices.h **** };
 453:src/sys/devices.h **** 
 454:src/sys/devices.h **** struct SAI_registers {
 455:src/sys/devices.h ****   uint32_t GCR;
 456:src/sys/devices.h ****   struct SAI_x_registers A;
 457:src/sys/devices.h ****   struct SAI_x_registers B;
 458:src/sys/devices.h **** };
 459:src/sys/devices.h **** 
 460:src/sys/devices.h **** /* RM §29.8.16 */
 461:src/sys/devices.h **** struct SDIO_registers {
 462:src/sys/devices.h ****   uint32_t POWER;
 463:src/sys/devices.h ****   uint32_t CLKCR;
 464:src/sys/devices.h ****   uint32_t CMD;
 465:src/sys/devices.h ****   uint32_t RESPCMD;
 466:src/sys/devices.h ****   uint32_t RESP1;
 467:src/sys/devices.h ****   uint32_t RESP2;
 468:src/sys/devices.h ****   uint32_t RESP3;
 469:src/sys/devices.h ****   uint32_t RESP4;
 470:src/sys/devices.h ****   uint32_t DTIMER;
 471:src/sys/devices.h ****   uint32_t DLEN;
 472:src/sys/devices.h ****   uint32_t DCTRL;
 473:src/sys/devices.h ****   uint32_t DCOUNT;
 474:src/sys/devices.h ****   uint32_t STA;
 475:src/sys/devices.h ****   uint32_t ICR;
 476:src/sys/devices.h ****   uint32_t MASK;
 477:src/sys/devices.h ****   __reserved(0x40);
 478:src/sys/devices.h ****   __reserved(0x44);
 479:src/sys/devices.h ****   uint32_t FIFOCNT;
 480:src/sys/devices.h ****   __reserved_interval(0x4c,0x80);
 481:src/sys/devices.h ****   uint32_t FIFO[32];
 482:src/sys/devices.h **** };
 483:src/sys/devices.h ****   
 484:src/sys/devices.h **** /* RM §30.9.5 */
 485:src/sys/devices.h **** struct bxCAN_TxRx_registers {
 486:src/sys/devices.h ****   uint32_t IR;
 487:src/sys/devices.h ****   uint32_t DTR;
 488:src/sys/devices.h ****   uint32_t DLR;
 489:src/sys/devices.h ****   uint32_t DHR;
 490:src/sys/devices.h **** };
 491:src/sys/devices.h **** 
 492:src/sys/devices.h **** struct bxCAN_registers {
 493:src/sys/devices.h ****   uint32_t MCR;
 494:src/sys/devices.h ****   uint32_t MSR;
 495:src/sys/devices.h ****   uint32_t TSR;
 496:src/sys/devices.h ****   uint32_t RF0R;
 497:src/sys/devices.h ****   uint32_t RF1R;
 498:src/sys/devices.h ****   uint32_t IER;
 499:src/sys/devices.h ****   uint32_t ESR;
 500:src/sys/devices.h ****   uint32_t BTR;
 501:src/sys/devices.h ****   __reserved_interval(0x20,0x180);
 502:src/sys/devices.h ****   struct bxCAN_TxRx_registers Tx[3];
 503:src/sys/devices.h ****   struct bxCAN_TxRx_registers Rx[2];
 504:src/sys/devices.h ****   __reserved_interval(0x1d0,0x200);
 505:src/sys/devices.h ****   uint32_t FMR;
 506:src/sys/devices.h ****   uint32_t FM1R;
 507:src/sys/devices.h ****   __reserved(0x208);
 508:src/sys/devices.h ****   uint32_t FS1R;
 509:src/sys/devices.h ****   __reserved(0x210);
 510:src/sys/devices.h ****   uint32_t FFA1R;
 511:src/sys/devices.h ****   __reserved(0x218);
 512:src/sys/devices.h ****   uint32_t FA1R;
 513:src/sys/devices.h ****   __reserved_interval(0x220,0x240);
 514:src/sys/devices.h ****   struct {uint32_t R1; uint32_t R2;} F[28];
 515:src/sys/devices.h **** };
 516:src/sys/devices.h **** 
 517:src/sys/devices.h **** /* RM §32.7.7 */
 518:src/sys/devices.h **** struct OTG_registers {
 519:src/sys/devices.h ****    /* TODO */
 520:src/sys/devices.h **** };
 521:src/sys/devices.h **** 
 522:src/sys/devices.h **** /* RM §32.7.7 */
 523:src/sys/devices.h **** struct HDMI_CEC_registers {
 524:src/sys/devices.h ****   uint32_t CR;
 525:src/sys/devices.h ****   uint32_t CFGR;
 526:src/sys/devices.h ****   uint32_t TXDR;
 527:src/sys/devices.h ****   uint32_t RXDR;
 528:src/sys/devices.h ****   uint32_t ISR;
 529:src/sys/devices.h ****   uint32_t IER;
 530:src/sys/devices.h **** };
 531:src/sys/devices.h **** 
 532:src/sys/devices.h **** /* RM §33.18 */
 533:src/sys/devices.h **** struct DBGMCU_registers {
 534:src/sys/devices.h ****   uint32_t IDCODE;
 535:src/sys/devices.h ****   uint32_t CR;
 536:src/sys/devices.h ****   uint32_t APB1FZ;
 537:src/sys/devices.h ****   uint32_t APB2FZ;
 538:src/sys/devices.h **** };
 539:src/sys/devices.h **** 
 540:src/sys/devices.h **** /* Constant values */
 541:src/sys/devices.h **** 
 542:src/sys/devices.h **** extern const uint16_t Package_data;
 543:src/sys/devices.h **** extern const uint16_t TS_CAL2;
 544:src/sys/devices.h **** extern const uint16_t TS_CAL1;
 545:src/sys/devices.h **** extern const uint16_t VREFIN_CAL;
 546:src/sys/devices.h **** extern const uint16_t Flash_size;
 547:src/sys/devices.h **** extern const uint32_t U_ID[3];
 548:src/sys/devices.h **** 
 549:src/sys/devices.h **** /* Core Devices base addresses */
 550:src/sys/devices.h **** 
 551:src/sys/devices.h **** extern volatile struct DBGMCU_registers DBG;
 552:src/sys/devices.h **** 
 553:src/sys/devices.h **** extern volatile struct FPU_registers FPU;
 554:src/sys/devices.h **** extern volatile uint32_t NVIC_STIR;
 555:src/sys/devices.h **** extern volatile struct MPU_registers MPU;
 556:src/sys/devices.h **** extern volatile uint32_t FPU_CPACR;
 557:src/sys/devices.h **** extern volatile struct SCB_registers SCB;
 558:src/sys/devices.h **** extern volatile struct NVIC_registers NVIC;
 559:src/sys/devices.h **** extern volatile struct STK_registers SysTick;
 560:src/sys/devices.h **** 
 561:src/sys/devices.h **** /* Devices base addresses */
 562:src/sys/devices.h **** 
 563:src/sys/devices.h **** extern volatile struct QUADSPI_registers QUADSPI;
 564:src/sys/devices.h **** 
 565:src/sys/devices.h **** extern volatile struct DCMI_registers DCMI;
 566:src/sys/devices.h **** extern volatile struct OTG_registers USB_OTG_FS;
 567:src/sys/devices.h **** 
 568:src/sys/devices.h **** extern volatile struct OTG_registers USB_OTG_HS;
 569:src/sys/devices.h **** extern volatile struct DMA_registers DMA2;
 570:src/sys/devices.h **** extern volatile struct DMA_registers DMA1;
 571:src/sys/devices.h **** extern uint32_t BKPSRAM[1024];
 572:src/sys/devices.h **** extern volatile struct FLASH_registers FLASH;
 573:src/sys/devices.h **** extern volatile struct RCC_registers RCC;
 574:src/sys/devices.h **** extern volatile struct CRC_registers CRC;
 575:src/sys/devices.h **** extern volatile struct GPIO_registers GPIOH;
 576:src/sys/devices.h **** extern volatile struct GPIO_registers GPIOG;
 577:src/sys/devices.h **** extern volatile struct GPIO_registers GPIOF;
 578:src/sys/devices.h **** extern volatile struct GPIO_registers GPIOE;
 579:src/sys/devices.h **** extern volatile struct GPIO_registers GPIOD;
 580:src/sys/devices.h **** extern volatile struct GPIO_registers GPIOC;
 581:src/sys/devices.h **** extern volatile struct GPIO_registers GPIOB;
 582:src/sys/devices.h **** extern volatile struct GPIO_registers GPIOA;
 583:src/sys/devices.h **** 
 584:src/sys/devices.h **** extern volatile struct SAI_registers SAI2;
 585:src/sys/devices.h **** extern volatile struct SAI_registers SAI1;
 586:src/sys/devices.h **** 
 587:src/sys/devices.h **** extern volatile struct TIMx_registers TIM11;
 588:src/sys/devices.h **** extern volatile struct TIMx_registers TIM10;
 589:src/sys/devices.h **** extern volatile struct TIMx_registers TIM9;
 590:src/sys/devices.h **** extern volatile struct EXTI_registers EXTI;
 591:src/sys/devices.h **** extern volatile struct SYSCFG_registers SYSCFG;
 592:src/sys/devices.h **** extern volatile struct SPI_registers SPI4;
 593:src/sys/devices.h **** extern volatile struct SPI_registers SPI1;
 594:src/sys/devices.h **** extern volatile struct SDIO_registers SDMMC;
 595:src/sys/devices.h **** extern volatile struct ADCx_registers ADC1;
 596:src/sys/devices.h **** extern volatile struct ADCx_registers ADC2;
 597:src/sys/devices.h **** extern volatile struct ADCx_registers ADC3;
 598:src/sys/devices.h **** extern volatile struct ADC_common_registers ADC_common;
 599:src/sys/devices.h **** extern volatile struct USART_registers USART6;
 600:src/sys/devices.h **** extern volatile struct USART_registers USART1;
 601:src/sys/devices.h **** extern volatile struct TIMx_registers TIM8;
 602:src/sys/devices.h **** extern volatile struct TIMx_registers TIM1;
 603:src/sys/devices.h **** 
 604:src/sys/devices.h **** extern volatile struct DAC_registers DAC;
 605:src/sys/devices.h **** extern volatile struct PWR_registers PWR;
 606:src/sys/devices.h **** extern volatile struct HDMI_CEC_registers HDMI_CEC;
 607:src/sys/devices.h **** extern volatile struct bxCAN_registers CAN2;
 608:src/sys/devices.h **** extern volatile struct bxCAN_registers CAN1;
 609:src/sys/devices.h **** extern volatile struct FMPI2C_registers FMPI2C1;
 610:src/sys/devices.h **** extern volatile struct I2C_registers I2C3;
 611:src/sys/devices.h **** extern volatile struct I2C_registers I2C2;
 612:src/sys/devices.h **** extern volatile struct I2C_registers I2C1;
 613:src/sys/devices.h **** extern volatile struct USART_registers UART5;
 614:src/sys/devices.h **** extern volatile struct USART_registers UART4;
 615:src/sys/devices.h **** extern volatile struct USART_registers USART3;
 616:src/sys/devices.h **** extern volatile struct USART_registers USART2;
 617:src/sys/devices.h **** extern volatile struct SPDIF_RX_registers SPDIF_RX;
 618:src/sys/devices.h **** extern volatile struct SPI_I2S_registers SPI3_I2S3;
 619:src/sys/devices.h **** extern volatile struct SPI_I2S_registers SPI2_I2S2;
 620:src/sys/devices.h **** extern volatile struct IWDG_registers IWDG;
 621:src/sys/devices.h **** extern volatile struct WWDG_registers WWDG;
 622:src/sys/devices.h **** extern volatile struct RTC_registers RTC_BKP;
 623:src/sys/devices.h **** extern volatile struct TIMx_registers TIM14;
 624:src/sys/devices.h **** extern volatile struct TIMx_registers TIM13;
 625:src/sys/devices.h **** extern volatile struct TIMx_registers TIM12;
 626:src/sys/devices.h **** extern volatile struct TIMx_registers TIM7;
 627:src/sys/devices.h **** extern volatile struct TIMx_registers TIM6;
 628:src/sys/devices.h **** extern volatile struct TIMx_registers TIM5;
 629:src/sys/devices.h **** extern volatile struct TIMx_registers TIM4;
 630:src/sys/devices.h **** extern volatile struct TIMx_registers TIM3;
 631:src/sys/devices.h **** extern volatile struct TIMx_registers TIM2;
 632:src/sys/devices.h **** 
 633:src/sys/devices.h **** #define __set_bit(_w,_i) ((_w)|=(1<<(_i)))
 634:src/sys/devices.h **** #define __clr_bit(_w,_i) ((_w) &= ~(1<<(_i)))
 635:src/sys/devices.h **** #define __really_inline__ static inline __attribute__((always_inline)) 
 636:src/sys/devices.h **** #define __sync __DSB
 637:src/sys/devices.h **** 
 638:src/sys/devices.h **** #define __declare_device_control(name,bus,bus_bit) \
 639:src/sys/devices.h ****   void __really_inline__ enable_##name() { \
 640:src/sys/devices.h ****     __set_bit(RCC.bus##ENR,bus_bit); __sync(); } \
 641:src/sys/devices.h ****   void __really_inline__ low_power_enable_##name() { \
 642:src/sys/devices.h ****     __set_bit(RCC.bus##LPENR,bus_bit); __sync(); } \
 643:src/sys/devices.h ****   void __really_inline__ disable_##name() { \
 644:src/sys/devices.h ****     __clr_bit(RCC.bus##ENR,bus_bit); __sync(); } \
 645:src/sys/devices.h ****   void __really_inline__ low_power_disable_## name() { \
 646:src/sys/devices.h ****     __clr_bit(RCC.bus##LPENR,bus_bit); __sync(); } \
 647:src/sys/devices.h ****   void __really_inline__ reset_##name() { \
 648:src/sys/devices.h ****     __set_bit(RCC.bus##RSTR,bus_bit); __sync(); } \
 649:src/sys/devices.h **** \
 650:src/sys/devices.h **** 
 651:src/sys/devices.h **** /* __declare_device_control(FMC,AHB3,0) FMC not available in LQFP64 package */
 652:src/sys/devices.h **** __declare_device_control(QUADSPI,AHB3,1)
 653:src/sys/devices.h **** 
 654:src/sys/devices.h **** __declare_device_control(DCMI,AHB2,0)
 655:src/sys/devices.h **** __declare_device_control(USB_OTG_FS,AHB2,7)
 656:src/sys/devices.h **** 
 657:src/sys/devices.h **** __declare_device_control(USB_OTG_HS,AHB1,29)
 658:src/sys/devices.h **** __declare_device_control(DMA2,AHB1,22)
 659:src/sys/devices.h **** __declare_device_control(DMA1,AHB1,21)
 660:src/sys/devices.h **** __declare_device_control(CRC,AHB1,12)
 661:src/sys/devices.h **** __declare_device_control(GPIOH,AHB1,7)
 662:src/sys/devices.h **** __declare_device_control(GPIOG,AHB1,6)
 663:src/sys/devices.h **** __declare_device_control(GPIOF,AHB1,5)
 664:src/sys/devices.h **** __declare_device_control(GPIOE,AHB1,4)
 665:src/sys/devices.h **** __declare_device_control(GPIOD,AHB1,3)
 666:src/sys/devices.h **** __declare_device_control(GPIOC,AHB1,2)
 667:src/sys/devices.h **** __declare_device_control(GPIOB,AHB1,1)
 668:src/sys/devices.h **** __declare_device_control(GPIOA,AHB1,0)
 669:src/sys/devices.h **** 
 670:src/sys/devices.h **** __declare_device_control(SAI2,APB2,23)
 671:src/sys/devices.h **** __declare_device_control(SAI1,APB2,22)
 672:src/sys/devices.h **** 
 673:src/sys/devices.h **** __declare_device_control(TIM11,APB2,18)
 674:src/sys/devices.h **** __declare_device_control(TIM10,APB2,17)
 675:src/sys/devices.h **** __declare_device_control(TIM9,APB2,16)
 676:src/sys/devices.h **** __declare_device_control(SYSCFG,APB2,14)
 677:src/sys/devices.h **** __declare_device_control(SPI4,APB2,13)
 678:src/sys/devices.h **** __declare_device_control(SPI1,APB2,12)
 679:src/sys/devices.h **** __declare_device_control(SDMMC,APB2,11)
 680:src/sys/devices.h **** __declare_device_control(ADC,APB2,8)
 681:src/sys/devices.h **** __declare_device_control(ADC1,APB2,8)
 136              		.loc 2 681 1 view .LVU27
 137              	.LBB27:
 138              		.loc 2 681 1 view .LVU28
 139 0054 0B4A     		ldr	r2, .L8+4
 140 0056 536C     		ldr	r3, [r2, #68]
 141 0058 43F48073 		orr	r3, r3, #256
 142 005c 5364     		str	r3, [r2, #68]
 143              		.loc 2 681 1 view .LVU29
 144              	.LBB28:
 145              	.LBI28:
 146              		.file 3 "src/sys/cmsis_gcc.h"
   1:src/sys/cmsis_gcc.h **** /**************************************************************************//**
   2:src/sys/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:src/sys/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:src/sys/cmsis_gcc.h ****  * @version  V4.30
   5:src/sys/cmsis_gcc.h ****  * @date     20. October 2015
   6:src/sys/cmsis_gcc.h ****  ******************************************************************************/
   7:src/sys/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:src/sys/cmsis_gcc.h **** 
   9:src/sys/cmsis_gcc.h ****    All rights reserved.
  10:src/sys/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:src/sys/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:src/sys/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:src/sys/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:src/sys/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:src/sys/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:src/sys/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:src/sys/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:src/sys/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:src/sys/cmsis_gcc.h ****      specific prior written permission.
  20:src/sys/cmsis_gcc.h ****    *
  21:src/sys/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:src/sys/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:src/sys/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:src/sys/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:src/sys/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:src/sys/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:src/sys/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:src/sys/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:src/sys/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:src/sys/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:src/sys/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:src/sys/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:src/sys/cmsis_gcc.h **** 
  34:src/sys/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  35:src/sys/cmsis_gcc.h **** #define __CMSIS_GCC_H
  36:src/sys/cmsis_gcc.h **** 
  37:src/sys/cmsis_gcc.h **** /* ignore some GCC warnings */
  38:src/sys/cmsis_gcc.h **** #if defined ( __GNUC__ )
  39:src/sys/cmsis_gcc.h **** #pragma GCC diagnostic push
  40:src/sys/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  41:src/sys/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  42:src/sys/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  43:src/sys/cmsis_gcc.h **** #endif
  44:src/sys/cmsis_gcc.h **** 
  45:src/sys/cmsis_gcc.h **** 
  46:src/sys/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  47:src/sys/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  48:src/sys/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  49:src/sys/cmsis_gcc.h ****   @{
  50:src/sys/cmsis_gcc.h ****  */
  51:src/sys/cmsis_gcc.h **** 
  52:src/sys/cmsis_gcc.h **** /**
  53:src/sys/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  54:src/sys/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  55:src/sys/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  56:src/sys/cmsis_gcc.h ****  */
  57:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  58:src/sys/cmsis_gcc.h **** {
  59:src/sys/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  60:src/sys/cmsis_gcc.h **** }
  61:src/sys/cmsis_gcc.h **** 
  62:src/sys/cmsis_gcc.h **** 
  63:src/sys/cmsis_gcc.h **** /**
  64:src/sys/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  65:src/sys/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  66:src/sys/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  67:src/sys/cmsis_gcc.h ****  */
  68:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  69:src/sys/cmsis_gcc.h **** {
  70:src/sys/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  71:src/sys/cmsis_gcc.h **** }
  72:src/sys/cmsis_gcc.h **** 
  73:src/sys/cmsis_gcc.h **** 
  74:src/sys/cmsis_gcc.h **** /**
  75:src/sys/cmsis_gcc.h ****   \brief   Get Control Register
  76:src/sys/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  77:src/sys/cmsis_gcc.h ****   \return               Control Register value
  78:src/sys/cmsis_gcc.h ****  */
  79:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  80:src/sys/cmsis_gcc.h **** {
  81:src/sys/cmsis_gcc.h ****   uint32_t result;
  82:src/sys/cmsis_gcc.h **** 
  83:src/sys/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  84:src/sys/cmsis_gcc.h ****   return(result);
  85:src/sys/cmsis_gcc.h **** }
  86:src/sys/cmsis_gcc.h **** 
  87:src/sys/cmsis_gcc.h **** 
  88:src/sys/cmsis_gcc.h **** /**
  89:src/sys/cmsis_gcc.h ****   \brief   Set Control Register
  90:src/sys/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  91:src/sys/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  92:src/sys/cmsis_gcc.h ****  */
  93:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  94:src/sys/cmsis_gcc.h **** {
  95:src/sys/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  96:src/sys/cmsis_gcc.h **** }
  97:src/sys/cmsis_gcc.h **** 
  98:src/sys/cmsis_gcc.h **** 
  99:src/sys/cmsis_gcc.h **** /**
 100:src/sys/cmsis_gcc.h ****   \brief   Get IPSR Register
 101:src/sys/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 102:src/sys/cmsis_gcc.h ****   \return               IPSR Register value
 103:src/sys/cmsis_gcc.h ****  */
 104:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 105:src/sys/cmsis_gcc.h **** {
 106:src/sys/cmsis_gcc.h ****   uint32_t result;
 107:src/sys/cmsis_gcc.h **** 
 108:src/sys/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 109:src/sys/cmsis_gcc.h ****   return(result);
 110:src/sys/cmsis_gcc.h **** }
 111:src/sys/cmsis_gcc.h **** 
 112:src/sys/cmsis_gcc.h **** 
 113:src/sys/cmsis_gcc.h **** /**
 114:src/sys/cmsis_gcc.h ****   \brief   Get APSR Register
 115:src/sys/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 116:src/sys/cmsis_gcc.h ****   \return               APSR Register value
 117:src/sys/cmsis_gcc.h ****  */
 118:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 119:src/sys/cmsis_gcc.h **** {
 120:src/sys/cmsis_gcc.h ****   uint32_t result;
 121:src/sys/cmsis_gcc.h **** 
 122:src/sys/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 123:src/sys/cmsis_gcc.h ****   return(result);
 124:src/sys/cmsis_gcc.h **** }
 125:src/sys/cmsis_gcc.h **** 
 126:src/sys/cmsis_gcc.h **** 
 127:src/sys/cmsis_gcc.h **** /**
 128:src/sys/cmsis_gcc.h ****   \brief   Get xPSR Register
 129:src/sys/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 130:src/sys/cmsis_gcc.h **** 
 131:src/sys/cmsis_gcc.h ****     \return               xPSR Register value
 132:src/sys/cmsis_gcc.h ****  */
 133:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 134:src/sys/cmsis_gcc.h **** {
 135:src/sys/cmsis_gcc.h ****   uint32_t result;
 136:src/sys/cmsis_gcc.h **** 
 137:src/sys/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 138:src/sys/cmsis_gcc.h ****   return(result);
 139:src/sys/cmsis_gcc.h **** }
 140:src/sys/cmsis_gcc.h **** 
 141:src/sys/cmsis_gcc.h **** 
 142:src/sys/cmsis_gcc.h **** /**
 143:src/sys/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 144:src/sys/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 145:src/sys/cmsis_gcc.h ****   \return               PSP Register value
 146:src/sys/cmsis_gcc.h ****  */
 147:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 148:src/sys/cmsis_gcc.h **** {
 149:src/sys/cmsis_gcc.h ****   register uint32_t result;
 150:src/sys/cmsis_gcc.h **** 
 151:src/sys/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 152:src/sys/cmsis_gcc.h ****   return(result);
 153:src/sys/cmsis_gcc.h **** }
 154:src/sys/cmsis_gcc.h **** 
 155:src/sys/cmsis_gcc.h **** 
 156:src/sys/cmsis_gcc.h **** /**
 157:src/sys/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 158:src/sys/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 159:src/sys/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 160:src/sys/cmsis_gcc.h ****  */
 161:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 162:src/sys/cmsis_gcc.h **** {
 163:src/sys/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 164:src/sys/cmsis_gcc.h **** }
 165:src/sys/cmsis_gcc.h **** 
 166:src/sys/cmsis_gcc.h **** 
 167:src/sys/cmsis_gcc.h **** /**
 168:src/sys/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 169:src/sys/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 170:src/sys/cmsis_gcc.h ****   \return               MSP Register value
 171:src/sys/cmsis_gcc.h ****  */
 172:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 173:src/sys/cmsis_gcc.h **** {
 174:src/sys/cmsis_gcc.h ****   register uint32_t result;
 175:src/sys/cmsis_gcc.h **** 
 176:src/sys/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 177:src/sys/cmsis_gcc.h ****   return(result);
 178:src/sys/cmsis_gcc.h **** }
 179:src/sys/cmsis_gcc.h **** 
 180:src/sys/cmsis_gcc.h **** 
 181:src/sys/cmsis_gcc.h **** /**
 182:src/sys/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 183:src/sys/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 184:src/sys/cmsis_gcc.h **** 
 185:src/sys/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 186:src/sys/cmsis_gcc.h ****  */
 187:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 188:src/sys/cmsis_gcc.h **** {
 189:src/sys/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 190:src/sys/cmsis_gcc.h **** }
 191:src/sys/cmsis_gcc.h **** 
 192:src/sys/cmsis_gcc.h **** 
 193:src/sys/cmsis_gcc.h **** /**
 194:src/sys/cmsis_gcc.h ****   \brief   Get Priority Mask
 195:src/sys/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 196:src/sys/cmsis_gcc.h ****   \return               Priority Mask value
 197:src/sys/cmsis_gcc.h ****  */
 198:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 199:src/sys/cmsis_gcc.h **** {
 200:src/sys/cmsis_gcc.h ****   uint32_t result;
 201:src/sys/cmsis_gcc.h **** 
 202:src/sys/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 203:src/sys/cmsis_gcc.h ****   return(result);
 204:src/sys/cmsis_gcc.h **** }
 205:src/sys/cmsis_gcc.h **** 
 206:src/sys/cmsis_gcc.h **** 
 207:src/sys/cmsis_gcc.h **** /**
 208:src/sys/cmsis_gcc.h ****   \brief   Set Priority Mask
 209:src/sys/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 210:src/sys/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 211:src/sys/cmsis_gcc.h ****  */
 212:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 213:src/sys/cmsis_gcc.h **** {
 214:src/sys/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 215:src/sys/cmsis_gcc.h **** }
 216:src/sys/cmsis_gcc.h **** 
 217:src/sys/cmsis_gcc.h **** 
 218:src/sys/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 219:src/sys/cmsis_gcc.h **** 
 220:src/sys/cmsis_gcc.h **** /**
 221:src/sys/cmsis_gcc.h ****   \brief   Enable FIQ
 222:src/sys/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 223:src/sys/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 224:src/sys/cmsis_gcc.h ****  */
 225:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 226:src/sys/cmsis_gcc.h **** {
 227:src/sys/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 228:src/sys/cmsis_gcc.h **** }
 229:src/sys/cmsis_gcc.h **** 
 230:src/sys/cmsis_gcc.h **** 
 231:src/sys/cmsis_gcc.h **** /**
 232:src/sys/cmsis_gcc.h ****   \brief   Disable FIQ
 233:src/sys/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 234:src/sys/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 235:src/sys/cmsis_gcc.h ****  */
 236:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 237:src/sys/cmsis_gcc.h **** {
 238:src/sys/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 239:src/sys/cmsis_gcc.h **** }
 240:src/sys/cmsis_gcc.h **** 
 241:src/sys/cmsis_gcc.h **** 
 242:src/sys/cmsis_gcc.h **** /**
 243:src/sys/cmsis_gcc.h ****   \brief   Get Base Priority
 244:src/sys/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 245:src/sys/cmsis_gcc.h ****   \return               Base Priority register value
 246:src/sys/cmsis_gcc.h ****  */
 247:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 248:src/sys/cmsis_gcc.h **** {
 249:src/sys/cmsis_gcc.h ****   uint32_t result;
 250:src/sys/cmsis_gcc.h **** 
 251:src/sys/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 252:src/sys/cmsis_gcc.h ****   return(result);
 253:src/sys/cmsis_gcc.h **** }
 254:src/sys/cmsis_gcc.h **** 
 255:src/sys/cmsis_gcc.h **** 
 256:src/sys/cmsis_gcc.h **** /**
 257:src/sys/cmsis_gcc.h ****   \brief   Set Base Priority
 258:src/sys/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 259:src/sys/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 260:src/sys/cmsis_gcc.h ****  */
 261:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 262:src/sys/cmsis_gcc.h **** {
 263:src/sys/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 264:src/sys/cmsis_gcc.h **** }
 265:src/sys/cmsis_gcc.h **** 
 266:src/sys/cmsis_gcc.h **** 
 267:src/sys/cmsis_gcc.h **** /**
 268:src/sys/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 269:src/sys/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 270:src/sys/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 271:src/sys/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 272:src/sys/cmsis_gcc.h ****  */
 273:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 274:src/sys/cmsis_gcc.h **** {
 275:src/sys/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 276:src/sys/cmsis_gcc.h **** }
 277:src/sys/cmsis_gcc.h **** 
 278:src/sys/cmsis_gcc.h **** 
 279:src/sys/cmsis_gcc.h **** /**
 280:src/sys/cmsis_gcc.h ****   \brief   Get Fault Mask
 281:src/sys/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 282:src/sys/cmsis_gcc.h ****   \return               Fault Mask register value
 283:src/sys/cmsis_gcc.h ****  */
 284:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 285:src/sys/cmsis_gcc.h **** {
 286:src/sys/cmsis_gcc.h ****   uint32_t result;
 287:src/sys/cmsis_gcc.h **** 
 288:src/sys/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 289:src/sys/cmsis_gcc.h ****   return(result);
 290:src/sys/cmsis_gcc.h **** }
 291:src/sys/cmsis_gcc.h **** 
 292:src/sys/cmsis_gcc.h **** 
 293:src/sys/cmsis_gcc.h **** /**
 294:src/sys/cmsis_gcc.h ****   \brief   Set Fault Mask
 295:src/sys/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 296:src/sys/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 297:src/sys/cmsis_gcc.h ****  */
 298:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 299:src/sys/cmsis_gcc.h **** {
 300:src/sys/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 301:src/sys/cmsis_gcc.h **** }
 302:src/sys/cmsis_gcc.h **** 
 303:src/sys/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 304:src/sys/cmsis_gcc.h **** 
 305:src/sys/cmsis_gcc.h **** 
 306:src/sys/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 307:src/sys/cmsis_gcc.h **** 
 308:src/sys/cmsis_gcc.h **** /**
 309:src/sys/cmsis_gcc.h ****   \brief   Get FPSCR
 310:src/sys/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 311:src/sys/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 312:src/sys/cmsis_gcc.h ****  */
 313:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 314:src/sys/cmsis_gcc.h **** {
 315:src/sys/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 316:src/sys/cmsis_gcc.h ****   uint32_t result;
 317:src/sys/cmsis_gcc.h **** 
 318:src/sys/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 319:src/sys/cmsis_gcc.h ****   __ASM volatile ("");
 320:src/sys/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 321:src/sys/cmsis_gcc.h ****   __ASM volatile ("");
 322:src/sys/cmsis_gcc.h ****   return(result);
 323:src/sys/cmsis_gcc.h **** #else
 324:src/sys/cmsis_gcc.h ****    return(0);
 325:src/sys/cmsis_gcc.h **** #endif
 326:src/sys/cmsis_gcc.h **** }
 327:src/sys/cmsis_gcc.h **** 
 328:src/sys/cmsis_gcc.h **** 
 329:src/sys/cmsis_gcc.h **** /**
 330:src/sys/cmsis_gcc.h ****   \brief   Set FPSCR
 331:src/sys/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 332:src/sys/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 333:src/sys/cmsis_gcc.h ****  */
 334:src/sys/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 335:src/sys/cmsis_gcc.h **** {
 336:src/sys/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 337:src/sys/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 338:src/sys/cmsis_gcc.h ****   __ASM volatile ("");
 339:src/sys/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 340:src/sys/cmsis_gcc.h ****   __ASM volatile ("");
 341:src/sys/cmsis_gcc.h **** #endif
 342:src/sys/cmsis_gcc.h **** }
 343:src/sys/cmsis_gcc.h **** 
 344:src/sys/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 345:src/sys/cmsis_gcc.h **** 
 346:src/sys/cmsis_gcc.h **** 
 347:src/sys/cmsis_gcc.h **** 
 348:src/sys/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 349:src/sys/cmsis_gcc.h **** 
 350:src/sys/cmsis_gcc.h **** 
 351:src/sys/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 352:src/sys/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 353:src/sys/cmsis_gcc.h ****   Access to dedicated instructions
 354:src/sys/cmsis_gcc.h ****   @{
 355:src/sys/cmsis_gcc.h **** */
 356:src/sys/cmsis_gcc.h **** 
 357:src/sys/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 358:src/sys/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 359:src/sys/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 360:src/sys/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 361:src/sys/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 362:src/sys/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 363:src/sys/cmsis_gcc.h **** #else
 364:src/sys/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 365:src/sys/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 366:src/sys/cmsis_gcc.h **** #endif
 367:src/sys/cmsis_gcc.h **** 
 368:src/sys/cmsis_gcc.h **** /**
 369:src/sys/cmsis_gcc.h ****   \brief   No Operation
 370:src/sys/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 371:src/sys/cmsis_gcc.h ****  */
 372:src/sys/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 373:src/sys/cmsis_gcc.h **** {
 374:src/sys/cmsis_gcc.h ****   __ASM volatile ("nop");
 375:src/sys/cmsis_gcc.h **** }
 376:src/sys/cmsis_gcc.h **** 
 377:src/sys/cmsis_gcc.h **** 
 378:src/sys/cmsis_gcc.h **** /**
 379:src/sys/cmsis_gcc.h ****   \brief   Wait For Interrupt
 380:src/sys/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 381:src/sys/cmsis_gcc.h ****  */
 382:src/sys/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 383:src/sys/cmsis_gcc.h **** {
 384:src/sys/cmsis_gcc.h ****   __ASM volatile ("wfi");
 385:src/sys/cmsis_gcc.h **** }
 386:src/sys/cmsis_gcc.h **** 
 387:src/sys/cmsis_gcc.h **** 
 388:src/sys/cmsis_gcc.h **** /**
 389:src/sys/cmsis_gcc.h ****   \brief   Wait For Event
 390:src/sys/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 391:src/sys/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 392:src/sys/cmsis_gcc.h ****  */
 393:src/sys/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 394:src/sys/cmsis_gcc.h **** {
 395:src/sys/cmsis_gcc.h ****   __ASM volatile ("wfe");
 396:src/sys/cmsis_gcc.h **** }
 397:src/sys/cmsis_gcc.h **** 
 398:src/sys/cmsis_gcc.h **** 
 399:src/sys/cmsis_gcc.h **** /**
 400:src/sys/cmsis_gcc.h ****   \brief   Send Event
 401:src/sys/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 402:src/sys/cmsis_gcc.h ****  */
 403:src/sys/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 404:src/sys/cmsis_gcc.h **** {
 405:src/sys/cmsis_gcc.h ****   __ASM volatile ("sev");
 406:src/sys/cmsis_gcc.h **** }
 407:src/sys/cmsis_gcc.h **** 
 408:src/sys/cmsis_gcc.h **** 
 409:src/sys/cmsis_gcc.h **** /**
 410:src/sys/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 411:src/sys/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 412:src/sys/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 413:src/sys/cmsis_gcc.h ****            after the instruction has been completed.
 414:src/sys/cmsis_gcc.h ****  */
 415:src/sys/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 416:src/sys/cmsis_gcc.h **** {
 417:src/sys/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 418:src/sys/cmsis_gcc.h **** }
 419:src/sys/cmsis_gcc.h **** 
 420:src/sys/cmsis_gcc.h **** 
 421:src/sys/cmsis_gcc.h **** /**
 422:src/sys/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 423:src/sys/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 424:src/sys/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 425:src/sys/cmsis_gcc.h ****  */
 426:src/sys/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 147              		.loc 3 426 53 view .LVU30
 148              	.LBB29:
 427:src/sys/cmsis_gcc.h **** {
 428:src/sys/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 149              		.loc 3 428 3 view .LVU31
 150              		.syntax unified
 151              	@ 428 "src/sys/cmsis_gcc.h" 1
 152 005e BFF34F8F 		dsb 0xF
 153              	@ 0 "" 2
 154              		.thumb
 155              		.syntax unified
 156              	.LBE29:
 157              	.LBE28:
 158              	.LBE27:
 159              	.LBE26:
  60:src/main.c    **** 	ADC_set_prediv(0x1);
 160              		.loc 1 60 2 view .LVU32
 161 0062 0120     		movs	r0, #1
 162 0064 FFF7FEFF 		bl	ADC_set_prediv
 163              	.LVL1:
  61:src/main.c    **** 	ADC_set_sampling_time(&ADC1, 8,SMPR);
 164              		.loc 1 61 2 view .LVU33
 165 0068 0748     		ldr	r0, .L8+8
 166 006a 0821     		movs	r1, #8
 167 006c 0722     		movs	r2, #7
 168 006e FFF7FEFF 		bl	ADC_set_sampling_time
 169              	.LVL2:
  62:src/main.c    **** 	ADC_init_single_channel(&ADC1,8);
 170              		.loc 1 62 2 view .LVU34
  63:src/main.c    **** }
 171              		.loc 1 63 1 is_stmt 0 view .LVU35
 172 0072 BDE80840 		pop	{r3, lr}
 173              		.cfi_restore 14
 174              		.cfi_restore 3
 175              		.cfi_def_cfa_offset 0
  62:src/main.c    **** 	ADC_init_single_channel(&ADC1,8);
 176              		.loc 1 62 2 view .LVU36
 177 0076 0448     		ldr	r0, .L8+8
 178 0078 0821     		movs	r1, #8
 179 007a FFF7FEBF 		b	ADC_init_single_channel
 180              	.LVL3:
 181              	.L9:
 182 007e 00BF     		.align	2
 183              	.L8:
 184 0080 00000000 		.word	GPIOB
 185 0084 00000000 		.word	RCC
 186 0088 00000000 		.word	ADC1
 187              		.cfi_endproc
 188              	.LFE402:
 189              		.size	configuration_potentiometre, .-configuration_potentiometre
 190              		.align	1
 191              		.global	frequence
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 196              		.type	frequence, %function
 197              	frequence:
 198              	.LVL4:
 199              	.LFB403:
  64:src/main.c    **** 
  65:src/main.c    **** 
  66:src/main.c    **** /*---------------------------------------------- Interractions avec les composants ----------------
  67:src/main.c    **** 
  68:src/main.c    **** void frequence(uint32_t newFreq){ /* Hauteur de la note */
 200              		.loc 1 68 33 is_stmt 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
  69:src/main.c    **** 	uint32_t tempFreq = newFreq;
 204              		.loc 1 69 2 view .LVU38
  68:src/main.c    **** 	uint32_t tempFreq = newFreq;
 205              		.loc 1 68 33 is_stmt 0 view .LVU39
 206 008c 10B5     		push	{r4, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 4, -8
 209              		.cfi_offset 14, -4
  68:src/main.c    **** 	uint32_t tempFreq = newFreq;
 210              		.loc 1 68 33 view .LVU40
 211 008e 0446     		mov	r4, r0
 212              	.LVL5:
  70:src/main.c    **** 	if (newFreq == 0) tempFreq = 1;
 213              		.loc 1 70 2 is_stmt 1 view .LVU41
  71:src/main.c    **** 	uint32_t tempNewValue = (uint32_t) get_APB1TIMCLK() / TIM2.PSC / tempFreq; /* Calcul de la valeur 
 214              		.loc 1 71 2 view .LVU42
 215              		.loc 1 71 37 is_stmt 0 view .LVU43
 216 0090 FFF7FEFF 		bl	get_APB1TIMCLK
 217              	.LVL6:
 218              		.loc 1 71 60 view .LVU44
 219 0094 094A     		ldr	r2, .L11
 220              		.loc 1 71 11 view .LVU45
 221 0096 012C     		cmp	r4, #1
 222              		.loc 1 71 60 view .LVU46
 223 0098 936A     		ldr	r3, [r2, #40]
 224              		.loc 1 71 54 view .LVU47
 225 009a B0FBF3F3 		udiv	r3, r0, r3
 226              		.loc 1 71 11 view .LVU48
 227 009e 38BF     		it	cc
 228 00a0 0124     		movcc	r4, #1
 229              	.LVL7:
 230              		.loc 1 71 11 view .LVU49
 231 00a2 B3FBF4F0 		udiv	r0, r3, r4
 232              	.LVL8:
  72:src/main.c    **** 	TIM2.CR1 = 0; /* Désactivation du timer 2 */
 233              		.loc 1 72 2 is_stmt 1 view .LVU50
 234              		.loc 1 72 11 is_stmt 0 view .LVU51
 235 00a6 0023     		movs	r3, #0
 236 00a8 1360     		str	r3, [r2]
  73:src/main.c    **** 	/* Mise à jour du timer ...*/
  74:src/main.c    **** 	TIM2.ARR = tempNewValue;
 237              		.loc 1 74 2 is_stmt 1 view .LVU52
 238              		.loc 1 74 11 is_stmt 0 view .LVU53
 239 00aa D062     		str	r0, [r2, #44]
  75:src/main.c    **** 	TIM2.CCR4 = tempNewValue/2;
 240              		.loc 1 75 2 is_stmt 1 view .LVU54
 241              		.loc 1 75 26 is_stmt 0 view .LVU55
 242 00ac 4008     		lsrs	r0, r0, #1
 243              	.LVL9:
 244              		.loc 1 75 12 view .LVU56
 245 00ae 1064     		str	r0, [r2, #64]
 246              	.LVL10:
  76:src/main.c    **** 	TIM2.CNT=0;
 247              		.loc 1 76 2 is_stmt 1 view .LVU57
 248              		.loc 1 76 10 is_stmt 0 view .LVU58
 249 00b0 5362     		str	r3, [r2, #36]
  77:src/main.c    **** 	TIM2.CR1 |= 0x81; /* Réactivation du timer */
 250              		.loc 1 77 2 is_stmt 1 view .LVU59
 251              		.loc 1 77 11 is_stmt 0 view .LVU60
 252 00b2 1368     		ldr	r3, [r2]
 253 00b4 43F08103 		orr	r3, r3, #129
 254 00b8 1360     		str	r3, [r2]
  78:src/main.c    **** }
 255              		.loc 1 78 1 view .LVU61
 256 00ba 10BD     		pop	{r4, pc}
 257              	.L12:
 258              		.align	2
 259              	.L11:
 260 00bc 00000000 		.word	TIM2
 261              		.cfi_endproc
 262              	.LFE403:
 263              		.size	frequence, .-frequence
 264              		.align	1
 265              		.global	mesure_potentiometre
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 269              		.fpu fpv4-sp-d16
 270              		.type	mesure_potentiometre, %function
 271              	mesure_potentiometre:
 272              	.LVL11:
 273              	.LFB404:
  79:src/main.c    **** 
  80:src/main.c    **** /*Mesure de la valeur du potentiomètre*/
  81:src/main.c    **** void mesure_potentiometre(uint32_t *val){
 274              		.loc 1 81 41 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
  82:src/main.c    **** 	
  83:src/main.c    **** 	*val=ADC_convert_single_channel( &ADC1);
 278              		.loc 1 83 2 view .LVU63
  81:src/main.c    **** 	
 279              		.loc 1 81 41 is_stmt 0 view .LVU64
 280 00c0 10B5     		push	{r4, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 4, -8
 283              		.cfi_offset 14, -4
  81:src/main.c    **** 	
 284              		.loc 1 81 41 view .LVU65
 285 00c2 0446     		mov	r4, r0
 286              		.loc 1 83 7 view .LVU66
 287 00c4 0248     		ldr	r0, .L14
 288              	.LVL12:
 289              		.loc 1 83 7 view .LVU67
 290 00c6 FFF7FEFF 		bl	ADC_convert_single_channel
 291              	.LVL13:
 292              		.loc 1 83 6 view .LVU68
 293 00ca 2060     		str	r0, [r4]
  84:src/main.c    **** }
 294              		.loc 1 84 1 view .LVU69
 295 00cc 10BD     		pop	{r4, pc}
 296              	.LVL14:
 297              	.L15:
 298              		.loc 1 84 1 view .LVU70
 299 00ce 00BF     		.align	2
 300              	.L14:
 301 00d0 00000000 		.word	ADC1
 302              		.cfi_endproc
 303              	.LFE404:
 304              		.size	mesure_potentiometre, .-mesure_potentiometre
 305              		.align	1
 306              		.global	SysTick_Handler
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv4-sp-d16
 311              		.type	SysTick_Handler, %function
 312              	SysTick_Handler:
 313              	.LFB405:
  85:src/main.c    **** 
  86:src/main.c    **** /*---------------------------------------------------------------- Interruptions ------------------
  87:src/main.c    **** 
  88:src/main.c    **** /* Durée d'une note */ 
  89:src/main.c    **** void __attribute__((interrupt)) SysTick_Handler() {
 314              		.loc 1 89 51 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ Stack Align: May be called with mis-aligned SP.
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
  90:src/main.c    ****   compteur ++;
 319              		.loc 1 90 3 view .LVU72
 320              		.loc 1 90 12 is_stmt 0 view .LVU73
 321 00d4 234B     		ldr	r3, .L26
  89:src/main.c    ****   compteur ++;
 322              		.loc 1 89 51 view .LVU74
 323 00d6 6846     		mov	r0, sp
 324              		.cfi_register 13, 0
 325              		.loc 1 90 12 view .LVU75
 326 00d8 1A68     		ldr	r2, [r3]
  89:src/main.c    ****   compteur ++;
 327              		.loc 1 89 51 view .LVU76
 328 00da 20F00701 		bic	r1, r0, #7
 329 00de 8D46     		mov	sp, r1
 330              		.loc 1 90 12 view .LVU77
 331 00e0 0132     		adds	r2, r2, #1
  89:src/main.c    ****   compteur ++;
 332              		.loc 1 89 51 view .LVU78
 333 00e2 01B5     		push	{r0, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 13, -8
 336              		.cfi_offset 14, -4
 337              		.loc 1 90 12 view .LVU79
 338 00e4 1A60     		str	r2, [r3]
  91:src/main.c    **** /*Eteind l'appareil après un temps inscrit dans la variable COMPTEUR2*/
  92:src/main.c    ****   compteur2 --; /* Quel compteur on choisit ? */
 339              		.loc 1 92 3 is_stmt 1 view .LVU80
 340              		.loc 1 92 13 is_stmt 0 view .LVU81
 341 00e6 204A     		ldr	r2, .L26+4
 342 00e8 1168     		ldr	r1, [r2]
 343 00ea 0139     		subs	r1, r1, #1
 344 00ec 1160     		str	r1, [r2]
  93:src/main.c    ****   if (compteur2<=0)
 345              		.loc 1 93 3 is_stmt 1 view .LVU82
 346              		.loc 1 93 16 is_stmt 0 view .LVU83
 347 00ee 1268     		ldr	r2, [r2]
 348              		.loc 1 93 6 view .LVU84
 349 00f0 0AB9     		cbnz	r2, .L17
  94:src/main.c    **** 	flag = 3;
 350              		.loc 1 94 2 is_stmt 1 view .LVU85
 351              		.loc 1 94 7 is_stmt 0 view .LVU86
 352 00f2 0322     		movs	r2, #3
 353 00f4 5A60     		str	r2, [r3, #4]
 354              	.L17:
  95:src/main.c    **** 
  96:src/main.c    **** 
  97:src/main.c    ****   if ((compteur > VITESSE*tempo - 30)&&(compteur<VITESSE*tempo - 10)){
 355              		.loc 1 97 3 is_stmt 1 view .LVU87
 356              		.loc 1 97 17 is_stmt 0 view .LVU88
 357 00f6 93ED007A 		vldr.32	s14, [r3]	@ int
 358              		.loc 1 97 33 view .LVU89
 359 00fa DFED1C6A 		vldr.32	s13, .L26+8
 360              		.loc 1 97 26 view .LVU90
 361 00fe 93ED026A 		vldr.32	s12, [r3, #8]
 362              		.loc 1 97 33 view .LVU91
 363 0102 FBEE0E7A 		vmov.f32	s15, #-3.0e+1
 364 0106 E6EE267A 		vfma.f32	s15, s12, s13
 365              		.loc 1 97 17 view .LVU92
 366 010a B8EE477A 		vcvt.f32.u32	s14, s14
 367              		.loc 1 97 6 view .LVU93
 368 010e B4EEE77A 		vcmpe.f32	s14, s15
 369 0112 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 370 0116 10DD     		ble	.L18
 371              		.loc 1 97 49 discriminator 1 view .LVU94
 372 0118 93ED007A 		vldr.32	s14, [r3]	@ int
 373              		.loc 1 97 57 discriminator 1 view .LVU95
 374 011c 93ED026A 		vldr.32	s12, [r3, #8]
 375              		.loc 1 97 64 discriminator 1 view .LVU96
 376 0120 FAEE047A 		vmov.f32	s15, #-1.0e+1
 377 0124 E6EE267A 		vfma.f32	s15, s12, s13
 378              		.loc 1 97 49 discriminator 1 view .LVU97
 379 0128 B8EE477A 		vcvt.f32.u32	s14, s14
 380              		.loc 1 97 38 discriminator 1 view .LVU98
 381 012c B4EEE77A 		vcmpe.f32	s14, s15
 382 0130 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  98:src/main.c    **** 	flag = 2;
 383              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU99
 384              		.loc 1 98 7 is_stmt 0 discriminator 1 view .LVU100
 385 0134 44BF     		itt	mi
 386 0136 0222     		movmi	r2, #2
 387 0138 5A60     		strmi	r2, [r3, #4]
 388              	.L18:
  99:src/main.c    **** }
 100:src/main.c    ****   if (compteur > VITESSE*tempo){
 389              		.loc 1 100 3 is_stmt 1 view .LVU101
 390              		.loc 1 100 16 is_stmt 0 view .LVU102
 391 013a 93ED007A 		vldr.32	s14, [r3]	@ int
 392              		.loc 1 100 25 view .LVU103
 393 013e D3ED027A 		vldr.32	s15, [r3, #8]
 394              		.loc 1 100 16 view .LVU104
 395 0142 B8EE477A 		vcvt.f32.u32	s14, s14
 396              		.loc 1 100 25 view .LVU105
 397 0146 67EEA67A 		vmul.f32	s15, s15, s13
 101:src/main.c    ****     flag = 1; /* Prêt à jouer une note */
 102:src/main.c    ****     compteur = 0; /* On recommence à compter */
 103:src/main.c    ****   }
 104:src/main.c    **** }
 398              		.loc 1 104 1 view .LVU106
 399 014a BDE80140 		pop	{r0, lr}
 400              		.cfi_restore 14
 401              		.cfi_restore 0
 402              		.cfi_def_cfa_offset 0
 100:src/main.c    ****     flag = 1; /* Prêt à jouer une note */
 403              		.loc 1 100 6 view .LVU107
 404 014e B4EEE77A 		vcmpe.f32	s14, s15
 405 0152 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 101:src/main.c    ****     flag = 1; /* Prêt à jouer une note */
 406              		.loc 1 101 5 is_stmt 1 view .LVU108
 101:src/main.c    ****     flag = 1; /* Prêt à jouer une note */
 407              		.loc 1 101 10 is_stmt 0 view .LVU109
 408 0156 C1BF     		itttt	gt
 409 0158 0122     		movgt	r2, #1
 410 015a 5A60     		strgt	r2, [r3, #4]
 102:src/main.c    ****   }
 411              		.loc 1 102 5 is_stmt 1 view .LVU110
 102:src/main.c    ****   }
 412              		.loc 1 102 14 is_stmt 0 view .LVU111
 413 015c 0022     		movgt	r2, #0
 414 015e 1A60     		strgt	r2, [r3]
 415              		.loc 1 104 1 view .LVU112
 416 0160 8546     		mov	sp, r0
 417 0162 7047     		bx	lr
 418              	.L27:
 419              		.align	2
 420              	.L26:
 421 0164 00000000 		.word	.LANCHOR0
 422 0168 00000000 		.word	.LANCHOR1
 423 016c 00009643 		.word	1133903872
 424              		.cfi_endproc
 425              	.LFE405:
 426              		.size	SysTick_Handler, .-SysTick_Handler
 427              		.align	1
 428              		.global	EXTI9_5_Handler
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv4-sp-d16
 433              		.type	EXTI9_5_Handler, %function
 434              	EXTI9_5_Handler:
 435              	.LFB406:
 105:src/main.c    **** 
 106:src/main.c    **** /* Bouton carte fille pour changer de mélodie */
 107:src/main.c    **** void __attribute__ ((interrupt)) EXTI9_5_Handler(){
 436              		.loc 1 107 51 is_stmt 1 view -0
 437              		.cfi_startproc
 438              		@ Stack Align: May be called with mis-aligned SP.
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 108:src/main.c    **** 	EXTI.PR |= (1<<8);
 441              		.loc 1 108 2 view .LVU114
 442              		.loc 1 108 10 is_stmt 0 view .LVU115
 443 0170 0E4A     		ldr	r2, .L30
 107:src/main.c    **** 	EXTI.PR |= (1<<8);
 444              		.loc 1 107 51 view .LVU116
 445 0172 6846     		mov	r0, sp
 446              		.cfi_register 13, 0
 447              		.loc 1 108 10 view .LVU117
 448 0174 5369     		ldr	r3, [r2, #20]
 107:src/main.c    **** 	EXTI.PR |= (1<<8);
 449              		.loc 1 107 51 view .LVU118
 450 0176 20F00701 		bic	r1, r0, #7
 451 017a 8D46     		mov	sp, r1
 452              		.loc 1 108 10 view .LVU119
 453 017c 43F48073 		orr	r3, r3, #256
 107:src/main.c    **** 	EXTI.PR |= (1<<8);
 454              		.loc 1 107 51 view .LVU120
 455 0180 01B5     		push	{r0, lr}
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 13, -8
 458              		.cfi_offset 14, -4
 459              		.loc 1 108 10 view .LVU121
 460 0182 5361     		str	r3, [r2, #20]
 109:src/main.c    **** 	j=j+2;
 461              		.loc 1 109 2 is_stmt 1 view .LVU122
 462              		.loc 1 109 5 is_stmt 0 view .LVU123
 463 0184 0A4B     		ldr	r3, .L30+4
 110:src/main.c    **** 	i=0;
 111:src/main.c    **** 	if (jtaille<j+2)
 464              		.loc 1 111 13 view .LVU124
 465 0186 0B48     		ldr	r0, .L30+8
 109:src/main.c    **** 	j=j+2;
 466              		.loc 1 109 5 view .LVU125
 467 0188 DA68     		ldr	r2, [r3, #12]
 110:src/main.c    **** 	i=0;
 468              		.loc 1 110 3 view .LVU126
 469 018a 0021     		movs	r1, #0
 109:src/main.c    **** 	j=j+2;
 470              		.loc 1 109 5 view .LVU127
 471 018c 0232     		adds	r2, r2, #2
 109:src/main.c    **** 	j=j+2;
 472              		.loc 1 109 3 view .LVU128
 473 018e DA60     		str	r2, [r3, #12]
 110:src/main.c    **** 	i=0;
 474              		.loc 1 110 2 is_stmt 1 view .LVU129
 110:src/main.c    **** 	i=0;
 475              		.loc 1 110 3 is_stmt 0 view .LVU130
 476 0190 1961     		str	r1, [r3, #16]
 477              		.loc 1 111 2 is_stmt 1 view .LVU131
 478              		.loc 1 111 15 is_stmt 0 view .LVU132
 479 0192 DA68     		ldr	r2, [r3, #12]
 480              		.loc 1 111 13 view .LVU133
 481 0194 4068     		ldr	r0, [r0, #4]
 482              		.loc 1 111 15 view .LVU134
 483 0196 0232     		adds	r2, r2, #2
 484              		.loc 1 111 5 view .LVU135
 485 0198 8242     		cmp	r2, r0
 112:src/main.c    **** 		j=0;
 486              		.loc 1 112 3 is_stmt 1 view .LVU136
 113:src/main.c    **** 	flag_v = 1;		
 114:src/main.c    **** }
 487              		.loc 1 114 1 is_stmt 0 view .LVU137
 488 019a BDE80140 		pop	{r0, lr}
 489              		.cfi_restore 14
 490              		.cfi_restore 0
 491              		.cfi_def_cfa_offset 0
 113:src/main.c    **** 	flag_v = 1;		
 492              		.loc 1 113 9 view .LVU138
 493 019e 4FF00102 		mov	r2, #1
 112:src/main.c    **** 		j=0;
 494              		.loc 1 112 4 view .LVU139
 495 01a2 88BF     		it	hi
 496 01a4 D960     		strhi	r1, [r3, #12]
 113:src/main.c    **** 	flag_v = 1;		
 497              		.loc 1 113 2 is_stmt 1 view .LVU140
 498              		.loc 1 114 1 is_stmt 0 view .LVU141
 499 01a6 8546     		mov	sp, r0
 113:src/main.c    **** 	flag_v = 1;		
 500              		.loc 1 113 9 view .LVU142
 501 01a8 5A61     		str	r2, [r3, #20]
 502              		.loc 1 114 1 view .LVU143
 503 01aa 7047     		bx	lr
 504              	.L31:
 505              		.align	2
 506              	.L30:
 507 01ac 00000000 		.word	EXTI
 508 01b0 00000000 		.word	.LANCHOR0
 509 01b4 00000000 		.word	.LANCHOR1
 510              		.cfi_endproc
 511              	.LFE406:
 512              		.size	EXTI9_5_Handler, .-EXTI9_5_Handler
 513              		.align	1
 514              		.global	EXTI15_10_Handler
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 518              		.fpu fpv4-sp-d16
 519              		.type	EXTI15_10_Handler, %function
 520              	EXTI15_10_Handler:
 521              	.LFB407:
 115:src/main.c    **** 
 116:src/main.c    **** /* Bouton bleu pour pour changer le mode de lecture des musiques*/
 117:src/main.c    **** void __attribute__((interrupt)) EXTI15_10_Handler(){
 522              		.loc 1 117 52 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ Stack Align: May be called with mis-aligned SP.
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 118:src/main.c    **** 	EXTI.PR |= (1<<13);
 527              		.loc 1 118 2 view .LVU145
 117:src/main.c    **** 	EXTI.PR |= (1<<13);
 528              		.loc 1 117 52 is_stmt 0 view .LVU146
 529 01b8 6846     		mov	r0, sp
 530              		.cfi_register 13, 0
 531 01ba 20F00701 		bic	r1, r0, #7
 532 01be 8D46     		mov	sp, r1
 533 01c0 01B5     		push	{r0, lr}
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 13, -8
 536              		.cfi_offset 14, -4
 537              		.loc 1 118 10 view .LVU147
 538 01c2 074A     		ldr	r2, .L33
 539 01c4 5369     		ldr	r3, [r2, #20]
 540 01c6 43F40053 		orr	r3, r3, #8192
 541 01ca 5361     		str	r3, [r2, #20]
 119:src/main.c    **** 	mode = 1 - mode;
 542              		.loc 1 119 2 is_stmt 1 view .LVU148
 120:src/main.c    **** 	
 121:src/main.c    **** }
 543              		.loc 1 121 1 is_stmt 0 view .LVU149
 544 01cc BDE80140 		pop	{r0, lr}
 545              		.cfi_restore 14
 546              		.cfi_restore 0
 547              		.cfi_def_cfa_offset 0
 119:src/main.c    **** 	mode = 1 - mode;
 548              		.loc 1 119 11 view .LVU150
 549 01d0 044A     		ldr	r2, .L33+4
 550 01d2 9369     		ldr	r3, [r2, #24]
 551 01d4 C3F10103 		rsb	r3, r3, #1
 119:src/main.c    **** 	mode = 1 - mode;
 552              		.loc 1 119 7 view .LVU151
 553 01d8 9361     		str	r3, [r2, #24]
 554              		.loc 1 121 1 view .LVU152
 555 01da 8546     		mov	sp, r0
 556 01dc 7047     		bx	lr
 557              	.L34:
 558 01de 00BF     		.align	2
 559              	.L33:
 560 01e0 00000000 		.word	EXTI
 561 01e4 00000000 		.word	.LANCHOR0
 562              		.cfi_endproc
 563              	.LFE407:
 564              		.size	EXTI15_10_Handler, .-EXTI15_10_Handler
 565              		.align	1
 566              		.global	veille
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv4-sp-d16
 571              		.type	veille, %function
 572              	veille:
 573              	.LFB408:
 122:src/main.c    **** /*-------------------------------------------------------------- Procédure de veille -------------
 123:src/main.c    **** 
 124:src/main.c    **** void veille(){
 574              		.loc 1 124 14 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 125:src/main.c    **** 	if (flag_v==1){
 579              		.loc 1 125 12 is_stmt 0 view .LVU154
 580 01e8 034A     		ldr	r2, .L38
 581              	.L36:
 582              		.loc 1 125 2 is_stmt 1 view .LVU155
 583              		.loc 1 125 12 is_stmt 0 view .LVU156
 584 01ea 5369     		ldr	r3, [r2, #20]
 585              		.loc 1 125 5 view .LVU157
 586 01ec 012B     		cmp	r3, #1
 587 01ee FCD1     		bne	.L36
 126:src/main.c    **** 		compteur2 = 5 * 60 * 1000;
 588              		.loc 1 126 3 is_stmt 1 view .LVU158
 589              		.loc 1 126 13 is_stmt 0 view .LVU159
 590 01f0 024B     		ldr	r3, .L38+4
 591 01f2 034A     		ldr	r2, .L38+8
 592 01f4 1A60     		str	r2, [r3]
 127:src/main.c    **** 		return;
 593              		.loc 1 127 3 is_stmt 1 view .LVU160
 128:src/main.c    **** 	}
 129:src/main.c    **** 	veille();
 130:src/main.c    **** }
 594              		.loc 1 130 1 is_stmt 0 view .LVU161
 595 01f6 7047     		bx	lr
 596              	.L39:
 597              		.align	2
 598              	.L38:
 599 01f8 00000000 		.word	.LANCHOR0
 600 01fc 00000000 		.word	.LANCHOR1
 601 0200 E0930400 		.word	300000
 602              		.cfi_endproc
 603              	.LFE408:
 604              		.size	veille, .-veille
 605              		.section	.rodata.str1.1,"aMS",%progbits,1
 606              	.LC1:
 607 0000 496E6974 		.ascii	"Initialisation...\012\015\000"
 607      69616C69 
 607      73617469 
 607      6F6E2E2E 
 607      2E0A0D00 
 608              	.LC2:
 609 0014 46696E20 		.ascii	"Fin initialisation !\012\015\000"
 609      696E6974 
 609      69616C69 
 609      73617469 
 609      6F6E2021 
 610              	.LC3:
 611 002b 20456E20 		.ascii	" En cours: %s, note = %lu Hz (n\302\260%lu) en %lu "
 611      636F7572 
 611      733A2025 
 611      732C206E 
 611      6F746520 
 612 0058 74656D70 		.ascii	"temps, duty_cycle =0.%lu, mode = %lu, time %lu\015\012"
 612      732C2064 
 612      7574795F 
 612      6379636C 
 612      65203D30 
 613 0088 00       		.ascii	"\000"
 614              		.section	.text.startup,"ax",%progbits
 615              		.align	1
 616              		.global	main
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 620              		.fpu fpv4-sp-d16
 621              		.type	main, %function
 622              	main:
 623              	.LFB409:
 131:src/main.c    **** 
 132:src/main.c    **** /*-------------------------------------------------------------- Fonction principale --------------
 133:src/main.c    **** 
 134:src/main.c    **** int main() {
 624              		.loc 1 134 12 is_stmt 1 view -0
 625              		.cfi_startproc
 626              		@ Volatile: function does not return.
 627              		@ args = 0, pretend = 0, frame = 3288
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 135:src/main.c    **** 
 136:src/main.c    **** 	/* Melodies disponibles (dans l'ordre) */
 137:src/main.c    **** 	char nom[4][20]={"Au clair de la lune","La Berceuse","Vive le vent","Harry Potter"};
 629              		.loc 1 137 2 view .LVU163
 134:src/main.c    **** 
 630              		.loc 1 134 12 is_stmt 0 view .LVU164
 631 0000 2DE98048 		push	{r7, fp, lr}
 632              		.cfi_def_cfa_offset 12
 633              		.cfi_offset 7, -12
 634              		.cfi_offset 11, -8
 635              		.cfi_offset 14, -4
 636 0004 ADF6EC4D 		subw	sp, sp, #3308
 637              		.cfi_def_cfa_offset 3320
 138:src/main.c    **** 
 139:src/main.c    **** 	/* Variable pour valeur potentiomètre et tableau des fréquences et durées des notes de chaques 
 140:src/main.c    **** 	uint32_t val, tab[8][100] = {
 638              		.loc 1 140 16 view .LVU165
 639 0008 1AAC     		add	r4, sp, #104
 137:src/main.c    **** 
 640              		.loc 1 137 7 view .LVU166
 641 000a FD49     		ldr	r1, .L63
 642 000c 5022     		movs	r2, #80
 643 000e 06A8     		add	r0, sp, #24
 644 0010 FFF7FEFF 		bl	memcpy
 645              	.LVL15:
 646              		.loc 1 140 2 is_stmt 1 view .LVU167
 647              		.loc 1 140 16 is_stmt 0 view .LVU168
 648 0014 4FF44862 		mov	r2, #3200
 649 0018 0021     		movs	r1, #0
 650 001a 2046     		mov	r0, r4
 651 001c 40F22517 		movw	r7, #293
 652 0020 FFF7FEFF 		bl	memset
 653              	.LVL16:
 654 0024 44F6206A 		movw	r10, #20000
 655 0028 40F24912 		movw	r2, #329
 656 002c 40F2051E 		movw	lr, #261
 657 0030 DC23     		movs	r3, #220
 658 0032 F621     		movs	r1, #246
 659 0034 C4E900AE 		strd	r10, lr, [r4]
 660 0038 C4E90472 		strd	r7, r2, [r4, #16]
 661 003c C4E9067E 		strd	r7, lr, [r4, #24]
 662 0040 C4E90827 		strd	r2, r7, [r4, #32]
 663 0044 C4E90A7E 		strd	r7, lr, [r4, #40]
 664 0048 C4E90EE7 		strd	lr, r7, [r4, #56]
 665 004c C4E91027 		strd	r2, r7, [r4, #64]
 666 0050 C4E912E2 		strd	lr, r2, [r4, #72]
 667 0054 C4E916E7 		strd	lr, r7, [r4, #88]
 668 0058 C4E91D7E 		strd	r7, lr, [r4, #116]
 669 005c C4E902EE 		strd	lr, lr, [r4, #8]
 670 0060 C4E90CEE 		strd	lr, lr, [r4, #48]
 671 0064 C4E91477 		strd	r7, r7, [r4, #80]
 672 0068 C4E91877 		strd	r7, r7, [r4, #96]
 673 006c C4E91B33 		strd	r3, r3, [r4, #108]
 674 0070 A766     		str	r7, [r4, #104]
 675 0072 C4E91F13 		strd	r1, r3, [r4, #124]
 676 0076 C423     		movs	r3, #196
 677 0078 0225     		movs	r5, #2
 678 007a 0421     		movs	r1, #4
 679 007c 40F20A20 		movw	r0, #522
 680 0080 4FF4C479 		mov	r9, #392
 681 0084 40F25D18 		movw	r8, #349
 682 0088 40F2ED1C 		movw	ip, #493
 683 008c 4FF4DC76 		mov	r6, #440
 684 0090 C4E9213E 		strd	r3, lr, [r4, #132]
 685 0094 4FF00A0B 		mov	fp, #10
 686 0098 0123     		movs	r3, #1
 687 009a C4E92572 		strd	r7, r2, [r4, #148]
 688 009e C4E9277E 		strd	r7, lr, [r4, #156]
 689 00a2 C4E92927 		strd	r2, r7, [r4, #164]
 690 00a6 C4E92B7E 		strd	r7, lr, [r4, #172]
 691 00aa C4E964B3 		strd	fp, r3, [r4, #400]
 692 00ae C4E923EE 		strd	lr, lr, [r4, #140]
 693 00b2 C4E96633 		strd	r3, r3, [r4, #408]
 694 00b6 C4E96B33 		strd	r3, r3, [r4, #428]
 695 00ba C4E96D33 		strd	r3, r3, [r4, #436]
 696 00be C4E96F13 		strd	r1, r3, [r4, #444]
 697 00c2 C4E97133 		strd	r3, r3, [r4, #452]
 698 00c6 C4E97335 		strd	r3, r5, [r4, #460]
 699 00ca C4E97553 		strd	r5, r3, [r4, #468]
 700 00ce C4F8A031 		str	r3, [r4, #416]
 701 00d2 C4E96955 		strd	r5, r5, [r4, #420]
 702 00d6 C4E97733 		strd	r3, r3, [r4, #476]
 703 00da C4E9C8A2 		strd	r10, r2, [r4, #800]
 704 00de C4E9CB92 		strd	r9, r2, [r4, #812]
 705 00e2 C4E9CD29 		strd	r2, r9, [r4, #820]
 706 00e6 C4E97931 		strd	r3, r1, [r4, #484]
 707 00ea C4E97B33 		strd	r3, r3, [r4, #492]
 708 00ee C4E97D33 		strd	r3, r3, [r4, #500]
 709 00f2 C4E98133 		strd	r3, r3, [r4, #516]
 710 00f6 C4E98333 		strd	r3, r3, [r4, #524]
 711 00fa C4E98513 		strd	r1, r3, [r4, #532]
 712 00fe C4E98733 		strd	r3, r3, [r4, #540]
 713 0102 C4E98935 		strd	r3, r5, [r4, #548]
 714 0106 C4E98B53 		strd	r5, r3, [r4, #556]
 715 010a C4E98D33 		strd	r3, r3, [r4, #564]
 716 010e C4E98F31 		strd	r3, r1, [r4, #572]
 717 0112 C4F82823 		str	r2, [r4, #808]
 718 0116 C4E97F55 		strd	r5, r5, [r4, #508]
 719 011a C4E9CF29 		strd	r2, r9, [r4, #828]
 720 011e C4E9D10C 		strd	r0, ip, [r4, #836]
 721 0122 C4E9D597 		strd	r9, r7, [r4, #852]
 722 0126 C4E9D887 		strd	r8, r7, [r4, #864]
 723 012a C4E9DA72 		strd	r7, r2, [r4, #872]
 724 012e C4E9DC87 		strd	r8, r7, [r4, #880]
 725 0132 C4E9DE8C 		strd	r8, ip, [r4, #888]
 726 0136 C4E9E069 		strd	r6, r9, [r4, #896]
 727 013a C4E9E2C0 		strd	ip, r0, [r4, #904]
 728 013e C4E9E606 		strd	r0, r6, [r4, #920]
 729 0142 C4E9E889 		strd	r8, r9, [r4, #928]
 730 0146 C4E9EA2E 		strd	r2, lr, [r4, #936]
 731 014a C4E9EC89 		strd	r8, r9, [r4, #944]
 732 014e C4E9EE69 		strd	r6, r9, [r4, #952]
 733 0152 C4E9D366 		strd	r6, r6, [r4, #844]
 734 0156 C4E9E4EE 		strd	lr, lr, [r4, #912]
 735 015a C4F85C23 		str	r2, [r4, #860]
 736 015e C4E9F0EE 		strd	lr, lr, [r4, #960]
 737 0162 C4E9F206 		strd	r0, r6, [r4, #968]
 738 0166 0326     		movs	r6, #3
 739 0168 C4F8BC64 		str	r6, [r4, #1212]
 740 016c C4F8D864 		str	r6, [r4, #1240]
 741 0170 4FF4DC76 		mov	r6, #440
 742 0174 C4E9F489 		strd	r8, r9, [r4, #976]
 743 0178 C4E9F62E 		strd	r2, lr, [r4, #984]
 744 017c C4E9F882 		strd	r8, r2, [r4, #992]
 745 0180 C4E9FA7E 		strd	r7, lr, [r4, #1000]
 746 0184 C4F8B0B4 		str	fp, [r4, #1200]
 747 0188 C4F8B434 		str	r3, [r4, #1204]
 748 018c C4F8B834 		str	r3, [r4, #1208]
 749 0190 C4F8C034 		str	r3, [r4, #1216]
 750 0194 C4F8C814 		str	r1, [r4, #1224]
 751 0198 C4F8CC34 		str	r3, [r4, #1228]
 752 019c C4F8D034 		str	r3, [r4, #1232]
 753 01a0 C4F8DC34 		str	r3, [r4, #1244]
 754 01a4 C4F8E834 		str	r3, [r4, #1256]
 755 01a8 C4F8EC34 		str	r3, [r4, #1260]
 756 01ac C4F8F834 		str	r3, [r4, #1272]
 757 01b0 C4F8FC34 		str	r3, [r4, #1276]
 758 01b4 C4F80015 		str	r1, [r4, #1280]
 759 01b8 C4F80435 		str	r3, [r4, #1284]
 760 01bc C4F8C454 		str	r5, [r4, #1220]
 761 01c0 C4F8D454 		str	r5, [r4, #1236]
 762 01c4 C4F8E054 		str	r5, [r4, #1248]
 763 01c8 C4F8E454 		str	r5, [r4, #1252]
 764 01cc C4F8F054 		str	r5, [r4, #1264]
 765 01d0 C4F8F454 		str	r5, [r4, #1268]
 766 01d4 C4F80835 		str	r3, [r4, #1288]
 767 01d8 C4F80C35 		str	r3, [r4, #1292]
 768 01dc C4F81035 		str	r3, [r4, #1296]
 769 01e0 C4F81C15 		str	r1, [r4, #1308]
 770 01e4 C4F82035 		str	r3, [r4, #1312]
 771 01e8 C4F82435 		str	r3, [r4, #1316]
 772 01ec C4F82815 		str	r1, [r4, #1320]
 773 01f0 C4F82C35 		str	r3, [r4, #1324]
 774 01f4 C4F83035 		str	r3, [r4, #1328]
 775 01f8 C4F83415 		str	r1, [r4, #1332]
 776 01fc C4F83835 		str	r3, [r4, #1336]
 777 0200 C4F83C35 		str	r3, [r4, #1340]
 778 0204 C4F84C15 		str	r1, [r4, #1356]
 779 0208 C4F85035 		str	r3, [r4, #1360]
 780 020c C4F85435 		str	r3, [r4, #1364]
 781 0210 C4F85815 		str	r1, [r4, #1368]
 782 0214 C4F85C35 		str	r3, [r4, #1372]
 783 0218 C4F86035 		str	r3, [r4, #1376]
 784 021c C4F86415 		str	r1, [r4, #1380]
 785 0220 C4F86835 		str	r3, [r4, #1384]
 786 0224 C4F86C35 		str	r3, [r4, #1388]
 787 0228 C4F87C15 		str	r1, [r4, #1404]
 788 022c C4F840A6 		str	r10, [r4, #1600]
 789 0230 C4F84426 		str	r2, [r4, #1604]
 790 0234 C4F84826 		str	r2, [r4, #1608]
 791 0238 C4F81455 		str	r5, [r4, #1300]
 792 023c C4F81855 		str	r5, [r4, #1304]
 793 0240 C4F84055 		str	r5, [r4, #1344]
 794 0244 C4F84455 		str	r5, [r4, #1348]
 795 0248 C4F84855 		str	r5, [r4, #1352]
 796 024c C4F87055 		str	r5, [r4, #1392]
 797 0250 C4F87455 		str	r5, [r4, #1396]
 798 0254 C4F87855 		str	r5, [r4, #1400]
 799 0258 C4F84C26 		str	r2, [r4, #1612]
 800 025c C4F85026 		str	r2, [r4, #1616]
 801 0260 C4F85426 		str	r2, [r4, #1620]
 802 0264 C4F85826 		str	r2, [r4, #1624]
 803 0268 C4F85C26 		str	r2, [r4, #1628]
 804 026c C4F86096 		str	r9, [r4, #1632]
 805 0270 C4F864E6 		str	lr, [r4, #1636]
 806 0274 C4F86876 		str	r7, [r4, #1640]
 807 0278 C4F86C26 		str	r2, [r4, #1644]
 808 027c C4F87086 		str	r8, [r4, #1648]
 809 0280 C4F87486 		str	r8, [r4, #1652]
 810 0284 C4F87886 		str	r8, [r4, #1656]
 811 0288 C4F87C26 		str	r2, [r4, #1660]
 812 028c C4F88026 		str	r2, [r4, #1664]
 813 0290 C4F88426 		str	r2, [r4, #1668]
 814 0294 C4F88876 		str	r7, [r4, #1672]
 815 0298 C4F88C76 		str	r7, [r4, #1676]
 816 029c C4F89076 		str	r7, [r4, #1680]
 817 02a0 C4F89426 		str	r2, [r4, #1684]
 818 02a4 C4F89876 		str	r7, [r4, #1688]
 819 02a8 C4F89C96 		str	r9, [r4, #1692]
 820 02ac C4F8A026 		str	r2, [r4, #1696]
 821 02b0 C4F8A426 		str	r2, [r4, #1700]
 822 02b4 C4F8A826 		str	r2, [r4, #1704]
 823 02b8 C4F8AC26 		str	r2, [r4, #1708]
 824 02bc C4F8B026 		str	r2, [r4, #1712]
 825 02c0 C4F8B426 		str	r2, [r4, #1716]
 826 02c4 C4F8B826 		str	r2, [r4, #1720]
 827 02c8 C4F8BC96 		str	r9, [r4, #1724]
 828 02cc C4F8C0E6 		str	lr, [r4, #1728]
 829 02d0 C4F8C476 		str	r7, [r4, #1732]
 830 02d4 C4F8C826 		str	r2, [r4, #1736]
 831 02d8 C4F8CC86 		str	r8, [r4, #1740]
 832 02dc C4F8D086 		str	r8, [r4, #1744]
 833 02e0 C4F8D486 		str	r8, [r4, #1748]
 834 02e4 C4F8D896 		str	r9, [r4, #1752]
 835 02e8 C4F8DC86 		str	r8, [r4, #1756]
 836 02ec C4F8E026 		str	r2, [r4, #1760]
 837 02f0 C4F8E426 		str	r2, [r4, #1764]
 838 02f4 C4F8E826 		str	r2, [r4, #1768]
 839 02f8 C4F8EC96 		str	r9, [r4, #1772]
 840 02fc C4F8F096 		str	r9, [r4, #1776]
 841 0300 C4F8F486 		str	r8, [r4, #1780]
 842 0304 C4F8F876 		str	r7, [r4, #1784]
 843 0308 C4F8FCE6 		str	lr, [r4, #1788]
 844 030c C4F8D0B7 		str	fp, [r4, #2000]
 845 0310 C4F8D437 		str	r3, [r4, #2004]
 846 0314 C4F8D837 		str	r3, [r4, #2008]
 847 0318 C4F8E037 		str	r3, [r4, #2016]
 848 031c C4F8E437 		str	r3, [r4, #2020]
 849 0320 C4F8EC37 		str	r3, [r4, #2028]
 850 0324 C4F8F037 		str	r3, [r4, #2032]
 851 0328 C4F8F437 		str	r3, [r4, #2036]
 852 032c C4F8F837 		str	r3, [r4, #2040]
 853 0330 C4F8FC17 		str	r1, [r4, #2044]
 854 0334 C4F80038 		str	r3, [r4, #2048]
 855 0338 C4F80438 		str	r3, [r4, #2052]
 856 033c C4F80C38 		str	r3, [r4, #2060]
 857 0340 C4F81038 		str	r3, [r4, #2064]
 858 0344 C4F81838 		str	r3, [r4, #2072]
 859 0348 C4F81C38 		str	r3, [r4, #2076]
 860 034c C4F82038 		str	r3, [r4, #2080]
 861 0350 C4F8DC57 		str	r5, [r4, #2012]
 862 0354 C4F8E857 		str	r5, [r4, #2024]
 863 0358 C4F80858 		str	r5, [r4, #2056]
 864 035c C4F81458 		str	r5, [r4, #2068]
 865 0360 C4F82438 		str	r3, [r4, #2084]
 866 0364 C4F83038 		str	r3, [r4, #2096]
 867 0368 C4F83438 		str	r3, [r4, #2100]
 868 036c C4F83C38 		str	r3, [r4, #2108]
 869 0370 C4F84038 		str	r3, [r4, #2112]
 870 0374 C4F84838 		str	r3, [r4, #2120]
 871 0378 C4F84C38 		str	r3, [r4, #2124]
 872 037c C4F85038 		str	r3, [r4, #2128]
 873 0380 C4F85438 		str	r3, [r4, #2132]
 874 0384 C4F85818 		str	r1, [r4, #2136]
 875 0388 C4F85C38 		str	r3, [r4, #2140]
 876 038c C4F86038 		str	r3, [r4, #2144]
 877 0390 C4F86438 		str	r3, [r4, #2148]
 878 0394 C4F86838 		str	r3, [r4, #2152]
 879 0398 C4F86C38 		str	r3, [r4, #2156]
 880 039c C4F87038 		str	r3, [r4, #2160]
 881 03a0 C4F87438 		str	r3, [r4, #2164]
 882 03a4 C4F87838 		str	r3, [r4, #2168]
 883 03a8 C4F87C38 		str	r3, [r4, #2172]
 884 03ac C4F88038 		str	r3, [r4, #2176]
 885 03b0 C4F88438 		str	r3, [r4, #2180]
 886 03b4 C4F88838 		str	r3, [r4, #2184]
 887 03b8 C4F88C18 		str	r1, [r4, #2188]
 888 03bc C4F860A9 		str	r10, [r4, #2400]
 889 03c0 C4F86429 		str	r2, [r4, #2404]
 890 03c4 C4F86C09 		str	r0, [r4, #2412]
 891 03c8 C4F870C9 		str	ip, [r4, #2416]
 892 03cc C4F82858 		str	r5, [r4, #2088]
 893 03d0 C4F82C58 		str	r5, [r4, #2092]
 894 03d4 C4F83858 		str	r5, [r4, #2104]
 895 03d8 C4F84458 		str	r5, [r4, #2116]
 896 03dc C4F86869 		str	r6, [r4, #2408]
 897 03e0 C4F87469 		str	r6, [r4, #2420]
 898 03e4 C4F87829 		str	r2, [r4, #2424]
 899 03e8 C4F87C79 		str	r7, [r4, #2428]
 900 03ec 40F29F17 		movw	r7, #415
 901 03f0 C4F89079 		str	r7, [r4, #2448]
 902 03f4 4FF4E977 		mov	r7, #466
 903 03f8 40F26E2E 		movw	lr, #622
 904 03fc 02E0     		b	.L64
 905              	.L65:
 906 03fe 00BF     		.align	2
 907              	.L63:
 908 0400 00000000 		.word	.LANCHOR2
 909              	.L64:
 910 0404 40F2BA28 		movw	r8, #698
 911 0408 C4F89479 		str	r7, [r4, #2452]
 912 040c 4FF4447B 		mov	fp, #784
 913 0410 40F29227 		movw	r7, #658
 914 0414 40F2DE2A 		movw	r10, #734
 915 0418 40F22A29 		movw	r9, #554
 916 041c C4F880C9 		str	ip, [r4, #2432]
 917 0420 C4F88809 		str	r0, [r4, #2440]
 918 0424 C4F88CC9 		str	ip, [r4, #2444]
 919 0428 C4F89829 		str	r2, [r4, #2456]
 920 042c C4F89C29 		str	r2, [r4, #2460]
 921 0430 C4F8A409 		str	r0, [r4, #2468]
 922 0434 C4F8A8C9 		str	ip, [r4, #2472]
 923 0438 C4F8CCE9 		str	lr, [r4, #2508]
 924 043c C4F8D0E9 		str	lr, [r4, #2512]
 925 0440 C4F8D409 		str	r0, [r4, #2516]
 926 0444 C4F8DC09 		str	r0, [r4, #2524]
 927 0448 C4F8E409 		str	r0, [r4, #2532]
 928 044c C4F8EC09 		str	r0, [r4, #2540]
 929 0450 C4F8F8E9 		str	lr, [r4, #2552]
 930 0454 C4F88469 		str	r6, [r4, #2436]
 931 0458 C4F8A069 		str	r6, [r4, #2464]
 932 045c C4F8AC69 		str	r6, [r4, #2476]
 933 0460 C4F8B079 		str	r7, [r4, #2480]
 934 0464 C4F8B4B9 		str	fp, [r4, #2484]
 935 0468 C4F8B8A9 		str	r10, [r4, #2488]
 936 046c C4F8BC89 		str	r8, [r4, #2492]
 937 0470 C4F8C099 		str	r9, [r4, #2496]
 938 0474 C4F8C489 		str	r8, [r4, #2500]
 939 0478 C4F8C879 		str	r7, [r4, #2504]
 940 047c C4F8D869 		str	r6, [r4, #2520]
 941 0480 C4F8E079 		str	r7, [r4, #2528]
 942 0484 C4F8E879 		str	r7, [r4, #2536]
 943 0488 C4F8F089 		str	r8, [r4, #2544]
 944 048c C4F8F479 		str	r7, [r4, #2548]
 945 0490 C4F8FCC9 		str	ip, [r4, #2556]
 946 0494 C4F8102A 		str	r2, [r4, #2576]
 947 0498 0522     		movs	r2, #5
 948 049a 40F2371C 		movw	ip, #311
 949 049e C4F8000A 		str	r0, [r4, #2560]
 950 04a2 C4F8180A 		str	r0, [r4, #2584]
 951 04a6 C4F8200A 		str	r0, [r4, #2592]
 952 04aa C4F8280A 		str	r0, [r4, #2600]
 953 04ae C4F84C0A 		str	r0, [r4, #2636]
 954 04b2 C4F8F02A 		str	r2, [r4, #2800]
 141:src/main.c    **** 	
 142:src/main.c    **** 	/*Chanson au clair de la lune*/
 143:src/main.c    **** 	
 144:src/main.c    **** 	{INAUDIBLE,DO,DO,DO,RE,MI,RE,DO,MI,RE,RE,DO,
 145:src/main.c    **** 	DO,DO,DO,RE,MI,RE,DO,MI,RE,RE,DO,
 146:src/main.c    **** 	RE,RE,RE,RE,LA/2,LA/2,RE,DO,SI/2,LA/2,SOL/2,
 147:src/main.c    **** 	DO,DO,DO,RE,MI,RE,DO,MI,RE,RE,DO,
 148:src/main.c    **** 	'\0'},	
 149:src/main.c    **** 	{10,
 150:src/main.c    **** 	1,1,1,1,2,2,1,1,1,1,4,
 151:src/main.c    **** 	1,1,1,1,2,2,1,1,1,1,4,
 152:src/main.c    **** 	1,1,1,1,2,2,1,1,1,1,4,
 153:src/main.c    **** 	1,1,1,1,2,2,1,1,1,1,4
 154:src/main.c    **** 	},
 155:src/main.c    **** 	
 156:src/main.c    **** 	/*Chanson La Berceuse*/	
 157:src/main.c    **** 	{INAUDIBLE,
 158:src/main.c    **** 	MI,MI,SOL,MI,MI,SOL,
 159:src/main.c    **** 	MI,SOL,DO*2,SI,LA,LA,SOL,
 160:src/main.c    **** 	RE,MI,FA,RE,RE,MI,FA,
 161:src/main.c    **** 	RE,FA,SI,LA,SOL,SI,
 162:src/main.c    **** 	DO*2,DO,DO,DO*2,
 163:src/main.c    **** 	LA,FA,SOL,MI,DO,FA,
 164:src/main.c    **** 	SOL,LA,SOL,DO,DO,
 165:src/main.c    **** 	DO*2,LA,FA,SOL,MI,DO,
 166:src/main.c    **** 	FA,MI,RE,DO,
 167:src/main.c    **** 	'\0'},
 168:src/main.c    **** 	{10,
 169:src/main.c    **** 	1,1,3,1,2,4,
 170:src/main.c    **** 	1,1,2,3,1,2,2,
 171:src/main.c    **** 	1,1,2,2,1,1,4,
 172:src/main.c    **** 	1,1,1,1,2,2,
 173:src/main.c    **** 	4,1,1,4,
 174:src/main.c    **** 	1,1,4,1,1,2,
 175:src/main.c    **** 	2,2,4,1,1,
 176:src/main.c    **** 	4,1,1,4,1,1,
 177:src/main.c    **** 	2,2,2,4
 178:src/main.c    **** 	},
 179:src/main.c    **** 	
 180:src/main.c    **** 	/* Vive le vent */
 181:src/main.c    **** 	{INAUDIBLE,
 182:src/main.c    **** 	MI,MI,MI,MI,MI,MI,
 183:src/main.c    **** 	MI,SOL,DO,RE,MI,
 184:src/main.c    **** 	FA,FA,FA,MI,MI,MI,
 185:src/main.c    **** 	RE,RE,RE,MI,RE,SOL,
 186:src/main.c    **** 	MI,MI,MI,MI,MI,MI,
 187:src/main.c    **** 	MI,SOL,DO,RE,MI,
 188:src/main.c    **** 	FA,FA,FA,SOL,FA,MI,
 189:src/main.c    **** 	MI,MI,SOL,SOL,FA,RE,DO,
 190:src/main.c    **** 	'\0'},
 191:src/main.c    **** 	{10,
 192:src/main.c    **** 	1,1,2,1,1,2,
 193:src/main.c    **** 	1,1,1,1,4,
 194:src/main.c    **** 	1,1,2,1,1,2,
 195:src/main.c    **** 	1,1,1,1,2,2,
 196:src/main.c    **** 	1,1,2,1,1,2,
 197:src/main.c    **** 	1,1,1,1,4,
 198:src/main.c    **** 	1,1,1,1,1,1,
 199:src/main.c    **** 	1,1,1,1,1,1,4
 200:src/main.c    **** 	},
 201:src/main.c    **** 
 202:src/main.c    **** 	/* Harry Potter */
 203:src/main.c    **** 	{INAUDIBLE,
 204:src/main.c    **** 	MI,LA,DO*2,SI,LA,MI,
 205:src/main.c    **** 	RE,SI,LA,DO*2,SI,SOLD,
 206:src/main.c    **** 	LAD,MI,MI,LA,DO*2,SI,
 207:src/main.c    **** 	LA,MI*2,SOL*2,FAD*2,FA*2,DOD*2,
 208:src/main.c    **** 	FA*2,MI*2,RED*2,RED*2,DO*2,LA,
 209:src/main.c    **** 	DO*2,MI*2,DO*2,MI*2,DO*2,FA*2,
 210:src/main.c    **** 	MI*2,RED*2,SI,DO*2,MI*2,RED*2,
 211:src/main.c    **** 	RED,MI,MI*2,DO*2,MI*2,DO*2,
 212:src/main.c    **** 	MI*2,DO*2,SOL*2,FAD*2,FA*2,DOD*2,
 213:src/main.c    **** 	FA*2,MI*2,RED*2,RED,DO*2,LA,
 214:src/main.c    **** 	'\0'
 215:src/main.c    **** 	},
 216:src/main.c    **** 	{5,
 217:src/main.c    **** 	1,2,1,1,2,1,
 218:src/main.c    **** 	3,3,2,1,1,2,
 219:src/main.c    **** 	1,4,1,2,1,1,
 220:src/main.c    **** 	2,1,2,1,2,1,
 221:src/main.c    **** 	1,1,1,2,1,4,
 222:src/main.c    **** 	1,2,1,2,1,2,
 223:src/main.c    **** 	1,2,1,1,1,1,
 224:src/main.c    **** 	2,1,4,1,2,1,
 225:src/main.c    **** 	2,1,2,1,2,1,
 226:src/main.c    **** 	1,1,1,2,1,4
 227:src/main.c    **** 	}
 228:src/main.c    **** 	}; 
 229:src/main.c    **** 
 230:src/main.c    **** 	/* --- Initialisation ---*/
 231:src/main.c    **** 	
 232:src/main.c    **** 	printf("Initialisation...\n\r");
 955              		.loc 1 232 2 view .LVU169
 956 04b6 C248     		ldr	r0, .L66
 140:src/main.c    **** 	
 957              		.loc 1 140 16 view .LVU170
 958 04b8 C4F808EA 		str	lr, [r4, #2568]
 959 04bc 0322     		movs	r2, #3
 960 04be C4F80C2B 		str	r2, [r4, #2828]
 961 04c2 C4F8102B 		str	r2, [r4, #2832]
 962 04c6 C4F80CCA 		str	ip, [r4, #2572]
 963 04ca C4F844EA 		str	lr, [r4, #2628]
 964 04ce C4F848CA 		str	ip, [r4, #2632]
 965 04d2 C4F8F43A 		str	r3, [r4, #2804]
 966 04d6 C4F8FC3A 		str	r3, [r4, #2812]
 967 04da C4F8003B 		str	r3, [r4, #2816]
 968 04de C4F8083B 		str	r3, [r4, #2824]
 969 04e2 C4F8183B 		str	r3, [r4, #2840]
 970 04e6 C4F8047A 		str	r7, [r4, #2564]
 971 04ea C4F8147A 		str	r7, [r4, #2580]
 972 04ee C4F81C7A 		str	r7, [r4, #2588]
 973 04f2 C4F8247A 		str	r7, [r4, #2596]
 974 04f6 C4F82CBA 		str	fp, [r4, #2604]
 975 04fa C4F830AA 		str	r10, [r4, #2608]
 976 04fe C4F8348A 		str	r8, [r4, #2612]
 977 0502 C4F8389A 		str	r9, [r4, #2616]
 978 0506 C4F83C8A 		str	r8, [r4, #2620]
 979 050a C4F8407A 		str	r7, [r4, #2624]
 980 050e C4F8506A 		str	r6, [r4, #2640]
 981 0512 C4F8F85A 		str	r5, [r4, #2808]
 982 0516 C4F8045B 		str	r5, [r4, #2820]
 983 051a C4F8145B 		str	r5, [r4, #2836]
 984 051e C4F81C3B 		str	r3, [r4, #2844]
 985 0522 C4F8243B 		str	r3, [r4, #2852]
 986 0526 C4F8281B 		str	r1, [r4, #2856]
 987 052a C4F82C3B 		str	r3, [r4, #2860]
 988 052e C4F8343B 		str	r3, [r4, #2868]
 989 0532 C4F8383B 		str	r3, [r4, #2872]
 990 0536 C4F8403B 		str	r3, [r4, #2880]
 991 053a C4F8483B 		str	r3, [r4, #2888]
 992 053e C4F8503B 		str	r3, [r4, #2896]
 993 0542 C4F8543B 		str	r3, [r4, #2900]
 994 0546 C4F8583B 		str	r3, [r4, #2904]
 995 054a C4F85C3B 		str	r3, [r4, #2908]
 996 054e C4F8643B 		str	r3, [r4, #2916]
 997 0552 C4F8681B 		str	r1, [r4, #2920]
 998 0556 C4F86C3B 		str	r3, [r4, #2924]
 999 055a C4F8743B 		str	r3, [r4, #2932]
 1000 055e C4F87C3B 		str	r3, [r4, #2940]
 1001 0562 C4F8843B 		str	r3, [r4, #2948]
 1002 0566 C4F88C3B 		str	r3, [r4, #2956]
 1003 056a C4F8903B 		str	r3, [r4, #2960]
 1004 056e C4F8943B 		str	r3, [r4, #2964]
 1005 0572 C4F8983B 		str	r3, [r4, #2968]
 1006 0576 C4F8205B 		str	r5, [r4, #2848]
 1007 057a C4F8305B 		str	r5, [r4, #2864]
 1008 057e C4F83C5B 		str	r5, [r4, #2876]
 1009 0582 C4F8445B 		str	r5, [r4, #2884]
 1010 0586 C4F84C5B 		str	r5, [r4, #2892]
 1011 058a C4F8605B 		str	r5, [r4, #2912]
 1012 058e C4F8705B 		str	r5, [r4, #2928]
 1013 0592 C4F8785B 		str	r5, [r4, #2936]
 1014 0596 C4F8805B 		str	r5, [r4, #2944]
 1015 059a C4F8885B 		str	r5, [r4, #2952]
 1016 059e C4F89C5B 		str	r5, [r4, #2972]
 1017 05a2 C4F8A03B 		str	r3, [r4, #2976]
 1018 05a6 C4F8A41B 		str	r1, [r4, #2980]
 1019 05aa C4F8A83B 		str	r3, [r4, #2984]
 1020 05ae C4F8AC5B 		str	r5, [r4, #2988]
 1021 05b2 C4F8B03B 		str	r3, [r4, #2992]
 1022 05b6 C4F8B45B 		str	r5, [r4, #2996]
 1023 05ba C4F8B83B 		str	r3, [r4, #3000]
 1024 05be C4F8BC5B 		str	r5, [r4, #3004]
 1025 05c2 C4F8C03B 		str	r3, [r4, #3008]
 1026 05c6 C4F8C45B 		str	r5, [r4, #3012]
 1027 05ca C4F8C83B 		str	r3, [r4, #3016]
 1028 05ce C4F8CC3B 		str	r3, [r4, #3020]
 1029 05d2 C4F8D03B 		str	r3, [r4, #3024]
 1030 05d6 C4F8D43B 		str	r3, [r4, #3028]
 1031 05da C4F8D85B 		str	r5, [r4, #3032]
 1032 05de C4F8DC3B 		str	r3, [r4, #3036]
 1033 05e2 C4F8E01B 		str	r1, [r4, #3040]
 1034              		.loc 1 232 2 is_stmt 1 view .LVU171
 1035 05e6 FFF7FEFF 		bl	printf
 1036              	.LVL17:
 233:src/main.c    **** 	/* Autorisation horloge */
 234:src/main.c    **** 	enable_TIM2();
 1037              		.loc 1 234 2 view .LVU172
 1038              	.LBB30:
 1039              	.LBI30:
 682:src/sys/devices.h **** __declare_device_control(ADC2,APB2,8)
 683:src/sys/devices.h **** __declare_device_control(ADC3,APB2,8)
 684:src/sys/devices.h **** __declare_device_control(USART6,APB2,5)
 685:src/sys/devices.h **** __declare_device_control(USART1,APB2,4)
 686:src/sys/devices.h **** __declare_device_control(TIM8,APB2,1)
 687:src/sys/devices.h **** __declare_device_control(TIM1,APB2,0)
 688:src/sys/devices.h **** 
 689:src/sys/devices.h **** __declare_device_control(DAC,APB1,29)
 690:src/sys/devices.h **** __declare_device_control(PWR,APB1,28)
 691:src/sys/devices.h **** __declare_device_control(HDMI_CEC,APB1,27)
 692:src/sys/devices.h **** __declare_device_control(CAN2,APB1,26)
 693:src/sys/devices.h **** __declare_device_control(CAN1,APB1,25)
 694:src/sys/devices.h **** __declare_device_control(FMPI2C1,APB1,24)
 695:src/sys/devices.h **** __declare_device_control(I2C3,APB1,23)
 696:src/sys/devices.h **** __declare_device_control(I2C2,APB1,22)
 697:src/sys/devices.h **** __declare_device_control(I2C1,APB1,21)
 698:src/sys/devices.h **** __declare_device_control(UART5,APB1,20)
 699:src/sys/devices.h **** __declare_device_control(UART4,APB1,19)
 700:src/sys/devices.h **** __declare_device_control(USART3,APB1,18)
 701:src/sys/devices.h **** __declare_device_control(USART2,APB1,17)
 702:src/sys/devices.h **** __declare_device_control(SPDIF_RX,APB1,16)
 703:src/sys/devices.h **** __declare_device_control(SPI3_I2S3,APB1,15)
 704:src/sys/devices.h **** __declare_device_control(SPI2_I2S2,APB1,14)
 705:src/sys/devices.h **** __declare_device_control(WWDG,APB1,11)
 706:src/sys/devices.h **** __declare_device_control(TIM14,APB1,8)
 707:src/sys/devices.h **** __declare_device_control(TIM13,APB1,7)
 708:src/sys/devices.h **** __declare_device_control(TIM12,APB1,6)
 709:src/sys/devices.h **** __declare_device_control(TIM7,APB1,5)
 710:src/sys/devices.h **** __declare_device_control(TIM6,APB1,4)
 711:src/sys/devices.h **** __declare_device_control(TIM5,APB1,3)
 712:src/sys/devices.h **** __declare_device_control(TIM4,APB1,2)
 713:src/sys/devices.h **** __declare_device_control(TIM3,APB1,1)
 714:src/sys/devices.h **** __declare_device_control(TIM2,APB1,0)
 1040              		.loc 2 714 1 view .LVU173
 1041              	.LBB31:
 1042              		.loc 2 714 1 view .LVU174
 1043 05ea 764B     		ldr	r3, .L66+4
 1044 05ec 1A6C     		ldr	r2, [r3, #64]
 1045 05ee 42F00102 		orr	r2, r2, #1
 1046 05f2 1A64     		str	r2, [r3, #64]
 1047              		.loc 2 714 1 view .LVU175
 1048              	.LBB32:
 1049              	.LBI32:
 426:src/sys/cmsis_gcc.h **** {
 1050              		.loc 3 426 53 view .LVU176
 1051              	.LBB33:
 1052              		.loc 3 428 3 view .LVU177
 1053              		.syntax unified
 1054              	@ 428 "src/sys/cmsis_gcc.h" 1
 1055 05f4 BFF34F8F 		dsb 0xF
 1056              	@ 0 "" 2
 1057              		.thumb
 1058              		.syntax unified
 1059              	.LBE33:
 1060              	.LBE32:
 1061              	.LBE31:
 1062              	.LBE30:
 235:src/main.c    **** 	enable_GPIOA();
 1063              		.loc 1 235 2 view .LVU178
 1064              	.LBB34:
 1065              	.LBI34:
 668:src/sys/devices.h **** 
 1066              		.loc 2 668 1 view .LVU179
 1067              	.LBB35:
 668:src/sys/devices.h **** 
 1068              		.loc 2 668 1 view .LVU180
 1069 05f8 1A6B     		ldr	r2, [r3, #48]
 1070 05fa 42F00102 		orr	r2, r2, #1
 1071 05fe 1A63     		str	r2, [r3, #48]
 668:src/sys/devices.h **** 
 1072              		.loc 2 668 1 view .LVU181
 1073              	.LBB36:
 1074              	.LBI36:
 426:src/sys/cmsis_gcc.h **** {
 1075              		.loc 3 426 53 view .LVU182
 1076              	.LBB37:
 1077              		.loc 3 428 3 view .LVU183
 1078              		.syntax unified
 1079              	@ 428 "src/sys/cmsis_gcc.h" 1
 1080 0600 BFF34F8F 		dsb 0xF
 1081              	@ 0 "" 2
 1082              		.thumb
 1083              		.syntax unified
 1084              	.LBE37:
 1085              	.LBE36:
 1086              	.LBE35:
 1087              	.LBE34:
 236:src/main.c    **** 	enable_GPIOB();
 1088              		.loc 1 236 2 view .LVU184
 1089              	.LBB38:
 1090              	.LBI38:
 667:src/sys/devices.h **** __declare_device_control(GPIOA,AHB1,0)
 1091              		.loc 2 667 1 view .LVU185
 1092              	.LBB39:
 667:src/sys/devices.h **** __declare_device_control(GPIOA,AHB1,0)
 1093              		.loc 2 667 1 view .LVU186
 1094 0604 1A6B     		ldr	r2, [r3, #48]
 1095 0606 2A43     		orrs	r2, r2, r5
 1096 0608 1A63     		str	r2, [r3, #48]
 667:src/sys/devices.h **** __declare_device_control(GPIOA,AHB1,0)
 1097              		.loc 2 667 1 view .LVU187
 1098              	.LBB40:
 1099              	.LBI40:
 426:src/sys/cmsis_gcc.h **** {
 1100              		.loc 3 426 53 view .LVU188
 1101              	.LBB41:
 1102              		.loc 3 428 3 view .LVU189
 1103              		.syntax unified
 1104              	@ 428 "src/sys/cmsis_gcc.h" 1
 1105 060a BFF34F8F 		dsb 0xF
 1106              	@ 0 "" 2
 1107              		.thumb
 1108              		.syntax unified
 1109              	.LBE41:
 1110              	.LBE40:
 1111              	.LBE39:
 1112              	.LBE38:
 237:src/main.c    **** 	/* Configuration du Systick */
 238:src/main.c    **** 	SysTick_init(1000); /* Tick toutes les 1 ms */
 1113              		.loc 1 238 2 view .LVU190
 1114 060e 4FF47A70 		mov	r0, #1000
 1115 0612 FFF7FEFF 		bl	SysTick_init
 1116              	.LVL18:
 239:src/main.c    **** 	/* Configuration du buzzer */
 240:src/main.c    **** 	init_buzzer(); 
 1117              		.loc 1 240 2 view .LVU191
 1118 0616 FFF7FEFF 		bl	init_buzzer
 1119              	.LVL19:
 241:src/main.c    **** 	/* Configuration du timer */
 242:src/main.c    **** 	init_timer();
 1120              		.loc 1 242 2 view .LVU192
 1121 061a FFF7FEFF 		bl	init_timer
 1122              	.LVL20:
 243:src/main.c    **** 	/* Configuration du potentiometre */
 244:src/main.c    **** 	configuration_potentiometre();
 1123              		.loc 1 244 2 view .LVU193
 1124 061e FFF7FEFF 		bl	configuration_potentiometre
 1125              	.LVL21:
 245:src/main.c    **** 	/* Configuration du bouton  de la carte fille */
 246:src/main.c    **** 	button_irq_init();
 1126              		.loc 1 246 2 view .LVU194
 1127 0622 FFF7FEFF 		bl	button_irq_init
 1128              	.LVL22:
 247:src/main.c    **** 	button_init();
 1129              		.loc 1 247 2 view .LVU195
 1130 0626 FFF7FEFF 		bl	button_init
 1131              	.LVL23:
 248:src/main.c    **** 	/* Configuration des LEDs */
 249:src/main.c    ****   	led_init();
 1132              		.loc 1 249 4 view .LVU196
 1133 062a FFF7FEFF 		bl	led_init
 1134              	.LVL24:
 250:src/main.c    ****   	/* Configuration du bouton bleu */
 251:src/main.c    ****   	buttonPC13_init();
 1135              		.loc 1 251 4 view .LVU197
 1136 062e FFF7FEFF 		bl	buttonPC13_init
 1137              	.LVL25:
 252:src/main.c    **** 	buttonPC13_irq_init();
 1138              		.loc 1 252 2 view .LVU198
 1139 0632 FFF7FEFF 		bl	buttonPC13_irq_init
 1140              	.LVL26:
 253:src/main.c    **** 	/* Initialisation du timer */
 254:src/main.c    **** 	TIM2.CNT = 0;
 1141              		.loc 1 254 2 view .LVU199
 1142              		.loc 1 254 11 is_stmt 0 view .LVU200
 1143 0636 644B     		ldr	r3, .L66+8
 255:src/main.c    **** 	TIM2.CCR2 = 2; /* Volume initiale*/
 256:src/main.c    **** 	TIM2.CR1 |= 0x1; /* Activer le timer */
 257:src/main.c    **** 	printf("Fin initialisation !\n\r");
 1144              		.loc 1 257 2 view .LVU201
 1145 0638 6448     		ldr	r0, .L66+12
 254:src/main.c    **** 	TIM2.CCR2 = 2; /* Volume initiale*/
 1146              		.loc 1 254 11 view .LVU202
 1147 063a 0022     		movs	r2, #0
 1148 063c 5A62     		str	r2, [r3, #36]
 255:src/main.c    **** 	TIM2.CCR2 = 2; /* Volume initiale*/
 1149              		.loc 1 255 2 is_stmt 1 view .LVU203
 255:src/main.c    **** 	TIM2.CCR2 = 2; /* Volume initiale*/
 1150              		.loc 1 255 12 is_stmt 0 view .LVU204
 1151 063e 9D63     		str	r5, [r3, #56]
 256:src/main.c    **** 	printf("Fin initialisation !\n\r");
 1152              		.loc 1 256 2 is_stmt 1 view .LVU205
 256:src/main.c    **** 	printf("Fin initialisation !\n\r");
 1153              		.loc 1 256 11 is_stmt 0 view .LVU206
 1154 0640 1A68     		ldr	r2, [r3]
 258:src/main.c    **** 	
 259:src/main.c    **** 	/* --- Boucle principale --- */
 260:src/main.c    **** 
 261:src/main.c    **** 	while(1)
 262:src/main.c    **** 	{
 263:src/main.c    **** 		/*Eteind l'appareil après un temps inscrit dans la variable COMPTEUR2 en desactivant les différ
 264:src/main.c    **** 
 265:src/main.c    **** 		if (flag == 3){
 1155              		.loc 1 265 12 view .LVU207
 1156 0642 634D     		ldr	r5, .L66+16
 256:src/main.c    **** 	printf("Fin initialisation !\n\r");
 1157              		.loc 1 256 11 view .LVU208
 1158 0644 42F00102 		orr	r2, r2, #1
 1159 0648 1A60     		str	r2, [r3]
 257:src/main.c    **** 	
 1160              		.loc 1 257 2 is_stmt 1 view .LVU209
 1161 064a FFF7FEFF 		bl	printf
 1162              	.LVL27:
 1163              	.L55:
 1164 064e 5E4E     		ldr	r6, .L66+8
 1165              	.L53:
 261:src/main.c    **** 	{
 1166              		.loc 1 261 2 view .LVU210
 1167              		.loc 1 265 3 view .LVU211
 1168              		.loc 1 265 12 is_stmt 0 view .LVU212
 1169 0650 6B68     		ldr	r3, [r5, #4]
 1170              		.loc 1 265 6 view .LVU213
 1171 0652 032B     		cmp	r3, #3
 1172 0654 09D1     		bne	.L41
 266:src/main.c    **** 			TIM2.CCR2 = 0;
 1173              		.loc 1 266 4 is_stmt 1 view .LVU214
 267:src/main.c    **** 			GPIOA.ODR &= ~0x7F0;
 1174              		.loc 1 267 14 is_stmt 0 view .LVU215
 1175 0656 5F49     		ldr	r1, .L66+20
 266:src/main.c    **** 			TIM2.CCR2 = 0;
 1176              		.loc 1 266 14 view .LVU216
 1177 0658 0022     		movs	r2, #0
 1178 065a B263     		str	r2, [r6, #56]
 1179              		.loc 1 267 4 is_stmt 1 view .LVU217
 1180              		.loc 1 267 14 is_stmt 0 view .LVU218
 1181 065c 4B69     		ldr	r3, [r1, #20]
 1182 065e 23F4FE63 		bic	r3, r3, #2032
 1183 0662 4B61     		str	r3, [r1, #20]
 268:src/main.c    **** 			flag_v = 0;
 1184              		.loc 1 268 4 is_stmt 1 view .LVU219
 1185              		.loc 1 268 11 is_stmt 0 view .LVU220
 1186 0664 6A61     		str	r2, [r5, #20]
 269:src/main.c    **** 			veille();
 1187              		.loc 1 269 4 is_stmt 1 view .LVU221
 1188 0666 FFF7FEFF 		bl	veille
 1189              	.LVL28:
 1190              	.L41:
 270:src/main.c    **** 		}		
 271:src/main.c    **** 
 272:src/main.c    **** 		/* Pause entre chaque note */
 273:src/main.c    **** 		if (flag == 2){
 1191              		.loc 1 273 3 view .LVU222
 1192              		.loc 1 273 12 is_stmt 0 view .LVU223
 1193 066a 6B68     		ldr	r3, [r5, #4]
 1194              		.loc 1 273 6 view .LVU224
 1195 066c 022B     		cmp	r3, #2
 1196 066e 1DD1     		bne	.L42
 274:src/main.c    **** 			TIM2.CCR2 = 0;
 1197              		.loc 1 274 4 is_stmt 1 view .LVU225
 1198              		.loc 1 274 14 is_stmt 0 view .LVU226
 1199 0670 0023     		movs	r3, #0
 1200 0672 B363     		str	r3, [r6, #56]
 1201              	.L43:
 275:src/main.c    **** 		}
 276:src/main.c    **** 		
 277:src/main.c    **** 		else {
 278:src/main.c    **** 			/*Change le volume en fonction de la valeur du potentiomètre*/
 279:src/main.c    **** 			TIM2.CCR2 = val;
 280:src/main.c    **** 			/* Passage à la note d'après */
 281:src/main.c    **** 			if (flag == 1)
 282:src/main.c    **** 			{
 283:src/main.c    **** 				mesure_potentiometre(&val);
 284:src/main.c    **** 				
 285:src/main.c    **** 				/*Allumage des 4 leds rouges en fonction du volume*/
 286:src/main.c    **** 				val=2*(val*50)/4096;
 287:src/main.c    **** 				if (val<25){
 288:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 289:src/main.c    **** 					GPIOA.ODR |= 0x10;
 290:src/main.c    **** 				}
 291:src/main.c    **** 				if ((val<50)&&(val>24)){
 292:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 293:src/main.c    **** 					GPIOA.ODR |= 0x30;
 294:src/main.c    **** 				}
 295:src/main.c    **** 				if ((val<75)&&(val>49)){
 296:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 297:src/main.c    **** 					GPIOA.ODR |= 0x70;
 298:src/main.c    **** 				}
 299:src/main.c    **** 				if ((val<100)&&(val>74)){
 300:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 301:src/main.c    **** 					GPIOA.ODR |= 0xF0;
 302:src/main.c    **** 				}
 303:src/main.c    **** 
 304:src/main.c    **** 				/* Modification de la fréquence et de la durée de la note */
 305:src/main.c    **** 				if (2*tab[j][i]==INAUDIBLE){
 306:src/main.c    **** 					frequence(INAUDIBLE);
 307:src/main.c    **** 					tempo = 1/2*tab[j+1][i];
 308:src/main.c    **** 					}
 309:src/main.c    **** 				else{
 310:src/main.c    **** 				frequence(2*tab[j][i]);
 311:src/main.c    **** 				tempo = tab[j+1][i];
 312:src/main.c    **** 				}
 313:src/main.c    **** 				flag = 0;
 314:src/main.c    **** 				
 315:src/main.c    **** 			/*Affichage des différentes valeur pour le débugage, on peut l'enlever*/
 316:src/main.c    **** 				printf(" En cours: %s, note = %lu Hz (n°%lu) en %lu temps, duty_cycle =0.%lu, mode = %lu, time
 317:src/main.c    **** 
 318:src/main.c    **** 			/*Allumage de la led tricolore en fonction de la fréquence de la note, pour un effet funki*/
 319:src/main.c    **** 				if (tab[j][i]<=300){			
 320:src/main.c    **** 					GPIOA.ODR=GPIOA.ODR ^ 0x0200;}/*vert*/
 321:src/main.c    **** 				else {
 322:src/main.c    **** 					if ((tab[j][i]<=500)&&(tab[j][i]>=300)){				
 323:src/main.c    **** 						GPIOA.ODR=GPIOA.ODR ^ 0x0400;}/*bleu*/
 324:src/main.c    **** 					else {
 325:src/main.c    **** 					
 326:src/main.c    **** 						GPIOA.ODR=GPIOA.ODR ^ 0x0100;}/*rouge*/
 327:src/main.c    **** 				}
 328:src/main.c    **** 			/* Passage à la prochaine note du tableau */
 329:src/main.c    **** 				i++;
 330:src/main.c    **** 			}
 331:src/main.c    **** 		}
 332:src/main.c    **** 		/* Detecte la fin de la chanson */
 333:src/main.c    **** 		if (tab[j][i]=='\0'){
 1202              		.loc 1 333 3 is_stmt 1 view .LVU227
 1203              		.loc 1 333 13 is_stmt 0 view .LVU228
 1204 0674 EA68     		ldr	r2, [r5, #12]
 1205 0676 2B69     		ldr	r3, [r5, #16]
 1206 0678 6421     		movs	r1, #100
 1207 067a 01FB0233 		mla	r3, r1, r2, r3
 1208              		.loc 1 333 6 view .LVU229
 1209 067e 54F82330 		ldr	r3, [r4, r3, lsl #2]
 1210 0682 002B     		cmp	r3, #0
 1211 0684 E4D1     		bne	.L53
 334:src/main.c    **** 			/* Mode musicle en boucle */
 335:src/main.c    **** 			if (mode == 0) i = 0;
 1212              		.loc 1 335 4 is_stmt 1 view .LVU230
 1213              		.loc 1 335 13 is_stmt 0 view .LVU231
 1214 0686 AB69     		ldr	r3, [r5, #24]
 1215              		.loc 1 335 7 view .LVU232
 1216 0688 03B9     		cbnz	r3, .L54
 1217              		.loc 1 335 19 is_stmt 1 discriminator 1 view .LVU233
 1218              		.loc 1 335 21 is_stmt 0 discriminator 1 view .LVU234
 1219 068a 2B61     		str	r3, [r5, #16]
 1220              	.L54:
 336:src/main.c    **** 			/* Mode passer automatique d'une musique à l'autre */
 337:src/main.c    **** 			if (mode == 1){
 1221              		.loc 1 337 4 is_stmt 1 view .LVU235
 1222              		.loc 1 337 13 is_stmt 0 view .LVU236
 1223 068c AB69     		ldr	r3, [r5, #24]
 1224              		.loc 1 337 7 view .LVU237
 1225 068e 012B     		cmp	r3, #1
 1226 0690 DDD1     		bne	.L55
 338:src/main.c    **** 				j=j+2;
 1227              		.loc 1 338 5 is_stmt 1 view .LVU238
 1228              		.loc 1 338 8 is_stmt 0 view .LVU239
 1229 0692 EB68     		ldr	r3, [r5, #12]
 339:src/main.c    **** 				i=0;
 340:src/main.c    **** 				if (jtaille<j+2)
 1230              		.loc 1 340 16 view .LVU240
 1231 0694 5049     		ldr	r1, .L66+24
 338:src/main.c    **** 				j=j+2;
 1232              		.loc 1 338 8 view .LVU241
 1233 0696 0233     		adds	r3, r3, #2
 339:src/main.c    **** 				i=0;
 1234              		.loc 1 339 6 view .LVU242
 1235 0698 0022     		movs	r2, #0
 338:src/main.c    **** 				j=j+2;
 1236              		.loc 1 338 6 view .LVU243
 1237 069a EB60     		str	r3, [r5, #12]
 339:src/main.c    **** 				i=0;
 1238              		.loc 1 339 5 is_stmt 1 view .LVU244
 339:src/main.c    **** 				i=0;
 1239              		.loc 1 339 6 is_stmt 0 view .LVU245
 1240 069c 2A61     		str	r2, [r5, #16]
 1241              		.loc 1 340 5 is_stmt 1 view .LVU246
 1242              		.loc 1 340 18 is_stmt 0 view .LVU247
 1243 069e EB68     		ldr	r3, [r5, #12]
 1244              		.loc 1 340 16 view .LVU248
 1245 06a0 4968     		ldr	r1, [r1, #4]
 1246              		.loc 1 340 18 view .LVU249
 1247 06a2 0233     		adds	r3, r3, #2
 1248              		.loc 1 340 8 view .LVU250
 1249 06a4 8B42     		cmp	r3, r1
 1250 06a6 D2D9     		bls	.L55
 341:src/main.c    **** 					j=0;
 1251              		.loc 1 341 6 is_stmt 1 view .LVU251
 1252              		.loc 1 341 7 is_stmt 0 view .LVU252
 1253 06a8 EA60     		str	r2, [r5, #12]
 1254 06aa D0E7     		b	.L55
 1255              	.L42:
 279:src/main.c    **** 			/* Passage à la note d'après */
 1256              		.loc 1 279 4 is_stmt 1 view .LVU253
 279:src/main.c    **** 			/* Passage à la note d'après */
 1257              		.loc 1 279 14 is_stmt 0 view .LVU254
 1258 06ac 059B     		ldr	r3, [sp, #20]
 1259 06ae B363     		str	r3, [r6, #56]
 281:src/main.c    **** 			{
 1260              		.loc 1 281 4 is_stmt 1 view .LVU255
 281:src/main.c    **** 			{
 1261              		.loc 1 281 13 is_stmt 0 view .LVU256
 1262 06b0 6B68     		ldr	r3, [r5, #4]
 281:src/main.c    **** 			{
 1263              		.loc 1 281 7 view .LVU257
 1264 06b2 012B     		cmp	r3, #1
 1265 06b4 DED1     		bne	.L43
 283:src/main.c    **** 				
 1266              		.loc 1 283 5 is_stmt 1 view .LVU258
 1267 06b6 05A8     		add	r0, sp, #20
 1268 06b8 FFF7FEFF 		bl	mesure_potentiometre
 1269              	.LVL29:
 286:src/main.c    **** 				if (val<25){
 1270              		.loc 1 286 5 view .LVU259
 286:src/main.c    **** 				if (val<25){
 1271              		.loc 1 286 10 is_stmt 0 view .LVU260
 1272 06bc 059A     		ldr	r2, [sp, #20]
 1273 06be 6423     		movs	r3, #100
 1274 06c0 5A43     		muls	r2, r3, r2
 286:src/main.c    **** 				if (val<25){
 1275              		.loc 1 286 19 view .LVU261
 1276 06c2 120B     		lsrs	r2, r2, #12
 287:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 1277              		.loc 1 287 8 view .LVU262
 1278 06c4 182A     		cmp	r2, #24
 1279 06c6 434B     		ldr	r3, .L66+20
 286:src/main.c    **** 				if (val<25){
 1280              		.loc 1 286 8 view .LVU263
 1281 06c8 0592     		str	r2, [sp, #20]
 287:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 1282              		.loc 1 287 5 is_stmt 1 view .LVU264
 287:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 1283              		.loc 1 287 8 is_stmt 0 view .LVU265
 1284 06ca 12D8     		bhi	.L44
 288:src/main.c    **** 					GPIOA.ODR |= 0x10;
 1285              		.loc 1 288 6 is_stmt 1 view .LVU266
 288:src/main.c    **** 					GPIOA.ODR |= 0x10;
 1286              		.loc 1 288 16 is_stmt 0 view .LVU267
 1287 06cc 5969     		ldr	r1, [r3, #20]
 1288 06ce 21F0F001 		bic	r1, r1, #240
 1289 06d2 5961     		str	r1, [r3, #20]
 289:src/main.c    **** 				}
 1290              		.loc 1 289 6 is_stmt 1 view .LVU268
 289:src/main.c    **** 				}
 1291              		.loc 1 289 16 is_stmt 0 view .LVU269
 1292 06d4 5969     		ldr	r1, [r3, #20]
 1293 06d6 41F01001 		orr	r1, r1, #16
 1294 06da 5961     		str	r1, [r3, #20]
 291:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 1295              		.loc 1 291 5 is_stmt 1 view .LVU270
 295:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 1296              		.loc 1 295 5 view .LVU271
 1297              	.L45:
 299:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 1298              		.loc 1 299 5 view .LVU272
 299:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 1299              		.loc 1 299 18 is_stmt 0 view .LVU273
 1300 06dc 4B3A     		subs	r2, r2, #75
 299:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 1301              		.loc 1 299 8 view .LVU274
 1302 06de 182A     		cmp	r2, #24
 1303 06e0 13D8     		bhi	.L47
 300:src/main.c    **** 					GPIOA.ODR |= 0xF0;
 1304              		.loc 1 300 6 is_stmt 1 view .LVU275
 300:src/main.c    **** 					GPIOA.ODR |= 0xF0;
 1305              		.loc 1 300 16 is_stmt 0 view .LVU276
 1306 06e2 5A69     		ldr	r2, [r3, #20]
 1307 06e4 22F0F002 		bic	r2, r2, #240
 1308 06e8 5A61     		str	r2, [r3, #20]
 301:src/main.c    **** 				}
 1309              		.loc 1 301 6 is_stmt 1 view .LVU277
 301:src/main.c    **** 				}
 1310              		.loc 1 301 16 is_stmt 0 view .LVU278
 1311 06ea 5A69     		ldr	r2, [r3, #20]
 1312 06ec 42F0F002 		orr	r2, r2, #240
 1313 06f0 0AE0     		b	.L61
 1314              	.L44:
 291:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 1315              		.loc 1 291 5 is_stmt 1 view .LVU279
 291:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 1316              		.loc 1 291 17 is_stmt 0 view .LVU280
 1317 06f2 A2F11901 		sub	r1, r2, #25
 291:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 1318              		.loc 1 291 8 view .LVU281
 1319 06f6 1829     		cmp	r1, #24
 1320 06f8 56D8     		bhi	.L46
 292:src/main.c    **** 					GPIOA.ODR |= 0x30;
 1321              		.loc 1 292 6 is_stmt 1 view .LVU282
 292:src/main.c    **** 					GPIOA.ODR |= 0x30;
 1322              		.loc 1 292 16 is_stmt 0 view .LVU283
 1323 06fa 5A69     		ldr	r2, [r3, #20]
 1324 06fc 22F0F002 		bic	r2, r2, #240
 1325 0700 5A61     		str	r2, [r3, #20]
 293:src/main.c    **** 				}
 1326              		.loc 1 293 6 is_stmt 1 view .LVU284
 293:src/main.c    **** 				}
 1327              		.loc 1 293 16 is_stmt 0 view .LVU285
 1328 0702 5A69     		ldr	r2, [r3, #20]
 1329 0704 42F03002 		orr	r2, r2, #48
 1330              	.L61:
 301:src/main.c    **** 				}
 1331              		.loc 1 301 16 view .LVU286
 1332 0708 5A61     		str	r2, [r3, #20]
 1333              	.L47:
 305:src/main.c    **** 					frequence(INAUDIBLE);
 1334              		.loc 1 305 5 is_stmt 1 view .LVU287
 305:src/main.c    **** 					frequence(INAUDIBLE);
 1335              		.loc 1 305 17 is_stmt 0 view .LVU288
 1336 070a EA68     		ldr	r2, [r5, #12]
 1337 070c 2B69     		ldr	r3, [r5, #16]
 1338 070e 6427     		movs	r7, #100
 1339 0710 07FB0233 		mla	r3, r7, r2, r3
 305:src/main.c    **** 					frequence(INAUDIBLE);
 1340              		.loc 1 305 8 view .LVU289
 1341 0714 44F62062 		movw	r2, #20000
 305:src/main.c    **** 					frequence(INAUDIBLE);
 1342              		.loc 1 305 10 view .LVU290
 1343 0718 54F82330 		ldr	r3, [r4, r3, lsl #2]
 305:src/main.c    **** 					frequence(INAUDIBLE);
 1344              		.loc 1 305 8 view .LVU291
 1345 071c B2EB430F 		cmp	r2, r3, lsl #1
 305:src/main.c    **** 					frequence(INAUDIBLE);
 1346              		.loc 1 305 10 view .LVU292
 1347 0720 4FEA4300 		lsl	r0, r3, #1
 305:src/main.c    **** 					frequence(INAUDIBLE);
 1348              		.loc 1 305 8 view .LVU293
 1349 0724 5CD1     		bne	.L48
 306:src/main.c    **** 					tempo = 1/2*tab[j+1][i];
 1350              		.loc 1 306 6 is_stmt 1 view .LVU294
 1351 0726 FFF7FEFF 		bl	frequence
 1352              	.LVL30:
 307:src/main.c    **** 					}
 1353              		.loc 1 307 6 view .LVU295
 307:src/main.c    **** 					}
 1354              		.loc 1 307 23 is_stmt 0 view .LVU296
 1355 072a EB68     		ldr	r3, [r5, #12]
 307:src/main.c    **** 					}
 1356              		.loc 1 307 26 view .LVU297
 1357 072c 2B69     		ldr	r3, [r5, #16]
 307:src/main.c    **** 					}
 1358              		.loc 1 307 12 view .LVU298
 1359 072e 0023     		movs	r3, #0
 1360 0730 AB60     		str	r3, [r5, #8]	@ float
 1361              	.L49:
 313:src/main.c    **** 				
 1362              		.loc 1 313 5 is_stmt 1 view .LVU299
 316:src/main.c    **** 
 1363              		.loc 1 316 5 is_stmt 0 view .LVU300
 1364 0732 294F     		ldr	r7, .L66+24
 313:src/main.c    **** 				
 1365              		.loc 1 313 10 view .LVU301
 1366 0734 0023     		movs	r3, #0
 1367 0736 6B60     		str	r3, [r5, #4]
 316:src/main.c    **** 
 1368              		.loc 1 316 5 is_stmt 1 view .LVU302
 316:src/main.c    **** 
 1369              		.loc 1 316 115 is_stmt 0 view .LVU303
 1370 0738 E968     		ldr	r1, [r5, #12]
 316:src/main.c    **** 
 1371              		.loc 1 316 5 view .LVU304
 1372 073a D5F80C90 		ldr	r9, [r5, #12]
 1373 073e 2869     		ldr	r0, [r5, #16]
 1374 0740 D5F810A0 		ldr	r10, [r5, #16]
 316:src/main.c    **** 
 1375              		.loc 1 316 136 view .LVU305
 1376 0744 EA68     		ldr	r2, [r5, #12]
 316:src/main.c    **** 
 1377              		.loc 1 316 5 view .LVU306
 1378 0746 D5F810C0 		ldr	ip, [r5, #16]
 1379 074a D5F818E0 		ldr	lr, [r5, #24]
 1380 074e D7F80080 		ldr	r8, [r7]
 1381 0752 059B     		ldr	r3, [sp, #20]
 1382 0754 0193     		str	r3, [sp, #4]
 1383 0756 6427     		movs	r7, #100
 1384 0758 CDE902E8 		strd	lr, r8, [sp, #8]
 1385 075c 02FB0772 		mla	r2, r2, r7, r7
 1386 0760 6244     		add	r2, r2, ip
 1387 0762 07FB0900 		mla	r0, r7, r9, r0
 1388 0766 54F82220 		ldr	r2, [r4, r2, lsl #2]
 1389 076a 0092     		str	r2, [sp]
 1390 076c 54F82020 		ldr	r2, [r4, r0, lsl #2]
 1391 0770 0DF1180C 		add	ip, sp, #24
 1392 0774 1420     		movs	r0, #20
 316:src/main.c    **** 
 1393              		.loc 1 316 115 view .LVU307
 1394 0776 4908     		lsrs	r1, r1, #1
 316:src/main.c    **** 
 1395              		.loc 1 316 5 view .LVU308
 1396 0778 5346     		mov	r3, r10
 1397 077a 00FB01C1 		mla	r1, r0, r1, ip
 1398 077e 1748     		ldr	r0, .L66+28
 1399 0780 FFF7FEFF 		bl	printf
 1400              	.LVL31:
 319:src/main.c    **** 					GPIOA.ODR=GPIOA.ODR ^ 0x0200;}/*vert*/
 1401              		.loc 1 319 5 is_stmt 1 view .LVU309
 319:src/main.c    **** 					GPIOA.ODR=GPIOA.ODR ^ 0x0200;}/*vert*/
 1402              		.loc 1 319 15 is_stmt 0 view .LVU310
 1403 0784 EA68     		ldr	r2, [r5, #12]
 1404 0786 2B69     		ldr	r3, [r5, #16]
 1405 0788 07FB0233 		mla	r3, r7, r2, r3
 319:src/main.c    **** 					GPIOA.ODR=GPIOA.ODR ^ 0x0200;}/*vert*/
 1406              		.loc 1 319 8 view .LVU311
 1407 078c 54F82330 		ldr	r3, [r4, r3, lsl #2]
 1408 0790 B3F5967F 		cmp	r3, #300
 1409 0794 0F4B     		ldr	r3, .L66+20
 1410 0796 3AD8     		bhi	.L50
 320:src/main.c    **** 				else {
 1411              		.loc 1 320 6 is_stmt 1 view .LVU312
 320:src/main.c    **** 				else {
 1412              		.loc 1 320 21 is_stmt 0 view .LVU313
 1413 0798 5A69     		ldr	r2, [r3, #20]
 320:src/main.c    **** 				else {
 1414              		.loc 1 320 26 view .LVU314
 1415 079a 82F40072 		eor	r2, r2, #512
 1416              	.L62:
 326:src/main.c    **** 				}
 1417              		.loc 1 326 16 view .LVU315
 1418 079e 5A61     		str	r2, [r3, #20]
 329:src/main.c    **** 			}
 1419              		.loc 1 329 5 is_stmt 1 view .LVU316
 329:src/main.c    **** 			}
 1420              		.loc 1 329 6 is_stmt 0 view .LVU317
 1421 07a0 2B69     		ldr	r3, [r5, #16]
 1422 07a2 0133     		adds	r3, r3, #1
 1423 07a4 2B61     		str	r3, [r5, #16]
 1424 07a6 65E7     		b	.L43
 1425              	.L46:
 295:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 1426              		.loc 1 295 5 is_stmt 1 view .LVU318
 295:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 1427              		.loc 1 295 17 is_stmt 0 view .LVU319
 1428 07a8 A2F13201 		sub	r1, r2, #50
 295:src/main.c    **** 					GPIOA.ODR &= ~0xF0;
 1429              		.loc 1 295 8 view .LVU320
 1430 07ac 1829     		cmp	r1, #24
 1431 07ae 95D8     		bhi	.L45
 296:src/main.c    **** 					GPIOA.ODR |= 0x70;
 1432              		.loc 1 296 6 is_stmt 1 view .LVU321
 296:src/main.c    **** 					GPIOA.ODR |= 0x70;
 1433              		.loc 1 296 16 is_stmt 0 view .LVU322
 1434 07b0 5A69     		ldr	r2, [r3, #20]
 1435 07b2 22F0F002 		bic	r2, r2, #240
 1436 07b6 5A61     		str	r2, [r3, #20]
 297:src/main.c    **** 				}
 1437              		.loc 1 297 6 is_stmt 1 view .LVU323
 297:src/main.c    **** 				}
 1438              		.loc 1 297 16 is_stmt 0 view .LVU324
 1439 07b8 5A69     		ldr	r2, [r3, #20]
 1440 07ba 42F07002 		orr	r2, r2, #112
 1441 07be A3E7     		b	.L61
 1442              	.L67:
 1443              		.align	2
 1444              	.L66:
 1445 07c0 00000000 		.word	.LC1
 1446 07c4 00000000 		.word	RCC
 1447 07c8 00000000 		.word	TIM2
 1448 07cc 14000000 		.word	.LC2
 1449 07d0 00000000 		.word	.LANCHOR0
 1450 07d4 00000000 		.word	GPIOA
 1451 07d8 00000000 		.word	.LANCHOR1
 1452 07dc 2B000000 		.word	.LC3
 1453              	.L48:
 310:src/main.c    **** 				tempo = tab[j+1][i];
 1454              		.loc 1 310 5 is_stmt 1 view .LVU325
 310:src/main.c    **** 				tempo = tab[j+1][i];
 1455              		.loc 1 310 23 is_stmt 0 view .LVU326
 1456 07e0 EA68     		ldr	r2, [r5, #12]
 1457 07e2 2B69     		ldr	r3, [r5, #16]
 1458 07e4 07FB0233 		mla	r3, r7, r2, r3
 310:src/main.c    **** 				tempo = tab[j+1][i];
 1459              		.loc 1 310 5 view .LVU327
 1460 07e8 54F82300 		ldr	r0, [r4, r3, lsl #2]
 1461 07ec 4000     		lsls	r0, r0, #1
 1462 07ee FFF7FEFF 		bl	frequence
 1463              	.LVL32:
 311:src/main.c    **** 				}
 1464              		.loc 1 311 5 is_stmt 1 view .LVU328
 311:src/main.c    **** 				}
 1465              		.loc 1 311 18 is_stmt 0 view .LVU329
 1466 07f2 EA68     		ldr	r2, [r5, #12]
 311:src/main.c    **** 				}
 1467              		.loc 1 311 21 view .LVU330
 1468 07f4 2B69     		ldr	r3, [r5, #16]
 1469 07f6 02FB0777 		mla	r7, r2, r7, r7
 1470 07fa 1F44     		add	r7, r7, r3
 311:src/main.c    **** 				}
 1471              		.loc 1 311 11 view .LVU331
 1472 07fc 04EB8703 		add	r3, r4, r7, lsl #2
 1473 0800 D3ED007A 		vldr.32	s15, [r3]	@ int
 1474 0804 F8EE677A 		vcvt.f32.u32	s15, s15
 1475 0808 C5ED027A 		vstr.32	s15, [r5, #8]
 1476 080c 91E7     		b	.L49
 1477              	.L50:
 322:src/main.c    **** 						GPIOA.ODR=GPIOA.ODR ^ 0x0400;}/*bleu*/
 1478              		.loc 1 322 6 is_stmt 1 view .LVU332
 322:src/main.c    **** 						GPIOA.ODR=GPIOA.ODR ^ 0x0400;}/*bleu*/
 1479              		.loc 1 322 17 is_stmt 0 view .LVU333
 1480 080e E968     		ldr	r1, [r5, #12]
 1481 0810 2A69     		ldr	r2, [r5, #16]
 1482 0812 07FB0122 		mla	r2, r7, r1, r2
 322:src/main.c    **** 						GPIOA.ODR=GPIOA.ODR ^ 0x0400;}/*bleu*/
 1483              		.loc 1 322 9 view .LVU334
 1484 0816 54F82220 		ldr	r2, [r4, r2, lsl #2]
 1485 081a B2F5FA7F 		cmp	r2, #500
 1486 081e 0CD8     		bhi	.L52
 322:src/main.c    **** 						GPIOA.ODR=GPIOA.ODR ^ 0x0400;}/*bleu*/
 1487              		.loc 1 322 35 discriminator 1 view .LVU335
 1488 0820 E968     		ldr	r1, [r5, #12]
 1489 0822 2A69     		ldr	r2, [r5, #16]
 1490 0824 07FB0127 		mla	r7, r7, r1, r2
 322:src/main.c    **** 						GPIOA.ODR=GPIOA.ODR ^ 0x0400;}/*bleu*/
 1491              		.loc 1 322 26 discriminator 1 view .LVU336
 1492 0828 54F82720 		ldr	r2, [r4, r7, lsl #2]
 1493 082c B2F5967F 		cmp	r2, #300
 1494 0830 03D3     		bcc	.L52
 323:src/main.c    **** 					else {
 1495              		.loc 1 323 7 is_stmt 1 view .LVU337
 323:src/main.c    **** 					else {
 1496              		.loc 1 323 22 is_stmt 0 view .LVU338
 1497 0832 5A69     		ldr	r2, [r3, #20]
 323:src/main.c    **** 					else {
 1498              		.loc 1 323 27 view .LVU339
 1499 0834 82F48062 		eor	r2, r2, #1024
 1500 0838 B1E7     		b	.L62
 1501              	.L52:
 326:src/main.c    **** 				}
 1502              		.loc 1 326 7 is_stmt 1 view .LVU340
 326:src/main.c    **** 				}
 1503              		.loc 1 326 22 is_stmt 0 view .LVU341
 1504 083a 5A69     		ldr	r2, [r3, #20]
 326:src/main.c    **** 				}
 1505              		.loc 1 326 27 view .LVU342
 1506 083c 82F48072 		eor	r2, r2, #256
 1507 0840 ADE7     		b	.L62
 1508              		.cfi_endproc
 1509              	.LFE409:
 1510              		.size	main, .-main
 1511              		.global	tempo
 1512              		.global	compteur2
 1513              		.global	mode
 1514              		.global	i
 1515              		.global	jtaille
 1516              		.global	j
 1517              		.global	compteur
 1518              		.global	flag_v
 1519              		.global	flag
 1520 0842 00BF     		.section	.rodata
 1521              		.set	.LANCHOR2,. + 0
 1522              	.LC0:
 1523 0000 41752063 		.ascii	"Au clair de la lune\000"
 1523      6C616972 
 1523      20646520 
 1523      6C61206C 
 1523      756E6500 
 1524 0014 4C612042 		.ascii	"La Berceuse\000"
 1524      65726365 
 1524      75736500 
 1525 0020 00000000 		.space	8
 1525      00000000 
 1526 0028 56697665 		.ascii	"Vive le vent\000"
 1526      206C6520 
 1526      76656E74 
 1526      00
 1527 0035 00000000 		.space	7
 1527      000000
 1528 003c 48617272 		.ascii	"Harry Potter\000"
 1528      7920506F 
 1528      74746572 
 1528      00
 1529 0049 00000000 		.space	7
 1529      000000
 1530              		.data
 1531              		.align	2
 1532              		.set	.LANCHOR1,. + 0
 1533              		.type	compteur2, %object
 1534              		.size	compteur2, 4
 1535              	compteur2:
 1536 0000 10270000 		.word	10000
 1537              		.type	jtaille, %object
 1538              		.size	jtaille, 4
 1539              	jtaille:
 1540 0004 08000000 		.word	8
 1541              		.bss
 1542              		.align	2
 1543              		.set	.LANCHOR0,. + 0
 1544              		.type	compteur, %object
 1545              		.size	compteur, 4
 1546              	compteur:
 1547 0000 00000000 		.space	4
 1548              		.type	flag, %object
 1549              		.size	flag, 4
 1550              	flag:
 1551 0004 00000000 		.space	4
 1552              		.type	tempo, %object
 1553              		.size	tempo, 4
 1554              	tempo:
 1555 0008 00000000 		.space	4
 1556              		.type	j, %object
 1557              		.size	j, 4
 1558              	j:
 1559 000c 00000000 		.space	4
 1560              		.type	i, %object
 1561              		.size	i, 4
 1562              	i:
 1563 0010 00000000 		.space	4
 1564              		.type	flag_v, %object
 1565              		.size	flag_v, 4
 1566              	flag_v:
 1567 0014 00000000 		.space	4
 1568              		.type	mode, %object
 1569              		.size	mode, 4
 1570              	mode:
 1571 0018 00000000 		.space	4
 1572              		.text
 1573              	.Letext0:
 1574              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 1575              		.file 5 "/usr/include/newlib/sys/_stdint.h"
 1576              		.file 6 "<built-in>"
 1577              		.file 7 "/usr/include/newlib/stdio.h"
 1578              		.file 8 "src/systick.h"
 1579              		.file 9 "src/button.h"
 1580              		.file 10 "src/led.h"
 1581              		.file 11 "src/adc.h"
 1582              		.file 12 "src/sys/clock.h"
 1583              		.section	.debug_info,"",%progbits
 1584              	.Ldebug_info0:
 1585 0000 6C0B0000 		.4byte	0xb6c
 1586 0004 0400     		.2byte	0x4
 1587 0006 00000000 		.4byte	.Ldebug_abbrev0
 1588 000a 04       		.byte	0x4
 1589 000b 01       		.uleb128 0x1
 1590 000c C4010000 		.4byte	.LASF135
 1591 0010 0C       		.byte	0xc
 1592 0011 17000000 		.4byte	.LASF136
 1593 0015 A1000000 		.4byte	.LASF137
 1594 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1595 001d 00000000 		.4byte	0
 1596 0021 00000000 		.4byte	.Ldebug_line0
 1597 0025 02       		.uleb128 0x2
 1598 0026 01       		.byte	0x1
 1599 0027 06       		.byte	0x6
 1600 0028 22000000 		.4byte	.LASF0
 1601 002c 02       		.uleb128 0x2
 1602 002d 01       		.byte	0x1
 1603 002e 08       		.byte	0x8
 1604 002f 7B040000 		.4byte	.LASF1
 1605 0033 02       		.uleb128 0x2
 1606 0034 02       		.byte	0x2
 1607 0035 05       		.byte	0x5
 1608 0036 8E040000 		.4byte	.LASF2
 1609 003a 02       		.uleb128 0x2
 1610 003b 02       		.byte	0x2
 1611 003c 07       		.byte	0x7
 1612 003d 6E050000 		.4byte	.LASF3
 1613 0041 02       		.uleb128 0x2
 1614 0042 04       		.byte	0x4
 1615 0043 05       		.byte	0x5
 1616 0044 58010000 		.4byte	.LASF4
 1617 0048 03       		.uleb128 0x3
 1618 0049 6F020000 		.4byte	.LASF10
 1619 004d 04       		.byte	0x4
 1620 004e 4F       		.byte	0x4f
 1621 004f 19       		.byte	0x19
 1622 0050 54000000 		.4byte	0x54
 1623 0054 02       		.uleb128 0x2
 1624 0055 04       		.byte	0x4
 1625 0056 07       		.byte	0x7
 1626 0057 C7020000 		.4byte	.LASF5
 1627 005b 02       		.uleb128 0x2
 1628 005c 08       		.byte	0x8
 1629 005d 05       		.byte	0x5
 1630 005e 07010000 		.4byte	.LASF6
 1631 0062 02       		.uleb128 0x2
 1632 0063 08       		.byte	0x8
 1633 0064 07       		.byte	0x7
 1634 0065 74000000 		.4byte	.LASF7
 1635 0069 04       		.uleb128 0x4
 1636 006a 04       		.byte	0x4
 1637 006b 05       		.byte	0x5
 1638 006c 696E7400 		.ascii	"int\000"
 1639 0070 02       		.uleb128 0x2
 1640 0071 04       		.byte	0x4
 1641 0072 07       		.byte	0x7
 1642 0073 A5020000 		.4byte	.LASF8
 1643 0077 02       		.uleb128 0x2
 1644 0078 01       		.byte	0x1
 1645 0079 08       		.byte	0x8
 1646 007a 29050000 		.4byte	.LASF9
 1647 007e 03       		.uleb128 0x3
 1648 007f DB040000 		.4byte	.LASF11
 1649 0083 05       		.byte	0x5
 1650 0084 30       		.byte	0x30
 1651 0085 14       		.byte	0x14
 1652 0086 48000000 		.4byte	0x48
 1653 008a 05       		.uleb128 0x5
 1654 008b 7E000000 		.4byte	0x7e
 1655 008f 02       		.uleb128 0x2
 1656 0090 04       		.byte	0x4
 1657 0091 04       		.byte	0x4
 1658 0092 4A040000 		.4byte	.LASF12
 1659 0096 05       		.uleb128 0x5
 1660 0097 8F000000 		.4byte	0x8f
 1661 009b 02       		.uleb128 0x2
 1662 009c 08       		.byte	0x8
 1663 009d 04       		.byte	0x4
 1664 009e 8C010000 		.4byte	.LASF13
 1665 00a2 06       		.uleb128 0x6
 1666 00a3 38060000 		.4byte	.LASF49
 1667 00a7 98       		.byte	0x98
 1668 00a8 02       		.byte	0x2
 1669 00a9 68       		.byte	0x68
 1670 00aa 08       		.byte	0x8
 1671 00ab 9D020000 		.4byte	0x29d
 1672 00af 07       		.uleb128 0x7
 1673 00b0 435200   		.ascii	"CR\000"
 1674 00b3 02       		.byte	0x2
 1675 00b4 69       		.byte	0x69
 1676 00b5 0C       		.byte	0xc
 1677 00b6 7E000000 		.4byte	0x7e
 1678 00ba 00       		.byte	0
 1679 00bb 08       		.uleb128 0x8
 1680 00bc A8010000 		.4byte	.LASF14
 1681 00c0 02       		.byte	0x2
 1682 00c1 6A       		.byte	0x6a
 1683 00c2 0C       		.byte	0xc
 1684 00c3 7E000000 		.4byte	0x7e
 1685 00c7 04       		.byte	0x4
 1686 00c8 08       		.uleb128 0x8
 1687 00c9 FE050000 		.4byte	.LASF15
 1688 00cd 02       		.byte	0x2
 1689 00ce 6B       		.byte	0x6b
 1690 00cf 0C       		.byte	0xc
 1691 00d0 7E000000 		.4byte	0x7e
 1692 00d4 08       		.byte	0x8
 1693 00d5 07       		.uleb128 0x7
 1694 00d6 43495200 		.ascii	"CIR\000"
 1695 00da 02       		.byte	0x2
 1696 00db 6C       		.byte	0x6c
 1697 00dc 0C       		.byte	0xc
 1698 00dd 7E000000 		.4byte	0x7e
 1699 00e1 0C       		.byte	0xc
 1700 00e2 08       		.uleb128 0x8
 1701 00e3 29010000 		.4byte	.LASF16
 1702 00e7 02       		.byte	0x2
 1703 00e8 6D       		.byte	0x6d
 1704 00e9 0C       		.byte	0xc
 1705 00ea 7E000000 		.4byte	0x7e
 1706 00ee 10       		.byte	0x10
 1707 00ef 08       		.uleb128 0x8
 1708 00f0 47050000 		.4byte	.LASF17
 1709 00f4 02       		.byte	0x2
 1710 00f5 6E       		.byte	0x6e
 1711 00f6 0C       		.byte	0xc
 1712 00f7 7E000000 		.4byte	0x7e
 1713 00fb 14       		.byte	0x14
 1714 00fc 08       		.uleb128 0x8
 1715 00fd 06030000 		.4byte	.LASF18
 1716 0101 02       		.byte	0x2
 1717 0102 6F       		.byte	0x6f
 1718 0103 0C       		.byte	0xc
 1719 0104 7E000000 		.4byte	0x7e
 1720 0108 18       		.byte	0x18
 1721 0109 08       		.uleb128 0x8
 1722 010a E1020000 		.4byte	.LASF19
 1723 010e 02       		.byte	0x2
 1724 010f 70       		.byte	0x70
 1725 0110 03       		.byte	0x3
 1726 0111 7E000000 		.4byte	0x7e
 1727 0115 1C       		.byte	0x1c
 1728 0116 08       		.uleb128 0x8
 1729 0117 21040000 		.4byte	.LASF20
 1730 011b 02       		.byte	0x2
 1731 011c 71       		.byte	0x71
 1732 011d 0C       		.byte	0xc
 1733 011e 7E000000 		.4byte	0x7e
 1734 0122 20       		.byte	0x20
 1735 0123 08       		.uleb128 0x8
 1736 0124 61010000 		.4byte	.LASF21
 1737 0128 02       		.byte	0x2
 1738 0129 72       		.byte	0x72
 1739 012a 0C       		.byte	0xc
 1740 012b 7E000000 		.4byte	0x7e
 1741 012f 24       		.byte	0x24
 1742 0130 08       		.uleb128 0x8
 1743 0131 0F030000 		.4byte	.LASF22
 1744 0135 02       		.byte	0x2
 1745 0136 73       		.byte	0x73
 1746 0137 03       		.byte	0x3
 1747 0138 7E000000 		.4byte	0x7e
 1748 013c 28       		.byte	0x28
 1749 013d 08       		.uleb128 0x8
 1750 013e AB030000 		.4byte	.LASF23
 1751 0142 02       		.byte	0x2
 1752 0143 74       		.byte	0x74
 1753 0144 03       		.byte	0x3
 1754 0145 7E000000 		.4byte	0x7e
 1755 0149 2C       		.byte	0x2c
 1756 014a 08       		.uleb128 0x8
 1757 014b F6050000 		.4byte	.LASF24
 1758 014f 02       		.byte	0x2
 1759 0150 75       		.byte	0x75
 1760 0151 0C       		.byte	0xc
 1761 0152 7E000000 		.4byte	0x7e
 1762 0156 30       		.byte	0x30
 1763 0157 08       		.uleb128 0x8
 1764 0158 66050000 		.4byte	.LASF25
 1765 015c 02       		.byte	0x2
 1766 015d 76       		.byte	0x76
 1767 015e 0C       		.byte	0xc
 1768 015f 7E000000 		.4byte	0x7e
 1769 0163 34       		.byte	0x34
 1770 0164 08       		.uleb128 0x8
 1771 0165 D9020000 		.4byte	.LASF26
 1772 0169 02       		.byte	0x2
 1773 016a 77       		.byte	0x77
 1774 016b 0C       		.byte	0xc
 1775 016c 7E000000 		.4byte	0x7e
 1776 0170 38       		.byte	0x38
 1777 0171 08       		.uleb128 0x8
 1778 0172 6C040000 		.4byte	.LASF27
 1779 0176 02       		.byte	0x2
 1780 0177 78       		.byte	0x78
 1781 0178 03       		.byte	0x3
 1782 0179 7E000000 		.4byte	0x7e
 1783 017d 3C       		.byte	0x3c
 1784 017e 08       		.uleb128 0x8
 1785 017f 5E050000 		.4byte	.LASF28
 1786 0183 02       		.byte	0x2
 1787 0184 79       		.byte	0x79
 1788 0185 0C       		.byte	0xc
 1789 0186 7E000000 		.4byte	0x7e
 1790 018a 40       		.byte	0x40
 1791 018b 08       		.uleb128 0x8
 1792 018c C4040000 		.4byte	.LASF29
 1793 0190 02       		.byte	0x2
 1794 0191 7A       		.byte	0x7a
 1795 0192 0C       		.byte	0xc
 1796 0193 7E000000 		.4byte	0x7e
 1797 0197 44       		.byte	0x44
 1798 0198 08       		.uleb128 0x8
 1799 0199 A9040000 		.4byte	.LASF30
 1800 019d 02       		.byte	0x2
 1801 019e 7B       		.byte	0x7b
 1802 019f 03       		.byte	0x3
 1803 01a0 7E000000 		.4byte	0x7e
 1804 01a4 48       		.byte	0x48
 1805 01a5 08       		.uleb128 0x8
 1806 01a6 33050000 		.4byte	.LASF31
 1807 01aa 02       		.byte	0x2
 1808 01ab 7C       		.byte	0x7c
 1809 01ac 03       		.byte	0x3
 1810 01ad 7E000000 		.4byte	0x7e
 1811 01b1 4C       		.byte	0x4c
 1812 01b2 08       		.uleb128 0x8
 1813 01b3 EA000000 		.4byte	.LASF32
 1814 01b7 02       		.byte	0x2
 1815 01b8 7D       		.byte	0x7d
 1816 01b9 0C       		.byte	0xc
 1817 01ba 7E000000 		.4byte	0x7e
 1818 01be 50       		.byte	0x50
 1819 01bf 08       		.uleb128 0x8
 1820 01c0 0B040000 		.4byte	.LASF33
 1821 01c4 02       		.byte	0x2
 1822 01c5 7E       		.byte	0x7e
 1823 01c6 0C       		.byte	0xc
 1824 01c7 7E000000 		.4byte	0x7e
 1825 01cb 54       		.byte	0x54
 1826 01cc 08       		.uleb128 0x8
 1827 01cd 9F040000 		.4byte	.LASF34
 1828 01d1 02       		.byte	0x2
 1829 01d2 7F       		.byte	0x7f
 1830 01d3 0C       		.byte	0xc
 1831 01d4 7E000000 		.4byte	0x7e
 1832 01d8 58       		.byte	0x58
 1833 01d9 08       		.uleb128 0x8
 1834 01da BE050000 		.4byte	.LASF35
 1835 01de 02       		.byte	0x2
 1836 01df 80       		.byte	0x80
 1837 01e0 03       		.byte	0x3
 1838 01e1 7E000000 		.4byte	0x7e
 1839 01e5 5C       		.byte	0x5c
 1840 01e6 08       		.uleb128 0x8
 1841 01e7 6A010000 		.4byte	.LASF36
 1842 01eb 02       		.byte	0x2
 1843 01ec 81       		.byte	0x81
 1844 01ed 0C       		.byte	0xc
 1845 01ee 7E000000 		.4byte	0x7e
 1846 01f2 60       		.byte	0x60
 1847 01f3 08       		.uleb128 0x8
 1848 01f4 39030000 		.4byte	.LASF37
 1849 01f8 02       		.byte	0x2
 1850 01f9 82       		.byte	0x82
 1851 01fa 0C       		.byte	0xc
 1852 01fb 7E000000 		.4byte	0x7e
 1853 01ff 64       		.byte	0x64
 1854 0200 08       		.uleb128 0x8
 1855 0201 03060000 		.4byte	.LASF38
 1856 0205 02       		.byte	0x2
 1857 0206 83       		.byte	0x83
 1858 0207 03       		.byte	0x3
 1859 0208 7E000000 		.4byte	0x7e
 1860 020c 68       		.byte	0x68
 1861 020d 08       		.uleb128 0x8
 1862 020e 49010000 		.4byte	.LASF39
 1863 0212 02       		.byte	0x2
 1864 0213 84       		.byte	0x84
 1865 0214 03       		.byte	0x3
 1866 0215 7E000000 		.4byte	0x7e
 1867 0219 6C       		.byte	0x6c
 1868 021a 08       		.uleb128 0x8
 1869 021b B3050000 		.4byte	.LASF40
 1870 021f 02       		.byte	0x2
 1871 0220 85       		.byte	0x85
 1872 0221 0C       		.byte	0xc
 1873 0222 7E000000 		.4byte	0x7e
 1874 0226 70       		.byte	0x70
 1875 0227 07       		.uleb128 0x7
 1876 0228 43535200 		.ascii	"CSR\000"
 1877 022c 02       		.byte	0x2
 1878 022d 86       		.byte	0x86
 1879 022e 0C       		.byte	0xc
 1880 022f 7E000000 		.4byte	0x7e
 1881 0233 74       		.byte	0x74
 1882 0234 08       		.uleb128 0x8
 1883 0235 B5010000 		.4byte	.LASF41
 1884 0239 02       		.byte	0x2
 1885 023a 87       		.byte	0x87
 1886 023b 03       		.byte	0x3
 1887 023c 7E000000 		.4byte	0x7e
 1888 0240 78       		.byte	0x78
 1889 0241 08       		.uleb128 0x8
 1890 0242 CC040000 		.4byte	.LASF42
 1891 0246 02       		.byte	0x2
 1892 0247 88       		.byte	0x88
 1893 0248 03       		.byte	0x3
 1894 0249 7E000000 		.4byte	0x7e
 1895 024d 7C       		.byte	0x7c
 1896 024e 08       		.uleb128 0x8
 1897 024f 90050000 		.4byte	.LASF43
 1898 0253 02       		.byte	0x2
 1899 0254 89       		.byte	0x89
 1900 0255 0C       		.byte	0xc
 1901 0256 7E000000 		.4byte	0x7e
 1902 025a 80       		.byte	0x80
 1903 025b 08       		.uleb128 0x8
 1904 025c FB020000 		.4byte	.LASF44
 1905 0260 02       		.byte	0x2
 1906 0261 8A       		.byte	0x8a
 1907 0262 0C       		.byte	0xc
 1908 0263 7E000000 		.4byte	0x7e
 1909 0267 84       		.byte	0x84
 1910 0268 08       		.uleb128 0x8
 1911 0269 55040000 		.4byte	.LASF45
 1912 026d 02       		.byte	0x2
 1913 026e 8B       		.byte	0x8b
 1914 026f 0C       		.byte	0xc
 1915 0270 7E000000 		.4byte	0x7e
 1916 0274 88       		.byte	0x88
 1917 0275 08       		.uleb128 0x8
 1918 0276 FF000000 		.4byte	.LASF46
 1919 027a 02       		.byte	0x2
 1920 027b 8C       		.byte	0x8c
 1921 027c 0C       		.byte	0xc
 1922 027d 7E000000 		.4byte	0x7e
 1923 0281 8C       		.byte	0x8c
 1924 0282 08       		.uleb128 0x8
 1925 0283 AA050000 		.4byte	.LASF47
 1926 0287 02       		.byte	0x2
 1927 0288 8D       		.byte	0x8d
 1928 0289 0C       		.byte	0xc
 1929 028a 7E000000 		.4byte	0x7e
 1930 028e 90       		.byte	0x90
 1931 028f 08       		.uleb128 0x8
 1932 0290 32010000 		.4byte	.LASF48
 1933 0294 02       		.byte	0x2
 1934 0295 8E       		.byte	0x8e
 1935 0296 0C       		.byte	0xc
 1936 0297 7E000000 		.4byte	0x7e
 1937 029b 94       		.byte	0x94
 1938 029c 00       		.byte	0
 1939 029d 05       		.uleb128 0x5
 1940 029e A2000000 		.4byte	0xa2
 1941 02a2 06       		.uleb128 0x6
 1942 02a3 C1030000 		.4byte	.LASF50
 1943 02a7 28       		.byte	0x28
 1944 02a8 02       		.byte	0x2
 1945 02a9 92       		.byte	0x92
 1946 02aa 08       		.byte	0x8
 1947 02ab 32030000 		.4byte	0x332
 1948 02af 08       		.uleb128 0x8
 1949 02b0 B2020000 		.4byte	.LASF51
 1950 02b4 02       		.byte	0x2
 1951 02b5 93       		.byte	0x93
 1952 02b6 0C       		.byte	0xc
 1953 02b7 7E000000 		.4byte	0x7e
 1954 02bb 00       		.byte	0
 1955 02bc 08       		.uleb128 0x8
 1956 02bd 2E000000 		.4byte	.LASF52
 1957 02c1 02       		.byte	0x2
 1958 02c2 94       		.byte	0x94
 1959 02c3 0C       		.byte	0xc
 1960 02c4 7E000000 		.4byte	0x7e
 1961 02c8 04       		.byte	0x4
 1962 02c9 08       		.uleb128 0x8
 1963 02ca 67020000 		.4byte	.LASF53
 1964 02ce 02       		.byte	0x2
 1965 02cf 95       		.byte	0x95
 1966 02d0 0C       		.byte	0xc
 1967 02d1 7E000000 		.4byte	0x7e
 1968 02d5 08       		.byte	0x8
 1969 02d6 08       		.uleb128 0x8
 1970 02d7 07000000 		.4byte	.LASF54
 1971 02db 02       		.byte	0x2
 1972 02dc 96       		.byte	0x96
 1973 02dd 0C       		.byte	0xc
 1974 02de 7E000000 		.4byte	0x7e
 1975 02e2 0C       		.byte	0xc
 1976 02e3 07       		.uleb128 0x7
 1977 02e4 49445200 		.ascii	"IDR\000"
 1978 02e8 02       		.byte	0x2
 1979 02e9 97       		.byte	0x97
 1980 02ea 0C       		.byte	0xc
 1981 02eb 7E000000 		.4byte	0x7e
 1982 02ef 10       		.byte	0x10
 1983 02f0 07       		.uleb128 0x7
 1984 02f1 4F445200 		.ascii	"ODR\000"
 1985 02f5 02       		.byte	0x2
 1986 02f6 98       		.byte	0x98
 1987 02f7 0C       		.byte	0xc
 1988 02f8 7E000000 		.4byte	0x7e
 1989 02fc 14       		.byte	0x14
 1990 02fd 08       		.uleb128 0x8
 1991 02fe 24010000 		.4byte	.LASF55
 1992 0302 02       		.byte	0x2
 1993 0303 99       		.byte	0x99
 1994 0304 0C       		.byte	0xc
 1995 0305 7E000000 		.4byte	0x7e
 1996 0309 18       		.byte	0x18
 1997 030a 08       		.uleb128 0x8
 1998 030b 0D000000 		.4byte	.LASF56
 1999 030f 02       		.byte	0x2
 2000 0310 9A       		.byte	0x9a
 2001 0311 0C       		.byte	0xc
 2002 0312 7E000000 		.4byte	0x7e
 2003 0316 1C       		.byte	0x1c
 2004 0317 08       		.uleb128 0x8
 2005 0318 50040000 		.4byte	.LASF57
 2006 031c 02       		.byte	0x2
 2007 031d 9B       		.byte	0x9b
 2008 031e 0C       		.byte	0xc
 2009 031f 7E000000 		.4byte	0x7e
 2010 0323 20       		.byte	0x20
 2011 0324 08       		.uleb128 0x8
 2012 0325 45040000 		.4byte	.LASF58
 2013 0329 02       		.byte	0x2
 2014 032a 9C       		.byte	0x9c
 2015 032b 0C       		.byte	0xc
 2016 032c 7E000000 		.4byte	0x7e
 2017 0330 24       		.byte	0x24
 2018 0331 00       		.byte	0
 2019 0332 05       		.uleb128 0x5
 2020 0333 A2020000 		.4byte	0x2a2
 2021 0337 06       		.uleb128 0x6
 2022 0338 81050000 		.4byte	.LASF59
 2023 033c 18       		.byte	0x18
 2024 033d 02       		.byte	0x2
 2025 033e C1       		.byte	0xc1
 2026 033f 08       		.byte	0x8
 2027 0340 92030000 		.4byte	0x392
 2028 0344 07       		.uleb128 0x7
 2029 0345 494D5200 		.ascii	"IMR\000"
 2030 0349 02       		.byte	0x2
 2031 034a C2       		.byte	0xc2
 2032 034b 0C       		.byte	0xc
 2033 034c 7E000000 		.4byte	0x7e
 2034 0350 00       		.byte	0
 2035 0351 07       		.uleb128 0x7
 2036 0352 454D5200 		.ascii	"EMR\000"
 2037 0356 02       		.byte	0x2
 2038 0357 C3       		.byte	0xc3
 2039 0358 0C       		.byte	0xc
 2040 0359 7E000000 		.4byte	0x7e
 2041 035d 04       		.byte	0x4
 2042 035e 08       		.uleb128 0x8
 2043 035f C2020000 		.4byte	.LASF60
 2044 0363 02       		.byte	0x2
 2045 0364 C4       		.byte	0xc4
 2046 0365 0C       		.byte	0xc
 2047 0366 7E000000 		.4byte	0x7e
 2048 036a 08       		.byte	0x8
 2049 036b 08       		.uleb128 0x8
 2050 036c 89040000 		.4byte	.LASF61
 2051 0370 02       		.byte	0x2
 2052 0371 C5       		.byte	0xc5
 2053 0372 0C       		.byte	0xc
 2054 0373 7E000000 		.4byte	0x7e
 2055 0377 0C       		.byte	0xc
 2056 0378 08       		.uleb128 0x8
 2057 0379 48000000 		.4byte	.LASF62
 2058 037d 02       		.byte	0x2
 2059 037e C6       		.byte	0xc6
 2060 037f 0C       		.byte	0xc
 2061 0380 7E000000 		.4byte	0x7e
 2062 0384 10       		.byte	0x10
 2063 0385 07       		.uleb128 0x7
 2064 0386 505200   		.ascii	"PR\000"
 2065 0389 02       		.byte	0x2
 2066 038a C7       		.byte	0xc7
 2067 038b 0C       		.byte	0xc
 2068 038c 7E000000 		.4byte	0x7e
 2069 0390 14       		.byte	0x14
 2070 0391 00       		.byte	0
 2071 0392 05       		.uleb128 0x5
 2072 0393 37030000 		.4byte	0x337
 2073 0397 06       		.uleb128 0x6
 2074 0398 24060000 		.4byte	.LASF63
 2075 039c 50       		.byte	0x50
 2076 039d 02       		.byte	0x2
 2077 039e F8       		.byte	0xf8
 2078 039f 08       		.byte	0x8
 2079 03a0 B4040000 		.4byte	0x4b4
 2080 03a4 07       		.uleb128 0x7
 2081 03a5 535200   		.ascii	"SR\000"
 2082 03a8 02       		.byte	0x2
 2083 03a9 F9       		.byte	0xf9
 2084 03aa 0C       		.byte	0xc
 2085 03ab 7E000000 		.4byte	0x7e
 2086 03af 00       		.byte	0
 2087 03b0 07       		.uleb128 0x7
 2088 03b1 43523100 		.ascii	"CR1\000"
 2089 03b5 02       		.byte	0x2
 2090 03b6 FA       		.byte	0xfa
 2091 03b7 0C       		.byte	0xc
 2092 03b8 7E000000 		.4byte	0x7e
 2093 03bc 04       		.byte	0x4
 2094 03bd 07       		.uleb128 0x7
 2095 03be 43523200 		.ascii	"CR2\000"
 2096 03c2 02       		.byte	0x2
 2097 03c3 FB       		.byte	0xfb
 2098 03c4 0C       		.byte	0xc
 2099 03c5 7E000000 		.4byte	0x7e
 2100 03c9 08       		.byte	0x8
 2101 03ca 08       		.uleb128 0x8
 2102 03cb 15040000 		.4byte	.LASF64
 2103 03cf 02       		.byte	0x2
 2104 03d0 FC       		.byte	0xfc
 2105 03d1 0C       		.byte	0xc
 2106 03d2 7E000000 		.4byte	0x7e
 2107 03d6 0C       		.byte	0xc
 2108 03d7 08       		.uleb128 0x8
 2109 03d8 1B040000 		.4byte	.LASF65
 2110 03dc 02       		.byte	0x2
 2111 03dd FD       		.byte	0xfd
 2112 03de 0C       		.byte	0xc
 2113 03df 7E000000 		.4byte	0x7e
 2114 03e3 10       		.byte	0x10
 2115 03e4 08       		.uleb128 0x8
 2116 03e5 B8050000 		.4byte	.LASF66
 2117 03e9 02       		.byte	0x2
 2118 03ea FE       		.byte	0xfe
 2119 03eb 0C       		.byte	0xc
 2120 03ec 7E000000 		.4byte	0x7e
 2121 03f0 14       		.byte	0x14
 2122 03f1 08       		.uleb128 0x8
 2123 03f2 B8040000 		.4byte	.LASF67
 2124 03f6 02       		.byte	0x2
 2125 03f7 FF       		.byte	0xff
 2126 03f8 0C       		.byte	0xc
 2127 03f9 7E000000 		.4byte	0x7e
 2128 03fd 18       		.byte	0x18
 2129 03fe 09       		.uleb128 0x9
 2130 03ff 77030000 		.4byte	.LASF68
 2131 0403 02       		.byte	0x2
 2132 0404 0001     		.2byte	0x100
 2133 0406 0C       		.byte	0xc
 2134 0407 7E000000 		.4byte	0x7e
 2135 040b 1C       		.byte	0x1c
 2136 040c 09       		.uleb128 0x9
 2137 040d BE040000 		.4byte	.LASF69
 2138 0411 02       		.byte	0x2
 2139 0412 0101     		.2byte	0x101
 2140 0414 0C       		.byte	0xc
 2141 0415 7E000000 		.4byte	0x7e
 2142 0419 20       		.byte	0x20
 2143 041a 0A       		.uleb128 0xa
 2144 041b 48545200 		.ascii	"HTR\000"
 2145 041f 02       		.byte	0x2
 2146 0420 0201     		.2byte	0x102
 2147 0422 0C       		.byte	0xc
 2148 0423 7E000000 		.4byte	0x7e
 2149 0427 24       		.byte	0x24
 2150 0428 0A       		.uleb128 0xa
 2151 0429 4C545200 		.ascii	"LTR\000"
 2152 042d 02       		.byte	0x2
 2153 042e 0301     		.2byte	0x103
 2154 0430 0C       		.byte	0xc
 2155 0431 7E000000 		.4byte	0x7e
 2156 0435 28       		.byte	0x28
 2157 0436 09       		.uleb128 0x9
 2158 0437 2A040000 		.4byte	.LASF70
 2159 043b 02       		.byte	0x2
 2160 043c 0401     		.2byte	0x104
 2161 043e 0C       		.byte	0xc
 2162 043f 7E000000 		.4byte	0x7e
 2163 0443 2C       		.byte	0x2c
 2164 0444 09       		.uleb128 0x9
 2165 0445 2F040000 		.4byte	.LASF71
 2166 0449 02       		.byte	0x2
 2167 044a 0501     		.2byte	0x105
 2168 044c 0C       		.byte	0xc
 2169 044d 7E000000 		.4byte	0x7e
 2170 0451 30       		.byte	0x30
 2171 0452 09       		.uleb128 0x9
 2172 0453 34040000 		.4byte	.LASF72
 2173 0457 02       		.byte	0x2
 2174 0458 0601     		.2byte	0x106
 2175 045a 0C       		.byte	0xc
 2176 045b 7E000000 		.4byte	0x7e
 2177 045f 34       		.byte	0x34
 2178 0460 09       		.uleb128 0x9
 2179 0461 F4000000 		.4byte	.LASF73
 2180 0465 02       		.byte	0x2
 2181 0466 0701     		.2byte	0x107
 2182 0468 0C       		.byte	0xc
 2183 0469 7E000000 		.4byte	0x7e
 2184 046d 38       		.byte	0x38
 2185 046e 09       		.uleb128 0x9
 2186 046f DD050000 		.4byte	.LASF74
 2187 0473 02       		.byte	0x2
 2188 0474 0801     		.2byte	0x108
 2189 0476 0C       		.byte	0xc
 2190 0477 7E000000 		.4byte	0x7e
 2191 047b 3C       		.byte	0x3c
 2192 047c 09       		.uleb128 0x9
 2193 047d E2050000 		.4byte	.LASF75
 2194 0481 02       		.byte	0x2
 2195 0482 0901     		.2byte	0x109
 2196 0484 0C       		.byte	0xc
 2197 0485 7E000000 		.4byte	0x7e
 2198 0489 40       		.byte	0x40
 2199 048a 09       		.uleb128 0x9
 2200 048b E7050000 		.4byte	.LASF76
 2201 048f 02       		.byte	0x2
 2202 0490 0A01     		.2byte	0x10a
 2203 0492 0C       		.byte	0xc
 2204 0493 7E000000 		.4byte	0x7e
 2205 0497 44       		.byte	0x44
 2206 0498 09       		.uleb128 0x9
 2207 0499 EC050000 		.4byte	.LASF77
 2208 049d 02       		.byte	0x2
 2209 049e 0B01     		.2byte	0x10b
 2210 04a0 0C       		.byte	0xc
 2211 04a1 7E000000 		.4byte	0x7e
 2212 04a5 48       		.byte	0x48
 2213 04a6 0A       		.uleb128 0xa
 2214 04a7 445200   		.ascii	"DR\000"
 2215 04aa 02       		.byte	0x2
 2216 04ab 0C01     		.2byte	0x10c
 2217 04ad 0C       		.byte	0xc
 2218 04ae 7E000000 		.4byte	0x7e
 2219 04b2 4C       		.byte	0x4c
 2220 04b3 00       		.byte	0
 2221 04b4 05       		.uleb128 0x5
 2222 04b5 97030000 		.4byte	0x397
 2223 04b9 0B       		.uleb128 0xb
 2224 04ba E4040000 		.4byte	.LASF78
 2225 04be 54       		.byte	0x54
 2226 04bf 02       		.byte	0x2
 2227 04c0 3C01     		.2byte	0x13c
 2228 04c2 08       		.byte	0x8
 2229 04c3 EC050000 		.4byte	0x5ec
 2230 04c7 0A       		.uleb128 0xa
 2231 04c8 43523100 		.ascii	"CR1\000"
 2232 04cc 02       		.byte	0x2
 2233 04cd 3D01     		.2byte	0x13d
 2234 04cf 0C       		.byte	0xc
 2235 04d0 7E000000 		.4byte	0x7e
 2236 04d4 00       		.byte	0
 2237 04d5 0A       		.uleb128 0xa
 2238 04d6 43523200 		.ascii	"CR2\000"
 2239 04da 02       		.byte	0x2
 2240 04db 3E01     		.2byte	0x13e
 2241 04dd 0C       		.byte	0xc
 2242 04de 7E000000 		.4byte	0x7e
 2243 04e2 04       		.byte	0x4
 2244 04e3 09       		.uleb128 0x9
 2245 04e4 D0030000 		.4byte	.LASF79
 2246 04e8 02       		.byte	0x2
 2247 04e9 3F01     		.2byte	0x13f
 2248 04eb 0C       		.byte	0xc
 2249 04ec 7E000000 		.4byte	0x7e
 2250 04f0 08       		.byte	0x8
 2251 04f1 09       		.uleb128 0x9
 2252 04f2 12000000 		.4byte	.LASF80
 2253 04f6 02       		.byte	0x2
 2254 04f7 4001     		.2byte	0x140
 2255 04f9 0C       		.byte	0xc
 2256 04fa 7E000000 		.4byte	0x7e
 2257 04fe 0C       		.byte	0xc
 2258 04ff 0A       		.uleb128 0xa
 2259 0500 535200   		.ascii	"SR\000"
 2260 0503 02       		.byte	0x2
 2261 0504 4101     		.2byte	0x141
 2262 0506 0C       		.byte	0xc
 2263 0507 7E000000 		.4byte	0x7e
 2264 050b 10       		.byte	0x10
 2265 050c 0A       		.uleb128 0xa
 2266 050d 45475200 		.ascii	"EGR\000"
 2267 0511 02       		.byte	0x2
 2268 0512 4201     		.2byte	0x142
 2269 0514 0C       		.byte	0xc
 2270 0515 7E000000 		.4byte	0x7e
 2271 0519 14       		.byte	0x14
 2272 051a 09       		.uleb128 0x9
 2273 051b F9000000 		.4byte	.LASF81
 2274 051f 02       		.byte	0x2
 2275 0520 4301     		.2byte	0x143
 2276 0522 0C       		.byte	0xc
 2277 0523 7E000000 		.4byte	0x7e
 2278 0527 18       		.byte	0x18
 2279 0528 09       		.uleb128 0x9
 2280 0529 42000000 		.4byte	.LASF82
 2281 052d 02       		.byte	0x2
 2282 052e 4401     		.2byte	0x144
 2283 0530 0C       		.byte	0xc
 2284 0531 7E000000 		.4byte	0x7e
 2285 0535 1C       		.byte	0x1c
 2286 0536 09       		.uleb128 0x9
 2287 0537 7B010000 		.4byte	.LASF83
 2288 053b 02       		.byte	0x2
 2289 053c 4501     		.2byte	0x145
 2290 053e 0C       		.byte	0xc
 2291 053f 7E000000 		.4byte	0x7e
 2292 0543 20       		.byte	0x20
 2293 0544 0A       		.uleb128 0xa
 2294 0545 434E5400 		.ascii	"CNT\000"
 2295 0549 02       		.byte	0x2
 2296 054a 4601     		.2byte	0x146
 2297 054c 0C       		.byte	0xc
 2298 054d 7E000000 		.4byte	0x7e
 2299 0551 24       		.byte	0x24
 2300 0552 0A       		.uleb128 0xa
 2301 0553 50534300 		.ascii	"PSC\000"
 2302 0557 02       		.byte	0x2
 2303 0558 4701     		.2byte	0x147
 2304 055a 0C       		.byte	0xc
 2305 055b 7E000000 		.4byte	0x7e
 2306 055f 28       		.byte	0x28
 2307 0560 0A       		.uleb128 0xa
 2308 0561 41525200 		.ascii	"ARR\000"
 2309 0565 02       		.byte	0x2
 2310 0566 4801     		.2byte	0x148
 2311 0568 0C       		.byte	0xc
 2312 0569 7E000000 		.4byte	0x7e
 2313 056d 2C       		.byte	0x2c
 2314 056e 0A       		.uleb128 0xa
 2315 056f 52435200 		.ascii	"RCR\000"
 2316 0573 02       		.byte	0x2
 2317 0574 4901     		.2byte	0x149
 2318 0576 0C       		.byte	0xc
 2319 0577 7E000000 		.4byte	0x7e
 2320 057b 30       		.byte	0x30
 2321 057c 09       		.uleb128 0x9
 2322 057d 96050000 		.4byte	.LASF84
 2323 0581 02       		.byte	0x2
 2324 0582 4A01     		.2byte	0x14a
 2325 0584 0C       		.byte	0xc
 2326 0585 7E000000 		.4byte	0x7e
 2327 0589 34       		.byte	0x34
 2328 058a 09       		.uleb128 0x9
 2329 058b 9B050000 		.4byte	.LASF85
 2330 058f 02       		.byte	0x2
 2331 0590 4B01     		.2byte	0x14b
 2332 0592 0C       		.byte	0xc
 2333 0593 7E000000 		.4byte	0x7e
 2334 0597 38       		.byte	0x38
 2335 0598 09       		.uleb128 0x9
 2336 0599 A0050000 		.4byte	.LASF86
 2337 059d 02       		.byte	0x2
 2338 059e 4C01     		.2byte	0x14c
 2339 05a0 0C       		.byte	0xc
 2340 05a1 7E000000 		.4byte	0x7e
 2341 05a5 3C       		.byte	0x3c
 2342 05a6 09       		.uleb128 0x9
 2343 05a7 A5050000 		.4byte	.LASF87
 2344 05ab 02       		.byte	0x2
 2345 05ac 4D01     		.2byte	0x14d
 2346 05ae 0C       		.byte	0xc
 2347 05af 7E000000 		.4byte	0x7e
 2348 05b3 40       		.byte	0x40
 2349 05b4 09       		.uleb128 0x9
 2350 05b5 9C000000 		.4byte	.LASF88
 2351 05b9 02       		.byte	0x2
 2352 05ba 4E01     		.2byte	0x14e
 2353 05bc 0C       		.byte	0xc
 2354 05bd 7E000000 		.4byte	0x7e
 2355 05c1 44       		.byte	0x44
 2356 05c2 0A       		.uleb128 0xa
 2357 05c3 44435200 		.ascii	"DCR\000"
 2358 05c7 02       		.byte	0x2
 2359 05c8 4F01     		.2byte	0x14f
 2360 05ca 0C       		.byte	0xc
 2361 05cb 7E000000 		.4byte	0x7e
 2362 05cf 48       		.byte	0x48
 2363 05d0 09       		.uleb128 0x9
 2364 05d1 42050000 		.4byte	.LASF89
 2365 05d5 02       		.byte	0x2
 2366 05d6 5001     		.2byte	0x150
 2367 05d8 0C       		.byte	0xc
 2368 05d9 7E000000 		.4byte	0x7e
 2369 05dd 4C       		.byte	0x4c
 2370 05de 0A       		.uleb128 0xa
 2371 05df 4F5200   		.ascii	"OR\000"
 2372 05e2 02       		.byte	0x2
 2373 05e3 5101     		.2byte	0x151
 2374 05e5 0C       		.byte	0xc
 2375 05e6 7E000000 		.4byte	0x7e
 2376 05ea 50       		.byte	0x50
 2377 05eb 00       		.byte	0
 2378 05ec 05       		.uleb128 0x5
 2379 05ed B9040000 		.4byte	0x4b9
 2380 05f1 0C       		.uleb128 0xc
 2381 05f2 52434300 		.ascii	"RCC\000"
 2382 05f6 02       		.byte	0x2
 2383 05f7 3D02     		.2byte	0x23d
 2384 05f9 26       		.byte	0x26
 2385 05fa 9D020000 		.4byte	0x29d
 2386 05fe 0D       		.uleb128 0xd
 2387 05ff 3F040000 		.4byte	.LASF90
 2388 0603 02       		.byte	0x2
 2389 0604 4502     		.2byte	0x245
 2390 0606 27       		.byte	0x27
 2391 0607 32030000 		.4byte	0x332
 2392 060b 0D       		.uleb128 0xd
 2393 060c 39040000 		.4byte	.LASF91
 2394 0610 02       		.byte	0x2
 2395 0611 4602     		.2byte	0x246
 2396 0613 27       		.byte	0x27
 2397 0614 32030000 		.4byte	0x332
 2398 0618 0D       		.uleb128 0xd
 2399 0619 3B010000 		.4byte	.LASF92
 2400 061d 02       		.byte	0x2
 2401 061e 4E02     		.2byte	0x24e
 2402 0620 27       		.byte	0x27
 2403 0621 92030000 		.4byte	0x392
 2404 0625 0D       		.uleb128 0xd
 2405 0626 F1050000 		.4byte	.LASF93
 2406 062a 02       		.byte	0x2
 2407 062b 5302     		.2byte	0x253
 2408 062d 27       		.byte	0x27
 2409 062e B4040000 		.4byte	0x4b4
 2410 0632 0D       		.uleb128 0xd
 2411 0633 B0010000 		.4byte	.LASF94
 2412 0637 02       		.byte	0x2
 2413 0638 7702     		.2byte	0x277
 2414 063a 27       		.byte	0x27
 2415 063b EC050000 		.4byte	0x5ec
 2416 063f 0E       		.uleb128 0xe
 2417 0640 14050000 		.4byte	.LASF95
 2418 0644 01       		.byte	0x1
 2419 0645 0C       		.byte	0xc
 2420 0646 13       		.byte	0x13
 2421 0647 8A000000 		.4byte	0x8a
 2422 064b 05       		.uleb128 0x5
 2423 064c 03       		.byte	0x3
 2424 064d 00000000 		.4byte	flag
 2425 0651 0E       		.uleb128 0xe
 2426 0652 BA030000 		.4byte	.LASF96
 2427 0656 01       		.byte	0x1
 2428 0657 0C       		.byte	0xc
 2429 0658 1D       		.byte	0x1d
 2430 0659 8A000000 		.4byte	0x8a
 2431 065d 05       		.uleb128 0x5
 2432 065e 03       		.byte	0x3
 2433 065f 00000000 		.4byte	flag_v
 2434 0663 0E       		.uleb128 0xe
 2435 0664 9F010000 		.4byte	.LASF97
 2436 0668 01       		.byte	0x1
 2437 0669 0C       		.byte	0xc
 2438 066a 29       		.byte	0x29
 2439 066b 8A000000 		.4byte	0x8a
 2440 066f 05       		.uleb128 0x5
 2441 0670 03       		.byte	0x3
 2442 0671 00000000 		.4byte	compteur
 2443 0675 0F       		.uleb128 0xf
 2444 0676 6A00     		.ascii	"j\000"
 2445 0678 01       		.byte	0x1
 2446 0679 0C       		.byte	0xc
 2447 067a 37       		.byte	0x37
 2448 067b 8A000000 		.4byte	0x8a
 2449 067f 05       		.uleb128 0x5
 2450 0680 03       		.byte	0x3
 2451 0681 00000000 		.4byte	j
 2452 0685 0E       		.uleb128 0xe
 2453 0686 56050000 		.4byte	.LASF98
 2454 068a 01       		.byte	0x1
 2455 068b 0C       		.byte	0xc
 2456 068c 3C       		.byte	0x3c
 2457 068d 8A000000 		.4byte	0x8a
 2458 0691 05       		.uleb128 0x5
 2459 0692 03       		.byte	0x3
 2460 0693 00000000 		.4byte	jtaille
 2461 0697 0F       		.uleb128 0xf
 2462 0698 6900     		.ascii	"i\000"
 2463 069a 01       		.byte	0x1
 2464 069b 0C       		.byte	0xc
 2465 069c 47       		.byte	0x47
 2466 069d 8A000000 		.4byte	0x8a
 2467 06a1 05       		.uleb128 0x5
 2468 06a2 03       		.byte	0x3
 2469 06a3 00000000 		.4byte	i
 2470 06a7 0E       		.uleb128 0xe
 2471 06a8 2E050000 		.4byte	.LASF99
 2472 06ac 01       		.byte	0x1
 2473 06ad 0C       		.byte	0xc
 2474 06ae 4E       		.byte	0x4e
 2475 06af 8A000000 		.4byte	0x8a
 2476 06b3 05       		.uleb128 0x5
 2477 06b4 03       		.byte	0x3
 2478 06b5 00000000 		.4byte	mode
 2479 06b9 0E       		.uleb128 0xe
 2480 06ba D5030000 		.4byte	.LASF100
 2481 06be 01       		.byte	0x1
 2482 06bf 0C       		.byte	0xc
 2483 06c0 58       		.byte	0x58
 2484 06c1 8A000000 		.4byte	0x8a
 2485 06c5 05       		.uleb128 0x5
 2486 06c6 03       		.byte	0x3
 2487 06c7 00000000 		.4byte	compteur2
 2488 06cb 0E       		.uleb128 0xe
 2489 06cc 50050000 		.4byte	.LASF101
 2490 06d0 01       		.byte	0x1
 2491 06d1 0D       		.byte	0xd
 2492 06d2 10       		.byte	0x10
 2493 06d3 96000000 		.4byte	0x96
 2494 06d7 05       		.uleb128 0x5
 2495 06d8 03       		.byte	0x3
 2496 06d9 00000000 		.4byte	tempo
 2497 06dd 10       		.uleb128 0x10
 2498 06de 33060000 		.4byte	.LASF106
 2499 06e2 01       		.byte	0x1
 2500 06e3 86       		.byte	0x86
 2501 06e4 05       		.byte	0x5
 2502 06e5 69000000 		.4byte	0x69
 2503 06e9 00000000 		.4byte	.LFB409
 2504 06ed 42080000 		.4byte	.LFE409-.LFB409
 2505 06f1 01       		.uleb128 0x1
 2506 06f2 9C       		.byte	0x9c
 2507 06f3 DB080000 		.4byte	0x8db
 2508 06f7 11       		.uleb128 0x11
 2509 06f8 6E6F6D00 		.ascii	"nom\000"
 2510 06fc 01       		.byte	0x1
 2511 06fd 89       		.byte	0x89
 2512 06fe 07       		.byte	0x7
 2513 06ff DB080000 		.4byte	0x8db
 2514 0703 03       		.uleb128 0x3
 2515 0704 91       		.byte	0x91
 2516 0705 A066     		.sleb128 -3296
 2517 0707 11       		.uleb128 0x11
 2518 0708 76616C00 		.ascii	"val\000"
 2519 070c 01       		.byte	0x1
 2520 070d 8C       		.byte	0x8c
 2521 070e 0B       		.byte	0xb
 2522 070f 7E000000 		.4byte	0x7e
 2523 0713 03       		.uleb128 0x3
 2524 0714 91       		.byte	0x91
 2525 0715 9C66     		.sleb128 -3300
 2526 0717 11       		.uleb128 0x11
 2527 0718 74616200 		.ascii	"tab\000"
 2528 071c 01       		.byte	0x1
 2529 071d 8C       		.byte	0x8c
 2530 071e 10       		.byte	0x10
 2531 071f F1080000 		.4byte	0x8f1
 2532 0723 03       		.uleb128 0x3
 2533 0724 91       		.byte	0x91
 2534 0725 F066     		.sleb128 -3216
 2535 0727 12       		.uleb128 0x12
 2536 0728 970A0000 		.4byte	0xa97
 2537 072c EA050000 		.4byte	.LBI30
 2538 0730 01       		.byte	.LVU173
 2539 0731 EA050000 		.4byte	.LBB30
 2540 0735 0E000000 		.4byte	.LBE30-.LBB30
 2541 0739 01       		.byte	0x1
 2542 073a EA       		.byte	0xea
 2543 073b 02       		.byte	0x2
 2544 073c 57070000 		.4byte	0x757
 2545 0740 13       		.uleb128 0x13
 2546 0741 BF0A0000 		.4byte	0xabf
 2547 0745 F4050000 		.4byte	.LBI32
 2548 0749 01       		.byte	.LVU176
 2549 074a F4050000 		.4byte	.LBB32
 2550 074e 04000000 		.4byte	.LBE32-.LBB32
 2551 0752 02       		.byte	0x2
 2552 0753 CA02     		.2byte	0x2ca
 2553 0755 01       		.byte	0x1
 2554 0756 00       		.byte	0
 2555 0757 12       		.uleb128 0x12
 2556 0758 AB0A0000 		.4byte	0xaab
 2557 075c F8050000 		.4byte	.LBI34
 2558 0760 01       		.byte	.LVU179
 2559 0761 F8050000 		.4byte	.LBB34
 2560 0765 0C000000 		.4byte	.LBE34-.LBB34
 2561 0769 01       		.byte	0x1
 2562 076a EB       		.byte	0xeb
 2563 076b 02       		.byte	0x2
 2564 076c 87070000 		.4byte	0x787
 2565 0770 13       		.uleb128 0x13
 2566 0771 BF0A0000 		.4byte	0xabf
 2567 0775 00060000 		.4byte	.LBI36
 2568 0779 01       		.byte	.LVU182
 2569 077a 00060000 		.4byte	.LBB36
 2570 077e 04000000 		.4byte	.LBE36-.LBB36
 2571 0782 02       		.byte	0x2
 2572 0783 9C02     		.2byte	0x29c
 2573 0785 01       		.byte	0x1
 2574 0786 00       		.byte	0
 2575 0787 12       		.uleb128 0x12
 2576 0788 B50A0000 		.4byte	0xab5
 2577 078c 04060000 		.4byte	.LBI38
 2578 0790 01       		.byte	.LVU185
 2579 0791 04060000 		.4byte	.LBB38
 2580 0795 0A000000 		.4byte	.LBE38-.LBB38
 2581 0799 01       		.byte	0x1
 2582 079a EC       		.byte	0xec
 2583 079b 02       		.byte	0x2
 2584 079c B7070000 		.4byte	0x7b7
 2585 07a0 13       		.uleb128 0x13
 2586 07a1 BF0A0000 		.4byte	0xabf
 2587 07a5 0A060000 		.4byte	.LBI40
 2588 07a9 01       		.byte	.LVU188
 2589 07aa 0A060000 		.4byte	.LBB40
 2590 07ae 04000000 		.4byte	.LBE40-.LBB40
 2591 07b2 02       		.byte	0x2
 2592 07b3 9B02     		.2byte	0x29b
 2593 07b5 01       		.byte	0x1
 2594 07b6 00       		.byte	0
 2595 07b7 14       		.uleb128 0x14
 2596 07b8 14000000 		.4byte	.LVL15
 2597 07bc C90A0000 		.4byte	0xac9
 2598 07c0 DB070000 		.4byte	0x7db
 2599 07c4 15       		.uleb128 0x15
 2600 07c5 01       		.uleb128 0x1
 2601 07c6 50       		.byte	0x50
 2602 07c7 03       		.uleb128 0x3
 2603 07c8 91       		.byte	0x91
 2604 07c9 A066     		.sleb128 -3296
 2605 07cb 15       		.uleb128 0x15
 2606 07cc 01       		.uleb128 0x1
 2607 07cd 51       		.byte	0x51
 2608 07ce 05       		.uleb128 0x5
 2609 07cf 03       		.byte	0x3
 2610 07d0 00000000 		.4byte	.LANCHOR2
 2611 07d4 15       		.uleb128 0x15
 2612 07d5 01       		.uleb128 0x1
 2613 07d6 52       		.byte	0x52
 2614 07d7 02       		.uleb128 0x2
 2615 07d8 08       		.byte	0x8
 2616 07d9 50       		.byte	0x50
 2617 07da 00       		.byte	0
 2618 07db 14       		.uleb128 0x14
 2619 07dc 24000000 		.4byte	.LVL16
 2620 07e0 D40A0000 		.4byte	0xad4
 2621 07e4 FB070000 		.4byte	0x7fb
 2622 07e8 15       		.uleb128 0x15
 2623 07e9 01       		.uleb128 0x1
 2624 07ea 50       		.byte	0x50
 2625 07eb 02       		.uleb128 0x2
 2626 07ec 74       		.byte	0x74
 2627 07ed 00       		.sleb128 0
 2628 07ee 15       		.uleb128 0x15
 2629 07ef 01       		.uleb128 0x1
 2630 07f0 51       		.byte	0x51
 2631 07f1 01       		.uleb128 0x1
 2632 07f2 30       		.byte	0x30
 2633 07f3 15       		.uleb128 0x15
 2634 07f4 01       		.uleb128 0x1
 2635 07f5 52       		.byte	0x52
 2636 07f6 03       		.uleb128 0x3
 2637 07f7 0A       		.byte	0xa
 2638 07f8 800C     		.2byte	0xc80
 2639 07fa 00       		.byte	0
 2640 07fb 14       		.uleb128 0x14
 2641 07fc EA050000 		.4byte	.LVL17
 2642 0800 DF0A0000 		.4byte	0xadf
 2643 0804 12080000 		.4byte	0x812
 2644 0808 15       		.uleb128 0x15
 2645 0809 01       		.uleb128 0x1
 2646 080a 50       		.byte	0x50
 2647 080b 05       		.uleb128 0x5
 2648 080c 03       		.byte	0x3
 2649 080d 00000000 		.4byte	.LC1
 2650 0811 00       		.byte	0
 2651 0812 14       		.uleb128 0x14
 2652 0813 16060000 		.4byte	.LVL18
 2653 0817 EB0A0000 		.4byte	0xaeb
 2654 081b 27080000 		.4byte	0x827
 2655 081f 15       		.uleb128 0x15
 2656 0820 01       		.uleb128 0x1
 2657 0821 50       		.byte	0x50
 2658 0822 03       		.uleb128 0x3
 2659 0823 0A       		.byte	0xa
 2660 0824 E803     		.2byte	0x3e8
 2661 0826 00       		.byte	0
 2662 0827 16       		.uleb128 0x16
 2663 0828 1A060000 		.4byte	.LVL19
 2664 082c 730A0000 		.4byte	0xa73
 2665 0830 16       		.uleb128 0x16
 2666 0831 1E060000 		.4byte	.LVL20
 2667 0835 850A0000 		.4byte	0xa85
 2668 0839 16       		.uleb128 0x16
 2669 083a 22060000 		.4byte	.LVL21
 2670 083e E5090000 		.4byte	0x9e5
 2671 0842 16       		.uleb128 0x16
 2672 0843 26060000 		.4byte	.LVL22
 2673 0847 F70A0000 		.4byte	0xaf7
 2674 084b 16       		.uleb128 0x16
 2675 084c 2A060000 		.4byte	.LVL23
 2676 0850 030B0000 		.4byte	0xb03
 2677 0854 16       		.uleb128 0x16
 2678 0855 2E060000 		.4byte	.LVL24
 2679 0859 0F0B0000 		.4byte	0xb0f
 2680 085d 16       		.uleb128 0x16
 2681 085e 32060000 		.4byte	.LVL25
 2682 0862 1B0B0000 		.4byte	0xb1b
 2683 0866 16       		.uleb128 0x16
 2684 0867 36060000 		.4byte	.LVL26
 2685 086b 270B0000 		.4byte	0xb27
 2686 086f 14       		.uleb128 0x14
 2687 0870 4E060000 		.4byte	.LVL27
 2688 0874 DF0A0000 		.4byte	0xadf
 2689 0878 86080000 		.4byte	0x886
 2690 087c 15       		.uleb128 0x15
 2691 087d 01       		.uleb128 0x1
 2692 087e 50       		.byte	0x50
 2693 087f 05       		.uleb128 0x5
 2694 0880 03       		.byte	0x3
 2695 0881 14000000 		.4byte	.LC2
 2696 0885 00       		.byte	0
 2697 0886 16       		.uleb128 0x16
 2698 0887 6A060000 		.4byte	.LVL28
 2699 088b 07090000 		.4byte	0x907
 2700 088f 14       		.uleb128 0x14
 2701 0890 BC060000 		.4byte	.LVL29
 2702 0894 4F090000 		.4byte	0x94f
 2703 0898 A4080000 		.4byte	0x8a4
 2704 089c 15       		.uleb128 0x15
 2705 089d 01       		.uleb128 0x1
 2706 089e 50       		.byte	0x50
 2707 089f 03       		.uleb128 0x3
 2708 08a0 91       		.byte	0x91
 2709 08a1 9C66     		.sleb128 -3300
 2710 08a3 00       		.byte	0
 2711 08a4 16       		.uleb128 0x16
 2712 08a5 2A070000 		.4byte	.LVL30
 2713 08a9 89090000 		.4byte	0x989
 2714 08ad 14       		.uleb128 0x14
 2715 08ae 84070000 		.4byte	.LVL31
 2716 08b2 DF0A0000 		.4byte	0xadf
 2717 08b6 D1080000 		.4byte	0x8d1
 2718 08ba 15       		.uleb128 0x15
 2719 08bb 01       		.uleb128 0x1
 2720 08bc 50       		.byte	0x50
 2721 08bd 05       		.uleb128 0x5
 2722 08be 03       		.byte	0x3
 2723 08bf 2B000000 		.4byte	.LC3
 2724 08c3 15       		.uleb128 0x15
 2725 08c4 01       		.uleb128 0x1
 2726 08c5 53       		.byte	0x53
 2727 08c6 02       		.uleb128 0x2
 2728 08c7 7A       		.byte	0x7a
 2729 08c8 00       		.sleb128 0
 2730 08c9 15       		.uleb128 0x15
 2731 08ca 02       		.uleb128 0x2
 2732 08cb 7D       		.byte	0x7d
 2733 08cc 0C       		.sleb128 12
 2734 08cd 02       		.uleb128 0x2
 2735 08ce 78       		.byte	0x78
 2736 08cf 00       		.sleb128 0
 2737 08d0 00       		.byte	0
 2738 08d1 16       		.uleb128 0x16
 2739 08d2 F2070000 		.4byte	.LVL32
 2740 08d6 89090000 		.4byte	0x989
 2741 08da 00       		.byte	0
 2742 08db 17       		.uleb128 0x17
 2743 08dc 77000000 		.4byte	0x77
 2744 08e0 F1080000 		.4byte	0x8f1
 2745 08e4 18       		.uleb128 0x18
 2746 08e5 70000000 		.4byte	0x70
 2747 08e9 03       		.byte	0x3
 2748 08ea 18       		.uleb128 0x18
 2749 08eb 70000000 		.4byte	0x70
 2750 08ef 13       		.byte	0x13
 2751 08f0 00       		.byte	0
 2752 08f1 17       		.uleb128 0x17
 2753 08f2 7E000000 		.4byte	0x7e
 2754 08f6 07090000 		.4byte	0x907
 2755 08fa 18       		.uleb128 0x18
 2756 08fb 70000000 		.4byte	0x70
 2757 08ff 07       		.byte	0x7
 2758 0900 18       		.uleb128 0x18
 2759 0901 70000000 		.4byte	0x70
 2760 0905 63       		.byte	0x63
 2761 0906 00       		.byte	0
 2762 0907 19       		.uleb128 0x19
 2763 0908 49030000 		.4byte	.LASF102
 2764 090c 01       		.byte	0x1
 2765 090d 7C       		.byte	0x7c
 2766 090e 06       		.byte	0x6
 2767 090f E8010000 		.4byte	.LFB408
 2768 0913 1C000000 		.4byte	.LFE408-.LFB408
 2769 0917 01       		.uleb128 0x1
 2770 0918 9C       		.byte	0x9c
 2771 0919 19       		.uleb128 0x19
 2772 091a 12060000 		.4byte	.LASF103
 2773 091e 01       		.byte	0x1
 2774 091f 75       		.byte	0x75
 2775 0920 21       		.byte	0x21
 2776 0921 B8010000 		.4byte	.LFB407
 2777 0925 30000000 		.4byte	.LFE407-.LFB407
 2778 0929 01       		.uleb128 0x1
 2779 092a 9C       		.byte	0x9c
 2780 092b 19       		.uleb128 0x19
 2781 092c CD050000 		.4byte	.LASF104
 2782 0930 01       		.byte	0x1
 2783 0931 6B       		.byte	0x6b
 2784 0932 22       		.byte	0x22
 2785 0933 70010000 		.4byte	.LFB406
 2786 0937 48000000 		.4byte	.LFE406-.LFB406
 2787 093b 01       		.uleb128 0x1
 2788 093c 9C       		.byte	0x9c
 2789 093d 19       		.uleb128 0x19
 2790 093e 04050000 		.4byte	.LASF105
 2791 0942 01       		.byte	0x1
 2792 0943 59       		.byte	0x59
 2793 0944 21       		.byte	0x21
 2794 0945 D4000000 		.4byte	.LFB405
 2795 0949 9C000000 		.4byte	.LFE405-.LFB405
 2796 094d 01       		.uleb128 0x1
 2797 094e 9C       		.byte	0x9c
 2798 094f 1A       		.uleb128 0x1a
 2799 0950 4E000000 		.4byte	.LASF107
 2800 0954 01       		.byte	0x1
 2801 0955 51       		.byte	0x51
 2802 0956 06       		.byte	0x6
 2803 0957 C0000000 		.4byte	.LFB404
 2804 095b 14000000 		.4byte	.LFE404-.LFB404
 2805 095f 01       		.uleb128 0x1
 2806 0960 9C       		.byte	0x9c
 2807 0961 83090000 		.4byte	0x983
 2808 0965 1B       		.uleb128 0x1b
 2809 0966 76616C00 		.ascii	"val\000"
 2810 096a 01       		.byte	0x1
 2811 096b 51       		.byte	0x51
 2812 096c 25       		.byte	0x25
 2813 096d 83090000 		.4byte	0x983
 2814 0971 06000000 		.4byte	.LLST3
 2815 0975 00000000 		.4byte	.LVUS3
 2816 0979 16       		.uleb128 0x16
 2817 097a CA000000 		.4byte	.LVL13
 2818 097e 330B0000 		.4byte	0xb33
 2819 0982 00       		.byte	0
 2820 0983 1C       		.uleb128 0x1c
 2821 0984 04       		.byte	0x4
 2822 0985 7E000000 		.4byte	0x7e
 2823 0989 1A       		.uleb128 0x1a
 2824 098a B8020000 		.4byte	.LASF108
 2825 098e 01       		.byte	0x1
 2826 098f 44       		.byte	0x44
 2827 0990 06       		.byte	0x6
 2828 0991 8C000000 		.4byte	.LFB403
 2829 0995 34000000 		.4byte	.LFE403-.LFB403
 2830 0999 01       		.uleb128 0x1
 2831 099a 9C       		.byte	0x9c
 2832 099b E5090000 		.4byte	0x9e5
 2833 099f 1D       		.uleb128 0x1d
 2834 09a0 EF030000 		.4byte	.LASF109
 2835 09a4 01       		.byte	0x1
 2836 09a5 44       		.byte	0x44
 2837 09a6 19       		.byte	0x19
 2838 09a7 7E000000 		.4byte	0x7e
 2839 09ab 38000000 		.4byte	.LLST0
 2840 09af 32000000 		.4byte	.LVUS0
 2841 09b3 1E       		.uleb128 0x1e
 2842 09b4 40010000 		.4byte	.LASF110
 2843 09b8 01       		.byte	0x1
 2844 09b9 45       		.byte	0x45
 2845 09ba 0B       		.byte	0xb
 2846 09bb 7E000000 		.4byte	0x7e
 2847 09bf 6C000000 		.4byte	.LLST1
 2848 09c3 64000000 		.4byte	.LVUS1
 2849 09c7 1E       		.uleb128 0x1e
 2850 09c8 50030000 		.4byte	.LASF111
 2851 09cc 01       		.byte	0x1
 2852 09cd 47       		.byte	0x47
 2853 09ce 0B       		.byte	0xb
 2854 09cf 7E000000 		.4byte	0x7e
 2855 09d3 E1000000 		.4byte	.LLST2
 2856 09d7 DD000000 		.4byte	.LVUS2
 2857 09db 16       		.uleb128 0x16
 2858 09dc 94000000 		.4byte	.LVL6
 2859 09e0 3F0B0000 		.4byte	0xb3f
 2860 09e4 00       		.byte	0
 2861 09e5 1F       		.uleb128 0x1f
 2862 09e6 7A020000 		.4byte	.LASF138
 2863 09ea 01       		.byte	0x1
 2864 09eb 38       		.byte	0x38
 2865 09ec 06       		.byte	0x6
 2866 09ed 48000000 		.4byte	.LFB402
 2867 09f1 44000000 		.4byte	.LFE402-.LFB402
 2868 09f5 01       		.uleb128 0x1
 2869 09f6 9C       		.byte	0x9c
 2870 09f7 730A0000 		.4byte	0xa73
 2871 09fb 20       		.uleb128 0x20
 2872 09fc 8B000000 		.4byte	.LASF112
 2873 0a00 01       		.byte	0x1
 2874 0a01 39       		.byte	0x39
 2875 0a02 0B       		.byte	0xb
 2876 0a03 7E000000 		.4byte	0x7e
 2877 0a07 07       		.byte	0x7
 2878 0a08 12       		.uleb128 0x12
 2879 0a09 A10A0000 		.4byte	0xaa1
 2880 0a0d 54000000 		.4byte	.LBI26
 2881 0a11 01       		.byte	.LVU27
 2882 0a12 54000000 		.4byte	.LBB26
 2883 0a16 0E000000 		.4byte	.LBE26-.LBB26
 2884 0a1a 01       		.byte	0x1
 2885 0a1b 3B       		.byte	0x3b
 2886 0a1c 02       		.byte	0x2
 2887 0a1d 380A0000 		.4byte	0xa38
 2888 0a21 13       		.uleb128 0x13
 2889 0a22 BF0A0000 		.4byte	0xabf
 2890 0a26 5E000000 		.4byte	.LBI28
 2891 0a2a 01       		.byte	.LVU30
 2892 0a2b 5E000000 		.4byte	.LBB28
 2893 0a2f 04000000 		.4byte	.LBE28-.LBB28
 2894 0a33 02       		.byte	0x2
 2895 0a34 A902     		.2byte	0x2a9
 2896 0a36 01       		.byte	0x1
 2897 0a37 00       		.byte	0
 2898 0a38 14       		.uleb128 0x14
 2899 0a39 68000000 		.4byte	.LVL1
 2900 0a3d 4B0B0000 		.4byte	0xb4b
 2901 0a41 4B0A0000 		.4byte	0xa4b
 2902 0a45 15       		.uleb128 0x15
 2903 0a46 01       		.uleb128 0x1
 2904 0a47 50       		.byte	0x50
 2905 0a48 01       		.uleb128 0x1
 2906 0a49 31       		.byte	0x31
 2907 0a4a 00       		.byte	0
 2908 0a4b 14       		.uleb128 0x14
 2909 0a4c 72000000 		.4byte	.LVL2
 2910 0a50 570B0000 		.4byte	0xb57
 2911 0a54 630A0000 		.4byte	0xa63
 2912 0a58 15       		.uleb128 0x15
 2913 0a59 01       		.uleb128 0x1
 2914 0a5a 51       		.byte	0x51
 2915 0a5b 01       		.uleb128 0x1
 2916 0a5c 38       		.byte	0x38
 2917 0a5d 15       		.uleb128 0x15
 2918 0a5e 01       		.uleb128 0x1
 2919 0a5f 52       		.byte	0x52
 2920 0a60 01       		.uleb128 0x1
 2921 0a61 37       		.byte	0x37
 2922 0a62 00       		.byte	0
 2923 0a63 21       		.uleb128 0x21
 2924 0a64 7E000000 		.4byte	.LVL3
 2925 0a68 630B0000 		.4byte	0xb63
 2926 0a6c 15       		.uleb128 0x15
 2927 0a6d 01       		.uleb128 0x1
 2928 0a6e 51       		.byte	0x51
 2929 0a6f 01       		.uleb128 0x1
 2930 0a70 38       		.byte	0x38
 2931 0a71 00       		.byte	0
 2932 0a72 00       		.byte	0
 2933 0a73 19       		.uleb128 0x19
 2934 0a74 90000000 		.4byte	.LASF113
 2935 0a78 01       		.byte	0x1
 2936 0a79 32       		.byte	0x32
 2937 0a7a 06       		.byte	0x6
 2938 0a7b 30000000 		.4byte	.LFB401
 2939 0a7f 18000000 		.4byte	.LFE401-.LFB401
 2940 0a83 01       		.uleb128 0x1
 2941 0a84 9C       		.byte	0x9c
 2942 0a85 19       		.uleb128 0x19
 2943 0a86 F0020000 		.4byte	.LASF114
 2944 0a8a 01       		.byte	0x1
 2945 0a8b 29       		.byte	0x29
 2946 0a8c 06       		.byte	0x6
 2947 0a8d 00000000 		.4byte	.LFB400
 2948 0a91 30000000 		.4byte	.LFE400-.LFB400
 2949 0a95 01       		.uleb128 0x1
 2950 0a96 9C       		.byte	0x9c
 2951 0a97 22       		.uleb128 0x22
 2952 0a98 93010000 		.4byte	.LASF115
 2953 0a9c 02       		.byte	0x2
 2954 0a9d CA02     		.2byte	0x2ca
 2955 0a9f 01       		.byte	0x1
 2956 0aa0 03       		.byte	0x3
 2957 0aa1 22       		.uleb128 0x22
 2958 0aa2 60040000 		.4byte	.LASF116
 2959 0aa6 02       		.byte	0x2
 2960 0aa7 A902     		.2byte	0x2a9
 2961 0aa9 01       		.byte	0x1
 2962 0aaa 03       		.byte	0x3
 2963 0aab 22       		.uleb128 0x22
 2964 0aac 5D030000 		.4byte	.LASF117
 2965 0ab0 02       		.byte	0x2
 2966 0ab1 9C02     		.2byte	0x29c
 2967 0ab3 01       		.byte	0x1
 2968 0ab4 03       		.byte	0x3
 2969 0ab5 22       		.uleb128 0x22
 2970 0ab6 6A030000 		.4byte	.LASF118
 2971 0aba 02       		.byte	0x2
 2972 0abb 9B02     		.2byte	0x29b
 2973 0abd 01       		.byte	0x1
 2974 0abe 03       		.byte	0x3
 2975 0abf 23       		.uleb128 0x23
 2976 0ac0 43030000 		.4byte	.LASF139
 2977 0ac4 03       		.byte	0x3
 2978 0ac5 AA01     		.2byte	0x1aa
 2979 0ac7 35       		.byte	0x35
 2980 0ac8 03       		.byte	0x3
 2981 0ac9 24       		.uleb128 0x24
 2982 0aca 74010000 		.4byte	.LASF119
 2983 0ace F3040000 		.4byte	.LASF121
 2984 0ad2 06       		.byte	0x6
 2985 0ad3 00       		.byte	0
 2986 0ad4 24       		.uleb128 0x24
 2987 0ad5 98040000 		.4byte	.LASF120
 2988 0ad9 63000000 		.4byte	.LASF122
 2989 0add 06       		.byte	0x6
 2990 0ade 00       		.byte	0
 2991 0adf 25       		.uleb128 0x25
 2992 0ae0 00000000 		.4byte	.LASF123
 2993 0ae4 00000000 		.4byte	.LASF123
 2994 0ae8 07       		.byte	0x7
 2995 0ae9 C8       		.byte	0xc8
 2996 0aea 05       		.byte	0x5
 2997 0aeb 25       		.uleb128 0x25
 2998 0aec 35000000 		.4byte	.LASF124
 2999 0af0 35000000 		.4byte	.LASF124
 3000 0af4 08       		.byte	0x8
 3001 0af5 02       		.byte	0x2
 3002 0af6 06       		.byte	0x6
 3003 0af7 25       		.uleb128 0x25
 3004 0af8 19050000 		.4byte	.LASF125
 3005 0afc 19050000 		.4byte	.LASF125
 3006 0b00 09       		.byte	0x9
 3007 0b01 04       		.byte	0x4
 3008 0b02 06       		.byte	0x6
 3009 0b03 25       		.uleb128 0x25
 3010 0b04 80010000 		.4byte	.LASF126
 3011 0b08 80010000 		.4byte	.LASF126
 3012 0b0c 09       		.byte	0x9
 3013 0b0d 03       		.byte	0x3
 3014 0b0e 06       		.byte	0x6
 3015 0b0f 25       		.uleb128 0x25
 3016 0b10 46060000 		.4byte	.LASF127
 3017 0b14 46060000 		.4byte	.LASF127
 3018 0b18 0A       		.byte	0xa
 3019 0b19 04       		.byte	0x4
 3020 0b1a 06       		.byte	0x6
 3021 0b1b 25       		.uleb128 0x25
 3022 0b1c DF030000 		.4byte	.LASF128
 3023 0b20 DF030000 		.4byte	.LASF128
 3024 0b24 09       		.byte	0x9
 3025 0b25 05       		.byte	0x5
 3026 0b26 06       		.byte	0x6
 3027 0b27 25       		.uleb128 0x25
 3028 0b28 F7030000 		.4byte	.LASF129
 3029 0b2c F7030000 		.4byte	.LASF129
 3030 0b30 09       		.byte	0x9
 3031 0b31 06       		.byte	0x6
 3032 0b32 06       		.byte	0x6
 3033 0b33 25       		.uleb128 0x25
 3034 0b34 1E030000 		.4byte	.LASF130
 3035 0b38 1E030000 		.4byte	.LASF130
 3036 0b3c 0B       		.byte	0xb
 3037 0b3d 12       		.byte	0x12
 3038 0b3e 0A       		.byte	0xa
 3039 0b3f 25       		.uleb128 0x25
 3040 0b40 15010000 		.4byte	.LASF131
 3041 0b44 15010000 		.4byte	.LASF131
 3042 0b48 0C       		.byte	0xc
 3043 0b49 1E       		.byte	0x1e
 3044 0b4a 0A       		.byte	0xa
 3045 0b4b 25       		.uleb128 0x25
 3046 0b4c 96020000 		.4byte	.LASF132
 3047 0b50 96020000 		.4byte	.LASF132
 3048 0b54 0B       		.byte	0xb
 3049 0b55 03       		.byte	0x3
 3050 0b56 06       		.byte	0x6
 3051 0b57 25       		.uleb128 0x25
 3052 0b58 7D030000 		.4byte	.LASF133
 3053 0b5c 7D030000 		.4byte	.LASF133
 3054 0b60 0B       		.byte	0xb
 3055 0b61 0D       		.byte	0xd
 3056 0b62 06       		.byte	0x6
 3057 0b63 25       		.uleb128 0x25
 3058 0b64 93030000 		.4byte	.LASF134
 3059 0b68 93030000 		.4byte	.LASF134
 3060 0b6c 0B       		.byte	0xb
 3061 0b6d 10       		.byte	0x10
 3062 0b6e 06       		.byte	0x6
 3063 0b6f 00       		.byte	0
 3064              		.section	.debug_abbrev,"",%progbits
 3065              	.Ldebug_abbrev0:
 3066 0000 01       		.uleb128 0x1
 3067 0001 11       		.uleb128 0x11
 3068 0002 01       		.byte	0x1
 3069 0003 25       		.uleb128 0x25
 3070 0004 0E       		.uleb128 0xe
 3071 0005 13       		.uleb128 0x13
 3072 0006 0B       		.uleb128 0xb
 3073 0007 03       		.uleb128 0x3
 3074 0008 0E       		.uleb128 0xe
 3075 0009 1B       		.uleb128 0x1b
 3076 000a 0E       		.uleb128 0xe
 3077 000b 55       		.uleb128 0x55
 3078 000c 17       		.uleb128 0x17
 3079 000d 11       		.uleb128 0x11
 3080 000e 01       		.uleb128 0x1
 3081 000f 10       		.uleb128 0x10
 3082 0010 17       		.uleb128 0x17
 3083 0011 00       		.byte	0
 3084 0012 00       		.byte	0
 3085 0013 02       		.uleb128 0x2
 3086 0014 24       		.uleb128 0x24
 3087 0015 00       		.byte	0
 3088 0016 0B       		.uleb128 0xb
 3089 0017 0B       		.uleb128 0xb
 3090 0018 3E       		.uleb128 0x3e
 3091 0019 0B       		.uleb128 0xb
 3092 001a 03       		.uleb128 0x3
 3093 001b 0E       		.uleb128 0xe
 3094 001c 00       		.byte	0
 3095 001d 00       		.byte	0
 3096 001e 03       		.uleb128 0x3
 3097 001f 16       		.uleb128 0x16
 3098 0020 00       		.byte	0
 3099 0021 03       		.uleb128 0x3
 3100 0022 0E       		.uleb128 0xe
 3101 0023 3A       		.uleb128 0x3a
 3102 0024 0B       		.uleb128 0xb
 3103 0025 3B       		.uleb128 0x3b
 3104 0026 0B       		.uleb128 0xb
 3105 0027 39       		.uleb128 0x39
 3106 0028 0B       		.uleb128 0xb
 3107 0029 49       		.uleb128 0x49
 3108 002a 13       		.uleb128 0x13
 3109 002b 00       		.byte	0
 3110 002c 00       		.byte	0
 3111 002d 04       		.uleb128 0x4
 3112 002e 24       		.uleb128 0x24
 3113 002f 00       		.byte	0
 3114 0030 0B       		.uleb128 0xb
 3115 0031 0B       		.uleb128 0xb
 3116 0032 3E       		.uleb128 0x3e
 3117 0033 0B       		.uleb128 0xb
 3118 0034 03       		.uleb128 0x3
 3119 0035 08       		.uleb128 0x8
 3120 0036 00       		.byte	0
 3121 0037 00       		.byte	0
 3122 0038 05       		.uleb128 0x5
 3123 0039 35       		.uleb128 0x35
 3124 003a 00       		.byte	0
 3125 003b 49       		.uleb128 0x49
 3126 003c 13       		.uleb128 0x13
 3127 003d 00       		.byte	0
 3128 003e 00       		.byte	0
 3129 003f 06       		.uleb128 0x6
 3130 0040 13       		.uleb128 0x13
 3131 0041 01       		.byte	0x1
 3132 0042 03       		.uleb128 0x3
 3133 0043 0E       		.uleb128 0xe
 3134 0044 0B       		.uleb128 0xb
 3135 0045 0B       		.uleb128 0xb
 3136 0046 3A       		.uleb128 0x3a
 3137 0047 0B       		.uleb128 0xb
 3138 0048 3B       		.uleb128 0x3b
 3139 0049 0B       		.uleb128 0xb
 3140 004a 39       		.uleb128 0x39
 3141 004b 0B       		.uleb128 0xb
 3142 004c 01       		.uleb128 0x1
 3143 004d 13       		.uleb128 0x13
 3144 004e 00       		.byte	0
 3145 004f 00       		.byte	0
 3146 0050 07       		.uleb128 0x7
 3147 0051 0D       		.uleb128 0xd
 3148 0052 00       		.byte	0
 3149 0053 03       		.uleb128 0x3
 3150 0054 08       		.uleb128 0x8
 3151 0055 3A       		.uleb128 0x3a
 3152 0056 0B       		.uleb128 0xb
 3153 0057 3B       		.uleb128 0x3b
 3154 0058 0B       		.uleb128 0xb
 3155 0059 39       		.uleb128 0x39
 3156 005a 0B       		.uleb128 0xb
 3157 005b 49       		.uleb128 0x49
 3158 005c 13       		.uleb128 0x13
 3159 005d 38       		.uleb128 0x38
 3160 005e 0B       		.uleb128 0xb
 3161 005f 00       		.byte	0
 3162 0060 00       		.byte	0
 3163 0061 08       		.uleb128 0x8
 3164 0062 0D       		.uleb128 0xd
 3165 0063 00       		.byte	0
 3166 0064 03       		.uleb128 0x3
 3167 0065 0E       		.uleb128 0xe
 3168 0066 3A       		.uleb128 0x3a
 3169 0067 0B       		.uleb128 0xb
 3170 0068 3B       		.uleb128 0x3b
 3171 0069 0B       		.uleb128 0xb
 3172 006a 39       		.uleb128 0x39
 3173 006b 0B       		.uleb128 0xb
 3174 006c 49       		.uleb128 0x49
 3175 006d 13       		.uleb128 0x13
 3176 006e 38       		.uleb128 0x38
 3177 006f 0B       		.uleb128 0xb
 3178 0070 00       		.byte	0
 3179 0071 00       		.byte	0
 3180 0072 09       		.uleb128 0x9
 3181 0073 0D       		.uleb128 0xd
 3182 0074 00       		.byte	0
 3183 0075 03       		.uleb128 0x3
 3184 0076 0E       		.uleb128 0xe
 3185 0077 3A       		.uleb128 0x3a
 3186 0078 0B       		.uleb128 0xb
 3187 0079 3B       		.uleb128 0x3b
 3188 007a 05       		.uleb128 0x5
 3189 007b 39       		.uleb128 0x39
 3190 007c 0B       		.uleb128 0xb
 3191 007d 49       		.uleb128 0x49
 3192 007e 13       		.uleb128 0x13
 3193 007f 38       		.uleb128 0x38
 3194 0080 0B       		.uleb128 0xb
 3195 0081 00       		.byte	0
 3196 0082 00       		.byte	0
 3197 0083 0A       		.uleb128 0xa
 3198 0084 0D       		.uleb128 0xd
 3199 0085 00       		.byte	0
 3200 0086 03       		.uleb128 0x3
 3201 0087 08       		.uleb128 0x8
 3202 0088 3A       		.uleb128 0x3a
 3203 0089 0B       		.uleb128 0xb
 3204 008a 3B       		.uleb128 0x3b
 3205 008b 05       		.uleb128 0x5
 3206 008c 39       		.uleb128 0x39
 3207 008d 0B       		.uleb128 0xb
 3208 008e 49       		.uleb128 0x49
 3209 008f 13       		.uleb128 0x13
 3210 0090 38       		.uleb128 0x38
 3211 0091 0B       		.uleb128 0xb
 3212 0092 00       		.byte	0
 3213 0093 00       		.byte	0
 3214 0094 0B       		.uleb128 0xb
 3215 0095 13       		.uleb128 0x13
 3216 0096 01       		.byte	0x1
 3217 0097 03       		.uleb128 0x3
 3218 0098 0E       		.uleb128 0xe
 3219 0099 0B       		.uleb128 0xb
 3220 009a 0B       		.uleb128 0xb
 3221 009b 3A       		.uleb128 0x3a
 3222 009c 0B       		.uleb128 0xb
 3223 009d 3B       		.uleb128 0x3b
 3224 009e 05       		.uleb128 0x5
 3225 009f 39       		.uleb128 0x39
 3226 00a0 0B       		.uleb128 0xb
 3227 00a1 01       		.uleb128 0x1
 3228 00a2 13       		.uleb128 0x13
 3229 00a3 00       		.byte	0
 3230 00a4 00       		.byte	0
 3231 00a5 0C       		.uleb128 0xc
 3232 00a6 34       		.uleb128 0x34
 3233 00a7 00       		.byte	0
 3234 00a8 03       		.uleb128 0x3
 3235 00a9 08       		.uleb128 0x8
 3236 00aa 3A       		.uleb128 0x3a
 3237 00ab 0B       		.uleb128 0xb
 3238 00ac 3B       		.uleb128 0x3b
 3239 00ad 05       		.uleb128 0x5
 3240 00ae 39       		.uleb128 0x39
 3241 00af 0B       		.uleb128 0xb
 3242 00b0 49       		.uleb128 0x49
 3243 00b1 13       		.uleb128 0x13
 3244 00b2 3F       		.uleb128 0x3f
 3245 00b3 19       		.uleb128 0x19
 3246 00b4 3C       		.uleb128 0x3c
 3247 00b5 19       		.uleb128 0x19
 3248 00b6 00       		.byte	0
 3249 00b7 00       		.byte	0
 3250 00b8 0D       		.uleb128 0xd
 3251 00b9 34       		.uleb128 0x34
 3252 00ba 00       		.byte	0
 3253 00bb 03       		.uleb128 0x3
 3254 00bc 0E       		.uleb128 0xe
 3255 00bd 3A       		.uleb128 0x3a
 3256 00be 0B       		.uleb128 0xb
 3257 00bf 3B       		.uleb128 0x3b
 3258 00c0 05       		.uleb128 0x5
 3259 00c1 39       		.uleb128 0x39
 3260 00c2 0B       		.uleb128 0xb
 3261 00c3 49       		.uleb128 0x49
 3262 00c4 13       		.uleb128 0x13
 3263 00c5 3F       		.uleb128 0x3f
 3264 00c6 19       		.uleb128 0x19
 3265 00c7 3C       		.uleb128 0x3c
 3266 00c8 19       		.uleb128 0x19
 3267 00c9 00       		.byte	0
 3268 00ca 00       		.byte	0
 3269 00cb 0E       		.uleb128 0xe
 3270 00cc 34       		.uleb128 0x34
 3271 00cd 00       		.byte	0
 3272 00ce 03       		.uleb128 0x3
 3273 00cf 0E       		.uleb128 0xe
 3274 00d0 3A       		.uleb128 0x3a
 3275 00d1 0B       		.uleb128 0xb
 3276 00d2 3B       		.uleb128 0x3b
 3277 00d3 0B       		.uleb128 0xb
 3278 00d4 39       		.uleb128 0x39
 3279 00d5 0B       		.uleb128 0xb
 3280 00d6 49       		.uleb128 0x49
 3281 00d7 13       		.uleb128 0x13
 3282 00d8 3F       		.uleb128 0x3f
 3283 00d9 19       		.uleb128 0x19
 3284 00da 02       		.uleb128 0x2
 3285 00db 18       		.uleb128 0x18
 3286 00dc 00       		.byte	0
 3287 00dd 00       		.byte	0
 3288 00de 0F       		.uleb128 0xf
 3289 00df 34       		.uleb128 0x34
 3290 00e0 00       		.byte	0
 3291 00e1 03       		.uleb128 0x3
 3292 00e2 08       		.uleb128 0x8
 3293 00e3 3A       		.uleb128 0x3a
 3294 00e4 0B       		.uleb128 0xb
 3295 00e5 3B       		.uleb128 0x3b
 3296 00e6 0B       		.uleb128 0xb
 3297 00e7 39       		.uleb128 0x39
 3298 00e8 0B       		.uleb128 0xb
 3299 00e9 49       		.uleb128 0x49
 3300 00ea 13       		.uleb128 0x13
 3301 00eb 3F       		.uleb128 0x3f
 3302 00ec 19       		.uleb128 0x19
 3303 00ed 02       		.uleb128 0x2
 3304 00ee 18       		.uleb128 0x18
 3305 00ef 00       		.byte	0
 3306 00f0 00       		.byte	0
 3307 00f1 10       		.uleb128 0x10
 3308 00f2 2E       		.uleb128 0x2e
 3309 00f3 01       		.byte	0x1
 3310 00f4 3F       		.uleb128 0x3f
 3311 00f5 19       		.uleb128 0x19
 3312 00f6 03       		.uleb128 0x3
 3313 00f7 0E       		.uleb128 0xe
 3314 00f8 3A       		.uleb128 0x3a
 3315 00f9 0B       		.uleb128 0xb
 3316 00fa 3B       		.uleb128 0x3b
 3317 00fb 0B       		.uleb128 0xb
 3318 00fc 39       		.uleb128 0x39
 3319 00fd 0B       		.uleb128 0xb
 3320 00fe 49       		.uleb128 0x49
 3321 00ff 13       		.uleb128 0x13
 3322 0100 11       		.uleb128 0x11
 3323 0101 01       		.uleb128 0x1
 3324 0102 12       		.uleb128 0x12
 3325 0103 06       		.uleb128 0x6
 3326 0104 40       		.uleb128 0x40
 3327 0105 18       		.uleb128 0x18
 3328 0106 9742     		.uleb128 0x2117
 3329 0108 19       		.uleb128 0x19
 3330 0109 01       		.uleb128 0x1
 3331 010a 13       		.uleb128 0x13
 3332 010b 00       		.byte	0
 3333 010c 00       		.byte	0
 3334 010d 11       		.uleb128 0x11
 3335 010e 34       		.uleb128 0x34
 3336 010f 00       		.byte	0
 3337 0110 03       		.uleb128 0x3
 3338 0111 08       		.uleb128 0x8
 3339 0112 3A       		.uleb128 0x3a
 3340 0113 0B       		.uleb128 0xb
 3341 0114 3B       		.uleb128 0x3b
 3342 0115 0B       		.uleb128 0xb
 3343 0116 39       		.uleb128 0x39
 3344 0117 0B       		.uleb128 0xb
 3345 0118 49       		.uleb128 0x49
 3346 0119 13       		.uleb128 0x13
 3347 011a 02       		.uleb128 0x2
 3348 011b 18       		.uleb128 0x18
 3349 011c 00       		.byte	0
 3350 011d 00       		.byte	0
 3351 011e 12       		.uleb128 0x12
 3352 011f 1D       		.uleb128 0x1d
 3353 0120 01       		.byte	0x1
 3354 0121 31       		.uleb128 0x31
 3355 0122 13       		.uleb128 0x13
 3356 0123 52       		.uleb128 0x52
 3357 0124 01       		.uleb128 0x1
 3358 0125 B842     		.uleb128 0x2138
 3359 0127 0B       		.uleb128 0xb
 3360 0128 11       		.uleb128 0x11
 3361 0129 01       		.uleb128 0x1
 3362 012a 12       		.uleb128 0x12
 3363 012b 06       		.uleb128 0x6
 3364 012c 58       		.uleb128 0x58
 3365 012d 0B       		.uleb128 0xb
 3366 012e 59       		.uleb128 0x59
 3367 012f 0B       		.uleb128 0xb
 3368 0130 57       		.uleb128 0x57
 3369 0131 0B       		.uleb128 0xb
 3370 0132 01       		.uleb128 0x1
 3371 0133 13       		.uleb128 0x13
 3372 0134 00       		.byte	0
 3373 0135 00       		.byte	0
 3374 0136 13       		.uleb128 0x13
 3375 0137 1D       		.uleb128 0x1d
 3376 0138 00       		.byte	0
 3377 0139 31       		.uleb128 0x31
 3378 013a 13       		.uleb128 0x13
 3379 013b 52       		.uleb128 0x52
 3380 013c 01       		.uleb128 0x1
 3381 013d B842     		.uleb128 0x2138
 3382 013f 0B       		.uleb128 0xb
 3383 0140 11       		.uleb128 0x11
 3384 0141 01       		.uleb128 0x1
 3385 0142 12       		.uleb128 0x12
 3386 0143 06       		.uleb128 0x6
 3387 0144 58       		.uleb128 0x58
 3388 0145 0B       		.uleb128 0xb
 3389 0146 59       		.uleb128 0x59
 3390 0147 05       		.uleb128 0x5
 3391 0148 57       		.uleb128 0x57
 3392 0149 0B       		.uleb128 0xb
 3393 014a 00       		.byte	0
 3394 014b 00       		.byte	0
 3395 014c 14       		.uleb128 0x14
 3396 014d 898201   		.uleb128 0x4109
 3397 0150 01       		.byte	0x1
 3398 0151 11       		.uleb128 0x11
 3399 0152 01       		.uleb128 0x1
 3400 0153 31       		.uleb128 0x31
 3401 0154 13       		.uleb128 0x13
 3402 0155 01       		.uleb128 0x1
 3403 0156 13       		.uleb128 0x13
 3404 0157 00       		.byte	0
 3405 0158 00       		.byte	0
 3406 0159 15       		.uleb128 0x15
 3407 015a 8A8201   		.uleb128 0x410a
 3408 015d 00       		.byte	0
 3409 015e 02       		.uleb128 0x2
 3410 015f 18       		.uleb128 0x18
 3411 0160 9142     		.uleb128 0x2111
 3412 0162 18       		.uleb128 0x18
 3413 0163 00       		.byte	0
 3414 0164 00       		.byte	0
 3415 0165 16       		.uleb128 0x16
 3416 0166 898201   		.uleb128 0x4109
 3417 0169 00       		.byte	0
 3418 016a 11       		.uleb128 0x11
 3419 016b 01       		.uleb128 0x1
 3420 016c 31       		.uleb128 0x31
 3421 016d 13       		.uleb128 0x13
 3422 016e 00       		.byte	0
 3423 016f 00       		.byte	0
 3424 0170 17       		.uleb128 0x17
 3425 0171 01       		.uleb128 0x1
 3426 0172 01       		.byte	0x1
 3427 0173 49       		.uleb128 0x49
 3428 0174 13       		.uleb128 0x13
 3429 0175 01       		.uleb128 0x1
 3430 0176 13       		.uleb128 0x13
 3431 0177 00       		.byte	0
 3432 0178 00       		.byte	0
 3433 0179 18       		.uleb128 0x18
 3434 017a 21       		.uleb128 0x21
 3435 017b 00       		.byte	0
 3436 017c 49       		.uleb128 0x49
 3437 017d 13       		.uleb128 0x13
 3438 017e 2F       		.uleb128 0x2f
 3439 017f 0B       		.uleb128 0xb
 3440 0180 00       		.byte	0
 3441 0181 00       		.byte	0
 3442 0182 19       		.uleb128 0x19
 3443 0183 2E       		.uleb128 0x2e
 3444 0184 00       		.byte	0
 3445 0185 3F       		.uleb128 0x3f
 3446 0186 19       		.uleb128 0x19
 3447 0187 03       		.uleb128 0x3
 3448 0188 0E       		.uleb128 0xe
 3449 0189 3A       		.uleb128 0x3a
 3450 018a 0B       		.uleb128 0xb
 3451 018b 3B       		.uleb128 0x3b
 3452 018c 0B       		.uleb128 0xb
 3453 018d 39       		.uleb128 0x39
 3454 018e 0B       		.uleb128 0xb
 3455 018f 11       		.uleb128 0x11
 3456 0190 01       		.uleb128 0x1
 3457 0191 12       		.uleb128 0x12
 3458 0192 06       		.uleb128 0x6
 3459 0193 40       		.uleb128 0x40
 3460 0194 18       		.uleb128 0x18
 3461 0195 9742     		.uleb128 0x2117
 3462 0197 19       		.uleb128 0x19
 3463 0198 00       		.byte	0
 3464 0199 00       		.byte	0
 3465 019a 1A       		.uleb128 0x1a
 3466 019b 2E       		.uleb128 0x2e
 3467 019c 01       		.byte	0x1
 3468 019d 3F       		.uleb128 0x3f
 3469 019e 19       		.uleb128 0x19
 3470 019f 03       		.uleb128 0x3
 3471 01a0 0E       		.uleb128 0xe
 3472 01a1 3A       		.uleb128 0x3a
 3473 01a2 0B       		.uleb128 0xb
 3474 01a3 3B       		.uleb128 0x3b
 3475 01a4 0B       		.uleb128 0xb
 3476 01a5 39       		.uleb128 0x39
 3477 01a6 0B       		.uleb128 0xb
 3478 01a7 27       		.uleb128 0x27
 3479 01a8 19       		.uleb128 0x19
 3480 01a9 11       		.uleb128 0x11
 3481 01aa 01       		.uleb128 0x1
 3482 01ab 12       		.uleb128 0x12
 3483 01ac 06       		.uleb128 0x6
 3484 01ad 40       		.uleb128 0x40
 3485 01ae 18       		.uleb128 0x18
 3486 01af 9742     		.uleb128 0x2117
 3487 01b1 19       		.uleb128 0x19
 3488 01b2 01       		.uleb128 0x1
 3489 01b3 13       		.uleb128 0x13
 3490 01b4 00       		.byte	0
 3491 01b5 00       		.byte	0
 3492 01b6 1B       		.uleb128 0x1b
 3493 01b7 05       		.uleb128 0x5
 3494 01b8 00       		.byte	0
 3495 01b9 03       		.uleb128 0x3
 3496 01ba 08       		.uleb128 0x8
 3497 01bb 3A       		.uleb128 0x3a
 3498 01bc 0B       		.uleb128 0xb
 3499 01bd 3B       		.uleb128 0x3b
 3500 01be 0B       		.uleb128 0xb
 3501 01bf 39       		.uleb128 0x39
 3502 01c0 0B       		.uleb128 0xb
 3503 01c1 49       		.uleb128 0x49
 3504 01c2 13       		.uleb128 0x13
 3505 01c3 02       		.uleb128 0x2
 3506 01c4 17       		.uleb128 0x17
 3507 01c5 B742     		.uleb128 0x2137
 3508 01c7 17       		.uleb128 0x17
 3509 01c8 00       		.byte	0
 3510 01c9 00       		.byte	0
 3511 01ca 1C       		.uleb128 0x1c
 3512 01cb 0F       		.uleb128 0xf
 3513 01cc 00       		.byte	0
 3514 01cd 0B       		.uleb128 0xb
 3515 01ce 0B       		.uleb128 0xb
 3516 01cf 49       		.uleb128 0x49
 3517 01d0 13       		.uleb128 0x13
 3518 01d1 00       		.byte	0
 3519 01d2 00       		.byte	0
 3520 01d3 1D       		.uleb128 0x1d
 3521 01d4 05       		.uleb128 0x5
 3522 01d5 00       		.byte	0
 3523 01d6 03       		.uleb128 0x3
 3524 01d7 0E       		.uleb128 0xe
 3525 01d8 3A       		.uleb128 0x3a
 3526 01d9 0B       		.uleb128 0xb
 3527 01da 3B       		.uleb128 0x3b
 3528 01db 0B       		.uleb128 0xb
 3529 01dc 39       		.uleb128 0x39
 3530 01dd 0B       		.uleb128 0xb
 3531 01de 49       		.uleb128 0x49
 3532 01df 13       		.uleb128 0x13
 3533 01e0 02       		.uleb128 0x2
 3534 01e1 17       		.uleb128 0x17
 3535 01e2 B742     		.uleb128 0x2137
 3536 01e4 17       		.uleb128 0x17
 3537 01e5 00       		.byte	0
 3538 01e6 00       		.byte	0
 3539 01e7 1E       		.uleb128 0x1e
 3540 01e8 34       		.uleb128 0x34
 3541 01e9 00       		.byte	0
 3542 01ea 03       		.uleb128 0x3
 3543 01eb 0E       		.uleb128 0xe
 3544 01ec 3A       		.uleb128 0x3a
 3545 01ed 0B       		.uleb128 0xb
 3546 01ee 3B       		.uleb128 0x3b
 3547 01ef 0B       		.uleb128 0xb
 3548 01f0 39       		.uleb128 0x39
 3549 01f1 0B       		.uleb128 0xb
 3550 01f2 49       		.uleb128 0x49
 3551 01f3 13       		.uleb128 0x13
 3552 01f4 02       		.uleb128 0x2
 3553 01f5 17       		.uleb128 0x17
 3554 01f6 B742     		.uleb128 0x2137
 3555 01f8 17       		.uleb128 0x17
 3556 01f9 00       		.byte	0
 3557 01fa 00       		.byte	0
 3558 01fb 1F       		.uleb128 0x1f
 3559 01fc 2E       		.uleb128 0x2e
 3560 01fd 01       		.byte	0x1
 3561 01fe 3F       		.uleb128 0x3f
 3562 01ff 19       		.uleb128 0x19
 3563 0200 03       		.uleb128 0x3
 3564 0201 0E       		.uleb128 0xe
 3565 0202 3A       		.uleb128 0x3a
 3566 0203 0B       		.uleb128 0xb
 3567 0204 3B       		.uleb128 0x3b
 3568 0205 0B       		.uleb128 0xb
 3569 0206 39       		.uleb128 0x39
 3570 0207 0B       		.uleb128 0xb
 3571 0208 11       		.uleb128 0x11
 3572 0209 01       		.uleb128 0x1
 3573 020a 12       		.uleb128 0x12
 3574 020b 06       		.uleb128 0x6
 3575 020c 40       		.uleb128 0x40
 3576 020d 18       		.uleb128 0x18
 3577 020e 9742     		.uleb128 0x2117
 3578 0210 19       		.uleb128 0x19
 3579 0211 01       		.uleb128 0x1
 3580 0212 13       		.uleb128 0x13
 3581 0213 00       		.byte	0
 3582 0214 00       		.byte	0
 3583 0215 20       		.uleb128 0x20
 3584 0216 34       		.uleb128 0x34
 3585 0217 00       		.byte	0
 3586 0218 03       		.uleb128 0x3
 3587 0219 0E       		.uleb128 0xe
 3588 021a 3A       		.uleb128 0x3a
 3589 021b 0B       		.uleb128 0xb
 3590 021c 3B       		.uleb128 0x3b
 3591 021d 0B       		.uleb128 0xb
 3592 021e 39       		.uleb128 0x39
 3593 021f 0B       		.uleb128 0xb
 3594 0220 49       		.uleb128 0x49
 3595 0221 13       		.uleb128 0x13
 3596 0222 1C       		.uleb128 0x1c
 3597 0223 0B       		.uleb128 0xb
 3598 0224 00       		.byte	0
 3599 0225 00       		.byte	0
 3600 0226 21       		.uleb128 0x21
 3601 0227 898201   		.uleb128 0x4109
 3602 022a 01       		.byte	0x1
 3603 022b 11       		.uleb128 0x11
 3604 022c 01       		.uleb128 0x1
 3605 022d 9542     		.uleb128 0x2115
 3606 022f 19       		.uleb128 0x19
 3607 0230 31       		.uleb128 0x31
 3608 0231 13       		.uleb128 0x13
 3609 0232 00       		.byte	0
 3610 0233 00       		.byte	0
 3611 0234 22       		.uleb128 0x22
 3612 0235 2E       		.uleb128 0x2e
 3613 0236 00       		.byte	0
 3614 0237 03       		.uleb128 0x3
 3615 0238 0E       		.uleb128 0xe
 3616 0239 3A       		.uleb128 0x3a
 3617 023a 0B       		.uleb128 0xb
 3618 023b 3B       		.uleb128 0x3b
 3619 023c 05       		.uleb128 0x5
 3620 023d 39       		.uleb128 0x39
 3621 023e 0B       		.uleb128 0xb
 3622 023f 20       		.uleb128 0x20
 3623 0240 0B       		.uleb128 0xb
 3624 0241 00       		.byte	0
 3625 0242 00       		.byte	0
 3626 0243 23       		.uleb128 0x23
 3627 0244 2E       		.uleb128 0x2e
 3628 0245 00       		.byte	0
 3629 0246 03       		.uleb128 0x3
 3630 0247 0E       		.uleb128 0xe
 3631 0248 3A       		.uleb128 0x3a
 3632 0249 0B       		.uleb128 0xb
 3633 024a 3B       		.uleb128 0x3b
 3634 024b 05       		.uleb128 0x5
 3635 024c 39       		.uleb128 0x39
 3636 024d 0B       		.uleb128 0xb
 3637 024e 27       		.uleb128 0x27
 3638 024f 19       		.uleb128 0x19
 3639 0250 20       		.uleb128 0x20
 3640 0251 0B       		.uleb128 0xb
 3641 0252 00       		.byte	0
 3642 0253 00       		.byte	0
 3643 0254 24       		.uleb128 0x24
 3644 0255 2E       		.uleb128 0x2e
 3645 0256 00       		.byte	0
 3646 0257 3F       		.uleb128 0x3f
 3647 0258 19       		.uleb128 0x19
 3648 0259 3C       		.uleb128 0x3c
 3649 025a 19       		.uleb128 0x19
 3650 025b 6E       		.uleb128 0x6e
 3651 025c 0E       		.uleb128 0xe
 3652 025d 03       		.uleb128 0x3
 3653 025e 0E       		.uleb128 0xe
 3654 025f 3A       		.uleb128 0x3a
 3655 0260 0B       		.uleb128 0xb
 3656 0261 3B       		.uleb128 0x3b
 3657 0262 0B       		.uleb128 0xb
 3658 0263 00       		.byte	0
 3659 0264 00       		.byte	0
 3660 0265 25       		.uleb128 0x25
 3661 0266 2E       		.uleb128 0x2e
 3662 0267 00       		.byte	0
 3663 0268 3F       		.uleb128 0x3f
 3664 0269 19       		.uleb128 0x19
 3665 026a 3C       		.uleb128 0x3c
 3666 026b 19       		.uleb128 0x19
 3667 026c 6E       		.uleb128 0x6e
 3668 026d 0E       		.uleb128 0xe
 3669 026e 03       		.uleb128 0x3
 3670 026f 0E       		.uleb128 0xe
 3671 0270 3A       		.uleb128 0x3a
 3672 0271 0B       		.uleb128 0xb
 3673 0272 3B       		.uleb128 0x3b
 3674 0273 0B       		.uleb128 0xb
 3675 0274 39       		.uleb128 0x39
 3676 0275 0B       		.uleb128 0xb
 3677 0276 00       		.byte	0
 3678 0277 00       		.byte	0
 3679 0278 00       		.byte	0
 3680              		.section	.debug_loc,"",%progbits
 3681              	.Ldebug_loc0:
 3682              	.LVUS3:
 3683 0000 00       		.uleb128 0
 3684 0001 00       		.uleb128 .LVU67
 3685 0002 00       		.uleb128 .LVU67
 3686 0003 00       		.uleb128 .LVU70
 3687 0004 00       		.uleb128 .LVU70
 3688 0005 00       		.uleb128 0
 3689              	.LLST3:
 3690 0006 C0000000 		.4byte	.LVL11
 3691 000a C6000000 		.4byte	.LVL12
 3692 000e 0100     		.2byte	0x1
 3693 0010 50       		.byte	0x50
 3694 0011 C6000000 		.4byte	.LVL12
 3695 0015 CE000000 		.4byte	.LVL14
 3696 0019 0100     		.2byte	0x1
 3697 001b 54       		.byte	0x54
 3698 001c CE000000 		.4byte	.LVL14
 3699 0020 D4000000 		.4byte	.LFE404
 3700 0024 0400     		.2byte	0x4
 3701 0026 F3       		.byte	0xf3
 3702 0027 01       		.uleb128 0x1
 3703 0028 50       		.byte	0x50
 3704 0029 9F       		.byte	0x9f
 3705 002a 00000000 		.4byte	0
 3706 002e 00000000 		.4byte	0
 3707              	.LVUS0:
 3708 0032 00       		.uleb128 0
 3709 0033 00       		.uleb128 .LVU44
 3710 0034 00       		.uleb128 .LVU44
 3711 0035 00       		.uleb128 .LVU49
 3712 0036 00       		.uleb128 .LVU49
 3713 0037 00       		.uleb128 0
 3714              	.LLST0:
 3715 0038 8C000000 		.4byte	.LVL4
 3716 003c 93000000 		.4byte	.LVL6-1
 3717 0040 0100     		.2byte	0x1
 3718 0042 50       		.byte	0x50
 3719 0043 93000000 		.4byte	.LVL6-1
 3720 0047 A2000000 		.4byte	.LVL7
 3721 004b 0100     		.2byte	0x1
 3722 004d 54       		.byte	0x54
 3723 004e A2000000 		.4byte	.LVL7
 3724 0052 C0000000 		.4byte	.LFE403
 3725 0056 0400     		.2byte	0x4
 3726 0058 F3       		.byte	0xf3
 3727 0059 01       		.uleb128 0x1
 3728 005a 50       		.byte	0x50
 3729 005b 9F       		.byte	0x9f
 3730 005c 00000000 		.4byte	0
 3731 0060 00000000 		.4byte	0
 3732              	.LVUS1:
 3733 0064 00       		.uleb128 .LVU41
 3734 0065 01       		.uleb128 .LVU42
 3735 0066 01       		.uleb128 .LVU42
 3736 0067 00       		.uleb128 .LVU44
 3737 0068 00       		.uleb128 .LVU44
 3738 0069 00       		.uleb128 .LVU49
 3739 006a 00       		.uleb128 .LVU49
 3740 006b 00       		.uleb128 0
 3741              	.LLST1:
 3742 006c 90000000 		.4byte	.LVL5
 3743 0070 90000000 		.4byte	.LVL5
 3744 0074 0100     		.2byte	0x1
 3745 0076 50       		.byte	0x50
 3746 0077 90000000 		.4byte	.LVL5
 3747 007b 93000000 		.4byte	.LVL6-1
 3748 007f 1500     		.2byte	0x15
 3749 0081 70       		.byte	0x70
 3750 0082 00       		.sleb128 0
 3751 0083 12       		.byte	0x12
 3752 0084 40       		.byte	0x40
 3753 0085 4B       		.byte	0x4b
 3754 0086 24       		.byte	0x24
 3755 0087 22       		.byte	0x22
 3756 0088 31       		.byte	0x31
 3757 0089 16       		.byte	0x16
 3758 008a 14       		.byte	0x14
 3759 008b 40       		.byte	0x40
 3760 008c 4B       		.byte	0x4b
 3761 008d 24       		.byte	0x24
 3762 008e 22       		.byte	0x22
 3763 008f 2B       		.byte	0x2b
 3764 0090 28       		.byte	0x28
 3765 0091 0100     		.2byte	0x1
 3766 0093 16       		.byte	0x16
 3767 0094 13       		.byte	0x13
 3768 0095 9F       		.byte	0x9f
 3769 0096 93000000 		.4byte	.LVL6-1
 3770 009a A2000000 		.4byte	.LVL7
 3771 009e 1500     		.2byte	0x15
 3772 00a0 74       		.byte	0x74
 3773 00a1 00       		.sleb128 0
 3774 00a2 12       		.byte	0x12
 3775 00a3 40       		.byte	0x40
 3776 00a4 4B       		.byte	0x4b
 3777 00a5 24       		.byte	0x24
 3778 00a6 22       		.byte	0x22
 3779 00a7 31       		.byte	0x31
 3780 00a8 16       		.byte	0x16
 3781 00a9 14       		.byte	0x14
 3782 00aa 40       		.byte	0x40
 3783 00ab 4B       		.byte	0x4b
 3784 00ac 24       		.byte	0x24
 3785 00ad 22       		.byte	0x22
 3786 00ae 2B       		.byte	0x2b
 3787 00af 28       		.byte	0x28
 3788 00b0 0100     		.2byte	0x1
 3789 00b2 16       		.byte	0x16
 3790 00b3 13       		.byte	0x13
 3791 00b4 9F       		.byte	0x9f
 3792 00b5 A2000000 		.4byte	.LVL7
 3793 00b9 C0000000 		.4byte	.LFE403
 3794 00bd 1600     		.2byte	0x16
 3795 00bf F3       		.byte	0xf3
 3796 00c0 01       		.uleb128 0x1
 3797 00c1 50       		.byte	0x50
 3798 00c2 12       		.byte	0x12
 3799 00c3 40       		.byte	0x40
 3800 00c4 4B       		.byte	0x4b
 3801 00c5 24       		.byte	0x24
 3802 00c6 22       		.byte	0x22
 3803 00c7 31       		.byte	0x31
 3804 00c8 16       		.byte	0x16
 3805 00c9 14       		.byte	0x14
 3806 00ca 40       		.byte	0x40
 3807 00cb 4B       		.byte	0x4b
 3808 00cc 24       		.byte	0x24
 3809 00cd 22       		.byte	0x22
 3810 00ce 2B       		.byte	0x2b
 3811 00cf 28       		.byte	0x28
 3812 00d0 0100     		.2byte	0x1
 3813 00d2 16       		.byte	0x16
 3814 00d3 13       		.byte	0x13
 3815 00d4 9F       		.byte	0x9f
 3816 00d5 00000000 		.4byte	0
 3817 00d9 00000000 		.4byte	0
 3818              	.LVUS2:
 3819 00dd 00       		.uleb128 .LVU50
 3820 00de 00       		.uleb128 .LVU56
 3821 00df 00       		.uleb128 .LVU56
 3822 00e0 00       		.uleb128 .LVU57
 3823              	.LLST2:
 3824 00e1 A6000000 		.4byte	.LVL8
 3825 00e5 AE000000 		.4byte	.LVL9
 3826 00e9 0100     		.2byte	0x1
 3827 00eb 50       		.byte	0x50
 3828 00ec AE000000 		.4byte	.LVL9
 3829 00f0 B0000000 		.4byte	.LVL10
 3830 00f4 0200     		.2byte	0x2
 3831 00f6 72       		.byte	0x72
 3832 00f7 2C       		.sleb128 44
 3833 00f8 00000000 		.4byte	0
 3834 00fc 00000000 		.4byte	0
 3835              		.section	.debug_aranges,"",%progbits
 3836 0000 24000000 		.4byte	0x24
 3837 0004 0200     		.2byte	0x2
 3838 0006 00000000 		.4byte	.Ldebug_info0
 3839 000a 04       		.byte	0x4
 3840 000b 00       		.byte	0
 3841 000c 0000     		.2byte	0
 3842 000e 0000     		.2byte	0
 3843 0010 00000000 		.4byte	.Ltext0
 3844 0014 04020000 		.4byte	.Letext0-.Ltext0
 3845 0018 00000000 		.4byte	.LFB409
 3846 001c 42080000 		.4byte	.LFE409-.LFB409
 3847 0020 00000000 		.4byte	0
 3848 0024 00000000 		.4byte	0
 3849              		.section	.debug_ranges,"",%progbits
 3850              	.Ldebug_ranges0:
 3851 0000 00000000 		.4byte	.Ltext0
 3852 0004 04020000 		.4byte	.Letext0
 3853 0008 00000000 		.4byte	.LFB409
 3854 000c 42080000 		.4byte	.LFE409
 3855 0010 00000000 		.4byte	0
 3856 0014 00000000 		.4byte	0
 3857              		.section	.debug_line,"",%progbits
 3858              	.Ldebug_line0:
 3859 0000 45060000 		.section	.debug_str,"MS",%progbits,1
 3859      0300FD00 
 3859      00000201 
 3859      FB0E0D00 
 3859      01010101 
 3860              	.LASF123:
 3861 0000 7072696E 		.ascii	"printf\000"
 3861      746600
 3862              	.LASF54:
 3863 0007 50555044 		.ascii	"PUPDR\000"
 3863      5200
 3864              	.LASF56:
 3865 000d 4C434B52 		.ascii	"LCKR\000"
 3865      00
 3866              	.LASF80:
 3867 0012 44494552 		.ascii	"DIER\000"
 3867      00
 3868              	.LASF136:
 3869 0017 7372632F 		.ascii	"src/main.c\000"
 3869      6D61696E 
 3869      2E6300
 3870              	.LASF0:
 3871 0022 7369676E 		.ascii	"signed char\000"
 3871      65642063 
 3871      68617200 
 3872              	.LASF52:
 3873 002e 4F545950 		.ascii	"OTYPER\000"
 3873      455200
 3874              	.LASF124:
 3875 0035 53797354 		.ascii	"SysTick_init\000"
 3875      69636B5F 
 3875      696E6974 
 3875      00
 3876              	.LASF82:
 3877 0042 43434D52 		.ascii	"CCMR2\000"
 3877      3200
 3878              	.LASF62:
 3879 0048 53574945 		.ascii	"SWIER\000"
 3879      5200
 3880              	.LASF107:
 3881 004e 6D657375 		.ascii	"mesure_potentiometre\000"
 3881      72655F70 
 3881      6F74656E 
 3881      74696F6D 
 3881      65747265 
 3882              	.LASF122:
 3883 0063 5F5F6275 		.ascii	"__builtin_memset\000"
 3883      696C7469 
 3883      6E5F6D65 
 3883      6D736574 
 3883      00
 3884              	.LASF7:
 3885 0074 6C6F6E67 		.ascii	"long long unsigned int\000"
 3885      206C6F6E 
 3885      6720756E 
 3885      7369676E 
 3885      65642069 
 3886              	.LASF112:
 3887 008b 534D5052 		.ascii	"SMPR\000"
 3887      00
 3888              	.LASF113:
 3889 0090 696E6974 		.ascii	"init_buzzer\000"
 3889      5F62757A 
 3889      7A657200 
 3890              	.LASF88:
 3891 009c 42445452 		.ascii	"BDTR\000"
 3891      00
 3892              	.LASF137:
 3893 00a1 2F686F6D 		.ascii	"/home/matthieu/Documents/IESE3/Projet_Final_MicroC/"
 3893      652F6D61 
 3893      74746869 
 3893      65752F44 
 3893      6F63756D 
 3894 00d4 50726F6A 		.ascii	"ProjetMicro/c_project\000"
 3894      65744D69 
 3894      63726F2F 
 3894      635F7072 
 3894      6F6A6563 
 3895              	.LASF32:
 3896 00ea 41484231 		.ascii	"AHB1LPENR\000"
 3896      4C50454E 
 3896      5200
 3897              	.LASF73:
 3898 00f4 4A535152 		.ascii	"JSQR\000"
 3898      00
 3899              	.LASF81:
 3900 00f9 43434D52 		.ascii	"CCMR1\000"
 3900      3100
 3901              	.LASF46:
 3902 00ff 44434B43 		.ascii	"DCKCFGR\000"
 3902      46475200 
 3903              	.LASF6:
 3904 0107 6C6F6E67 		.ascii	"long long int\000"
 3904      206C6F6E 
 3904      6720696E 
 3904      7400
 3905              	.LASF131:
 3906 0115 6765745F 		.ascii	"get_APB1TIMCLK\000"
 3906      41504231 
 3906      54494D43 
 3906      4C4B00
 3907              	.LASF55:
 3908 0124 42535252 		.ascii	"BSRR\000"
 3908      00
 3909              	.LASF16:
 3910 0129 41484231 		.ascii	"AHB1RSTR\000"
 3910      52535452 
 3910      00
 3911              	.LASF48:
 3912 0132 44434B43 		.ascii	"DCKCFGR2\000"
 3912      46475232 
 3912      00
 3913              	.LASF92:
 3914 013b 45585449 		.ascii	"EXTI\000"
 3914      00
 3915              	.LASF110:
 3916 0140 74656D70 		.ascii	"tempFreq\000"
 3916      46726571 
 3916      00
 3917              	.LASF39:
 3918 0149 5F726573 		.ascii	"_reserved_0x6c\000"
 3918      65727665 
 3918      645F3078 
 3918      366300
 3919              	.LASF4:
 3920 0158 6C6F6E67 		.ascii	"long int\000"
 3920      20696E74 
 3920      00
 3921              	.LASF21:
 3922 0161 41504232 		.ascii	"APB2RSTR\000"
 3922      52535452 
 3922      00
 3923              	.LASF36:
 3924 016a 41504231 		.ascii	"APB1LPENR\000"
 3924      4C50454E 
 3924      5200
 3925              	.LASF119:
 3926 0174 6D656D63 		.ascii	"memcpy\000"
 3926      707900
 3927              	.LASF83:
 3928 017b 43434552 		.ascii	"CCER\000"
 3928      00
 3929              	.LASF126:
 3930 0180 62757474 		.ascii	"button_init\000"
 3930      6F6E5F69 
 3930      6E697400 
 3931              	.LASF13:
 3932 018c 646F7562 		.ascii	"double\000"
 3932      6C6500
 3933              	.LASF115:
 3934 0193 656E6162 		.ascii	"enable_TIM2\000"
 3934      6C655F54 
 3934      494D3200 
 3935              	.LASF97:
 3936 019f 636F6D70 		.ascii	"compteur\000"
 3936      74657572 
 3936      00
 3937              	.LASF14:
 3938 01a8 504C4C43 		.ascii	"PLLCFGR\000"
 3938      46475200 
 3939              	.LASF94:
 3940 01b0 54494D32 		.ascii	"TIM2\000"
 3940      00
 3941              	.LASF41:
 3942 01b5 5F726573 		.ascii	"_reserved_0x78\000"
 3942      65727665 
 3942      645F3078 
 3942      373800
 3943              	.LASF135:
 3944 01c4 474E5520 		.ascii	"GNU C99 10.3.1 20210621 (release) -mtune=cortex-m4 "
 3944      43393920 
 3944      31302E33 
 3944      2E312032 
 3944      30323130 
 3945 01f7 2D6D7468 		.ascii	"-mthumb -mfloat-abi=hard -mfpu=fpv4-sp-d16 -march=a"
 3945      756D6220 
 3945      2D6D666C 
 3945      6F61742D 
 3945      6162693D 
 3946 022a 726D7637 		.ascii	"rmv7e-m+fp -g -O0 -Os -std=gnu99 -fsingle-precision"
 3946      652D6D2B 
 3946      6670202D 
 3946      67202D4F 
 3946      30202D4F 
 3947 025d 2D636F6E 		.ascii	"-constant\000"
 3947      7374616E 
 3947      7400
 3948              	.LASF53:
 3949 0267 4F535045 		.ascii	"OSPEEDR\000"
 3949      45445200 
 3950              	.LASF10:
 3951 026f 5F5F7569 		.ascii	"__uint32_t\000"
 3951      6E743332 
 3951      5F7400
 3952              	.LASF138:
 3953 027a 636F6E66 		.ascii	"configuration_potentiometre\000"
 3953      69677572 
 3953      6174696F 
 3953      6E5F706F 
 3953      74656E74 
 3954              	.LASF132:
 3955 0296 4144435F 		.ascii	"ADC_set_prediv\000"
 3955      7365745F 
 3955      70726564 
 3955      697600
 3956              	.LASF8:
 3957 02a5 756E7369 		.ascii	"unsigned int\000"
 3957      676E6564 
 3957      20696E74 
 3957      00
 3958              	.LASF51:
 3959 02b2 4D4F4445 		.ascii	"MODER\000"
 3959      5200
 3960              	.LASF108:
 3961 02b8 66726571 		.ascii	"frequence\000"
 3961      75656E63 
 3961      6500
 3962              	.LASF60:
 3963 02c2 52545352 		.ascii	"RTSR\000"
 3963      00
 3964              	.LASF5:
 3965 02c7 6C6F6E67 		.ascii	"long unsigned int\000"
 3965      20756E73 
 3965      69676E65 
 3965      6420696E 
 3965      7400
 3966              	.LASF26:
 3967 02d9 41484233 		.ascii	"AHB3ENR\000"
 3967      454E5200 
 3968              	.LASF19:
 3969 02e1 5F726573 		.ascii	"_reserved_0x1c\000"
 3969      65727665 
 3969      645F3078 
 3969      316300
 3970              	.LASF114:
 3971 02f0 696E6974 		.ascii	"init_timer\000"
 3971      5F74696D 
 3971      657200
 3972              	.LASF44:
 3973 02fb 504C4C49 		.ascii	"PLLI2SCFGR\000"
 3973      32534346 
 3973      475200
 3974              	.LASF18:
 3975 0306 41484233 		.ascii	"AHB3RSTR\000"
 3975      52535452 
 3975      00
 3976              	.LASF22:
 3977 030f 5F726573 		.ascii	"_reserved_0x28\000"
 3977      65727665 
 3977      645F3078 
 3977      323800
 3978              	.LASF130:
 3979 031e 4144435F 		.ascii	"ADC_convert_single_channel\000"
 3979      636F6E76 
 3979      6572745F 
 3979      73696E67 
 3979      6C655F63 
 3980              	.LASF37:
 3981 0339 41504232 		.ascii	"APB2LPENR\000"
 3981      4C50454E 
 3981      5200
 3982              	.LASF139:
 3983 0343 5F5F4453 		.ascii	"__DSB\000"
 3983      4200
 3984              	.LASF102:
 3985 0349 7665696C 		.ascii	"veille\000"
 3985      6C6500
 3986              	.LASF111:
 3987 0350 74656D70 		.ascii	"tempNewValue\000"
 3987      4E657756 
 3987      616C7565 
 3987      00
 3988              	.LASF117:
 3989 035d 656E6162 		.ascii	"enable_GPIOA\000"
 3989      6C655F47 
 3989      50494F41 
 3989      00
 3990              	.LASF118:
 3991 036a 656E6162 		.ascii	"enable_GPIOB\000"
 3991      6C655F47 
 3991      50494F42 
 3991      00
 3992              	.LASF68:
 3993 0377 4A4F4652 		.ascii	"JOFR3\000"
 3993      3300
 3994              	.LASF133:
 3995 037d 4144435F 		.ascii	"ADC_set_sampling_time\000"
 3995      7365745F 
 3995      73616D70 
 3995      6C696E67 
 3995      5F74696D 
 3996              	.LASF134:
 3997 0393 4144435F 		.ascii	"ADC_init_single_channel\000"
 3997      696E6974 
 3997      5F73696E 
 3997      676C655F 
 3997      6368616E 
 3998              	.LASF23:
 3999 03ab 5F726573 		.ascii	"_reserved_0x2c\000"
 3999      65727665 
 3999      645F3078 
 3999      326300
 4000              	.LASF96:
 4001 03ba 666C6167 		.ascii	"flag_v\000"
 4001      5F7600
 4002              	.LASF50:
 4003 03c1 4750494F 		.ascii	"GPIO_registers\000"
 4003      5F726567 
 4003      69737465 
 4003      727300
 4004              	.LASF79:
 4005 03d0 534D4352 		.ascii	"SMCR\000"
 4005      00
 4006              	.LASF100:
 4007 03d5 636F6D70 		.ascii	"compteur2\000"
 4007      74657572 
 4007      3200
 4008              	.LASF128:
 4009 03df 62757474 		.ascii	"buttonPC13_init\000"
 4009      6F6E5043 
 4009      31335F69 
 4009      6E697400 
 4010              	.LASF109:
 4011 03ef 6E657746 		.ascii	"newFreq\000"
 4011      72657100 
 4012              	.LASF129:
 4013 03f7 62757474 		.ascii	"buttonPC13_irq_init\000"
 4013      6F6E5043 
 4013      31335F69 
 4013      72715F69 
 4013      6E697400 
 4014              	.LASF33:
 4015 040b 41484232 		.ascii	"AHB2LPENR\000"
 4015      4C50454E 
 4015      5200
 4016              	.LASF64:
 4017 0415 534D5052 		.ascii	"SMPR1\000"
 4017      3100
 4018              	.LASF65:
 4019 041b 534D5052 		.ascii	"SMPR2\000"
 4019      3200
 4020              	.LASF20:
 4021 0421 41504231 		.ascii	"APB1RSTR\000"
 4021      52535452 
 4021      00
 4022              	.LASF70:
 4023 042a 53515231 		.ascii	"SQR1\000"
 4023      00
 4024              	.LASF71:
 4025 042f 53515232 		.ascii	"SQR2\000"
 4025      00
 4026              	.LASF72:
 4027 0434 53515233 		.ascii	"SQR3\000"
 4027      00
 4028              	.LASF91:
 4029 0439 4750494F 		.ascii	"GPIOA\000"
 4029      4100
 4030              	.LASF90:
 4031 043f 4750494F 		.ascii	"GPIOB\000"
 4031      4200
 4032              	.LASF58:
 4033 0445 41465248 		.ascii	"AFRH\000"
 4033      00
 4034              	.LASF12:
 4035 044a 666C6F61 		.ascii	"float\000"
 4035      7400
 4036              	.LASF57:
 4037 0450 4146524C 		.ascii	"AFRL\000"
 4037      00
 4038              	.LASF45:
 4039 0455 504C4C53 		.ascii	"PLLSAICFGR\000"
 4039      41494346 
 4039      475200
 4040              	.LASF116:
 4041 0460 656E6162 		.ascii	"enable_ADC1\000"
 4041      6C655F41 
 4041      44433100 
 4042              	.LASF27:
 4043 046c 5F726573 		.ascii	"_reserved_0x3c\000"
 4043      65727665 
 4043      645F3078 
 4043      336300
 4044              	.LASF1:
 4045 047b 756E7369 		.ascii	"unsigned char\000"
 4045      676E6564 
 4045      20636861 
 4045      7200
 4046              	.LASF61:
 4047 0489 46545352 		.ascii	"FTSR\000"
 4047      00
 4048              	.LASF2:
 4049 048e 73686F72 		.ascii	"short int\000"
 4049      7420696E 
 4049      7400
 4050              	.LASF120:
 4051 0498 6D656D73 		.ascii	"memset\000"
 4051      657400
 4052              	.LASF34:
 4053 049f 41484233 		.ascii	"AHB3LPENR\000"
 4053      4C50454E 
 4053      5200
 4054              	.LASF30:
 4055 04a9 5F726573 		.ascii	"_reserved_0x48\000"
 4055      65727665 
 4055      645F3078 
 4055      343800
 4056              	.LASF67:
 4057 04b8 4A4F4652 		.ascii	"JOFR2\000"
 4057      3200
 4058              	.LASF69:
 4059 04be 4A4F4652 		.ascii	"JOFR4\000"
 4059      3400
 4060              	.LASF29:
 4061 04c4 41504232 		.ascii	"APB2ENR\000"
 4061      454E5200 
 4062              	.LASF42:
 4063 04cc 5F726573 		.ascii	"_reserved_0x7c\000"
 4063      65727665 
 4063      645F3078 
 4063      376300
 4064              	.LASF11:
 4065 04db 75696E74 		.ascii	"uint32_t\000"
 4065      33325F74 
 4065      00
 4066              	.LASF78:
 4067 04e4 54494D78 		.ascii	"TIMx_registers\000"
 4067      5F726567 
 4067      69737465 
 4067      727300
 4068              	.LASF121:
 4069 04f3 5F5F6275 		.ascii	"__builtin_memcpy\000"
 4069      696C7469 
 4069      6E5F6D65 
 4069      6D637079 
 4069      00
 4070              	.LASF105:
 4071 0504 53797354 		.ascii	"SysTick_Handler\000"
 4071      69636B5F 
 4071      48616E64 
 4071      6C657200 
 4072              	.LASF95:
 4073 0514 666C6167 		.ascii	"flag\000"
 4073      00
 4074              	.LASF125:
 4075 0519 62757474 		.ascii	"button_irq_init\000"
 4075      6F6E5F69 
 4075      72715F69 
 4075      6E697400 
 4076              	.LASF9:
 4077 0529 63686172 		.ascii	"char\000"
 4077      00
 4078              	.LASF99:
 4079 052e 6D6F6465 		.ascii	"mode\000"
 4079      00
 4080              	.LASF31:
 4081 0533 5F726573 		.ascii	"_reserved_0x4c\000"
 4081      65727665 
 4081      645F3078 
 4081      346300
 4082              	.LASF89:
 4083 0542 444D4152 		.ascii	"DMAR\000"
 4083      00
 4084              	.LASF17:
 4085 0547 41484232 		.ascii	"AHB2RSTR\000"
 4085      52535452 
 4085      00
 4086              	.LASF101:
 4087 0550 74656D70 		.ascii	"tempo\000"
 4087      6F00
 4088              	.LASF98:
 4089 0556 6A746169 		.ascii	"jtaille\000"
 4089      6C6C6500 
 4090              	.LASF28:
 4091 055e 41504231 		.ascii	"APB1ENR\000"
 4091      454E5200 
 4092              	.LASF25:
 4093 0566 41484232 		.ascii	"AHB2ENR\000"
 4093      454E5200 
 4094              	.LASF3:
 4095 056e 73686F72 		.ascii	"short unsigned int\000"
 4095      7420756E 
 4095      7369676E 
 4095      65642069 
 4095      6E7400
 4096              	.LASF59:
 4097 0581 45585449 		.ascii	"EXTI_registers\000"
 4097      5F726567 
 4097      69737465 
 4097      727300
 4098              	.LASF43:
 4099 0590 53534347 		.ascii	"SSCGR\000"
 4099      5200
 4100              	.LASF84:
 4101 0596 43435231 		.ascii	"CCR1\000"
 4101      00
 4102              	.LASF85:
 4103 059b 43435232 		.ascii	"CCR2\000"
 4103      00
 4104              	.LASF86:
 4105 05a0 43435233 		.ascii	"CCR3\000"
 4105      00
 4106              	.LASF87:
 4107 05a5 43435234 		.ascii	"CCR4\000"
 4107      00
 4108              	.LASF47:
 4109 05aa 434B4741 		.ascii	"CKGATENR\000"
 4109      54454E52 
 4109      00
 4110              	.LASF40:
 4111 05b3 42444352 		.ascii	"BDCR\000"
 4111      00
 4112              	.LASF66:
 4113 05b8 4A4F4652 		.ascii	"JOFR1\000"
 4113      3100
 4114              	.LASF35:
 4115 05be 5F726573 		.ascii	"_reserved_0x5c\000"
 4115      65727665 
 4115      645F3078 
 4115      356300
 4116              	.LASF104:
 4117 05cd 45585449 		.ascii	"EXTI9_5_Handler\000"
 4117      395F355F 
 4117      48616E64 
 4117      6C657200 
 4118              	.LASF74:
 4119 05dd 4A445231 		.ascii	"JDR1\000"
 4119      00
 4120              	.LASF75:
 4121 05e2 4A445232 		.ascii	"JDR2\000"
 4121      00
 4122              	.LASF76:
 4123 05e7 4A445233 		.ascii	"JDR3\000"
 4123      00
 4124              	.LASF77:
 4125 05ec 4A445234 		.ascii	"JDR4\000"
 4125      00
 4126              	.LASF93:
 4127 05f1 41444331 		.ascii	"ADC1\000"
 4127      00
 4128              	.LASF24:
 4129 05f6 41484231 		.ascii	"AHB1ENR\000"
 4129      454E5200 
 4130              	.LASF15:
 4131 05fe 43464752 		.ascii	"CFGR\000"
 4131      00
 4132              	.LASF38:
 4133 0603 5F726573 		.ascii	"_reserved_0x68\000"
 4133      65727665 
 4133      645F3078 
 4133      363800
 4134              	.LASF103:
 4135 0612 45585449 		.ascii	"EXTI15_10_Handler\000"
 4135      31355F31 
 4135      305F4861 
 4135      6E646C65 
 4135      7200
 4136              	.LASF63:
 4137 0624 41444378 		.ascii	"ADCx_registers\000"
 4137      5F726567 
 4137      69737465 
 4137      727300
 4138              	.LASF106:
 4139 0633 6D61696E 		.ascii	"main\000"
 4139      00
 4140              	.LASF49:
 4141 0638 5243435F 		.ascii	"RCC_registers\000"
 4141      72656769 
 4141      73746572 
 4141      7300
 4142              	.LASF127:
 4143 0646 6C65645F 		.ascii	"led_init\000"
 4143      696E6974 
 4143      00
 4144              		.ident	"GCC: (15:10.3-2021.07-4) 10.3.1 20210621 (release)"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc3lCD4B.s:17     .text:0000000000000000 $t
     /tmp/cc3lCD4B.s:25     .text:0000000000000000 init_timer
     /tmp/cc3lCD4B.s:67     .text:000000000000002c $d
     /tmp/cc3lCD4B.s:71     .text:0000000000000030 $t
     /tmp/cc3lCD4B.s:78     .text:0000000000000030 init_buzzer
     /tmp/cc3lCD4B.s:101    .text:0000000000000044 $d
     /tmp/cc3lCD4B.s:105    .text:0000000000000048 $t
     /tmp/cc3lCD4B.s:112    .text:0000000000000048 configuration_potentiometre
     /tmp/cc3lCD4B.s:184    .text:0000000000000080 $d
     /tmp/cc3lCD4B.s:190    .text:000000000000008c $t
     /tmp/cc3lCD4B.s:197    .text:000000000000008c frequence
     /tmp/cc3lCD4B.s:260    .text:00000000000000bc $d
     /tmp/cc3lCD4B.s:264    .text:00000000000000c0 $t
     /tmp/cc3lCD4B.s:271    .text:00000000000000c0 mesure_potentiometre
     /tmp/cc3lCD4B.s:301    .text:00000000000000d0 $d
     /tmp/cc3lCD4B.s:305    .text:00000000000000d4 $t
     /tmp/cc3lCD4B.s:312    .text:00000000000000d4 SysTick_Handler
     /tmp/cc3lCD4B.s:421    .text:0000000000000164 $d
     /tmp/cc3lCD4B.s:427    .text:0000000000000170 $t
     /tmp/cc3lCD4B.s:434    .text:0000000000000170 EXTI9_5_Handler
     /tmp/cc3lCD4B.s:507    .text:00000000000001ac $d
     /tmp/cc3lCD4B.s:513    .text:00000000000001b8 $t
     /tmp/cc3lCD4B.s:520    .text:00000000000001b8 EXTI15_10_Handler
     /tmp/cc3lCD4B.s:560    .text:00000000000001e0 $d
     /tmp/cc3lCD4B.s:565    .text:00000000000001e8 $t
     /tmp/cc3lCD4B.s:572    .text:00000000000001e8 veille
     /tmp/cc3lCD4B.s:599    .text:00000000000001f8 $d
     /tmp/cc3lCD4B.s:615    .text.startup:0000000000000000 $t
     /tmp/cc3lCD4B.s:622    .text.startup:0000000000000000 main
     /tmp/cc3lCD4B.s:908    .text.startup:0000000000000400 $d
     /tmp/cc3lCD4B.s:910    .text.startup:0000000000000404 $t
     /tmp/cc3lCD4B.s:1445   .text.startup:00000000000007c0 $d
     /tmp/cc3lCD4B.s:1456   .text.startup:00000000000007e0 $t
     /tmp/cc3lCD4B.s:1554   .bss:0000000000000008 tempo
     /tmp/cc3lCD4B.s:1535   .data:0000000000000000 compteur2
     /tmp/cc3lCD4B.s:1570   .bss:0000000000000018 mode
     /tmp/cc3lCD4B.s:1562   .bss:0000000000000010 i
     /tmp/cc3lCD4B.s:1539   .data:0000000000000004 jtaille
     /tmp/cc3lCD4B.s:1558   .bss:000000000000000c j
     /tmp/cc3lCD4B.s:1546   .bss:0000000000000000 compteur
     /tmp/cc3lCD4B.s:1566   .bss:0000000000000014 flag_v
     /tmp/cc3lCD4B.s:1550   .bss:0000000000000004 flag
     /tmp/cc3lCD4B.s:1525   .rodata:0000000000000020 $d
     /tmp/cc3lCD4B.s:1531   .data:0000000000000000 $d
     /tmp/cc3lCD4B.s:1542   .bss:0000000000000000 $d

UNDEFINED SYMBOLS
TIM2
GPIOB
ADC_set_prediv
ADC_set_sampling_time
ADC_init_single_channel
RCC
ADC1
get_APB1TIMCLK
ADC_convert_single_channel
EXTI
memcpy
memset
printf
SysTick_init
button_irq_init
button_init
led_init
buttonPC13_init
buttonPC13_irq_init
GPIOA
